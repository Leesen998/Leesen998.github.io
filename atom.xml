<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QJun</title>
  
  <subtitle>QJun&#39;s Homepage</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://leesen998.github.io/"/>
  <updated>2018-10-11T09:05:40.367Z</updated>
  <id>https://leesen998.github.io/</id>
  
  <author>
    <name>QJun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello</title>
    <link href="https://leesen998.github.io/2018/10/02/hello-world/"/>
    <id>https://leesen998.github.io/2018/10/02/hello-world/</id>
    <published>2018-10-02T02:52:42.283Z</published>
    <updated>2018-10-11T09:05:40.367Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://source.unsplash.com/random/1800x900" alt="" style="width:100%"><br>只是单纯地发个图片<br><a id="more"></a></p><pre><code>hexo deploy11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111hexo deploy</code></pre><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://source.unsplash.com/random/1800x900&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;br&gt;只是单纯地发个图片&lt;br&gt;
    
    </summary>
    
      <category term="first test" scheme="https://leesen998.github.io/categories/first-test/"/>
    
    
      <category term="test" scheme="https://leesen998.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>AS环境配置踩坑经历</title>
    <link href="https://leesen998.github.io/2016/10/03/AS%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91%E7%BB%8F%E5%8E%86/"/>
    <id>https://leesen998.github.io/2016/10/03/AS环境配置踩坑经历/</id>
    <published>2016-10-03T02:41:53.000Z</published>
    <updated>2018-10-11T13:02:02.444Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://source.unsplash.com/random/1600x900" alt="" style="width:100%"></p><a id="more"></a><h2 id="遇到的bug"><a href="#遇到的bug" class="headerlink" title="遇到的bug"></a><font color="#551A8B" size="">遇到的bug</font></h2><pre><code>Unable to resolve dependency for &apos;:app@debug/compileClasspath&apos;</code></pre><p>这是由于配置文件的依赖是通过Google下载的，然而该下载被墙了！<br>[解决办法]：</p><h3 id="在整个工程的build-gradle中添加以下框内代码："><a href="#在整个工程的build-gradle中添加以下框内代码：" class="headerlink" title="在整个工程的build.gradle中添加以下框内代码："></a>在整个工程的build.gradle中添加以下框内代码：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">maven &#123;</span><br><span class="line">        url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span></span><br><span class="line">        &#125;</span><br><span class="line">maven &#123; url <span class="string">'http://repo1.maven.org/maven2'</span> &#125;</span><br></pre></td></tr></table></figure><h3 id="app下的build-gradle配置如下"><a href="#app下的build-gradle配置如下" class="headerlink" title="app下的build.gradle配置如下:"></a>app下的build.gradle配置如下:</h3><p>buildToolsVersion 需要和你的sdk安装目录 ~\sdk\build-tools文件里面已有的版本对应<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion 26</span><br><span class="line">    buildToolsVersion <span class="string">'27.0.3'</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"com.example.administrator.myapplication"</span></span><br><span class="line">        minSdkVersion 19</span><br><span class="line">        targetSdkVersion 22</span><br><span class="line">        versionCode 1</span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>implementation ‘com.android.support:appcompat-v7:26.+’ 中v7:26.+表示使用的sdk版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(dir: <span class="string">'libs'</span>, include: [<span class="string">'*.jar'</span>])</span><br><span class="line">    implementation <span class="string">'com.android.support:appcompat-v7:26.+'</span></span><br><span class="line">    implementation <span class="string">'com.android.support.constraint:constraint-layout:1.0.2'</span></span><br><span class="line">    testImplementation <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test:runner:0.4'</span></span><br><span class="line">    androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:2.2.2'</span></span><br><span class="line">//    androidTestImplementation <span class="string">'com.android.support.test:runner:1.0.1'</span></span><br><span class="line">//    androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:3.0.1'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="若配置后还没解决问题，依然报错"><a href="#若配置后还没解决问题，依然报错" class="headerlink" title="若配置后还没解决问题，依然报错"></a>若配置后还没解决问题，依然报错</h3><p><font color="#FF00FF" size="">打开 C:/Users/(用户名)/.gradle/gradle.properties</font><br>把http代理的配置注释掉，例如：</p><pre><code>## For more details on how to configure your build environment visit# http://www.gradle.org/docs/current/userguide/build_environment.html## Specifies the JVM arguments used for the daemon process.# The setting is particularly useful for tweaking memory settings.# Default value: -Xmx1024m -XX:MaxPermSize=256m# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8## When configured, Gradle will run in incubating parallel mode.# This option should only be used with decoupled projects. More details, visit# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects# org.gradle.parallel=true#Sat Sep 29 23:37:12 CST 2018#systemProp.http.proxyHost=mirrors.neusoft.edu.cn#systemProp.https.proxyPort=80#systemProp.https.proxyHost=mirrors.neusoft.edu.cn#systemProp.http.proxyPort=80</code></pre><p>More info: <a href="https://blog.csdn.net/magicbaby810/article/details/79848425" target="_blank" rel="noopener">参考该问题的csdn博客</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://source.unsplash.com/random/1600x900&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="软件安装" scheme="https://leesen998.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
    
      <category term="AS" scheme="https://leesen998.github.io/tags/AS/"/>
    
  </entry>
  
  <entry>
    <title>java入门</title>
    <link href="https://leesen998.github.io/2016/10/02/java%E5%85%A5%E9%97%A8/"/>
    <id>https://leesen998.github.io/2016/10/02/java入门/</id>
    <published>2016-10-02T03:59:18.000Z</published>
    <updated>2018-10-08T09:03:21.126Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://desk-fd.zol-img.com.cn/t_s1920x1080c5/g5/M00/00/0C/ChMkJ1gF5IyIVpQZAAfWfSNJAuoAAXABwHjE1wAB9aV014.jpg" alt="" style="width:100%"><br>java入门笔记<br><a id="more"></a></p><h2 id="第一个Java程序"><a href="#第一个Java程序" class="headerlink" title="第一个Java程序"></a><font color="#551A8B" size="">第一个Java程序</font></h2><h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><font color="#00CD66" size="">Java代码</font></h3><p>Java程序是大小写敏感的 对格式没有严格要求，但用空格或Tab键缩进会比较好看</p><h3 id="Hello-java"><a href="#Hello-java" class="headerlink" title="Hello.java"></a><font color="#D66" size="">Hello.java</font></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public class Hello &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">System.out.println(<span class="string">"Hello, world!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件名必须是Hello.java，文件名也要注意大小写，必须与程序的类名完全一致，扩展名是.java。</p><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a><font color="#DD66" size="">编译</font></h3><p>切换到Hello.java所在目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac Hello.java</span><br></pre></td></tr></table></figure></p><p>无任何输出表示成功，可查看编译出的Hello.class文件。</p><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a><font color="#3D66" size="">执行</font></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java Hello</span><br></pre></td></tr></table></figure><p>代码格式：public 和 static 是修饰符static表示静态方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public class 类名 &#123;</span><br><span class="line">public static void 方法名(参数) &#123;</span><br><span class="line">//单行注释</span><br><span class="line">你的程序代码;</span><br><span class="line">/*</span><br><span class="line">多行注释</span><br><span class="line">*/</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//class定义结束</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a><font color="#551A8B" size="">变量</font></h2><h3 id="变量概述"><a href="#变量概述" class="headerlink" title="变量概述"></a>变量概述</h3><p>A: 什么是变量?<br>        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a: 变量是一个内存中的小盒子（小容器），容器是什么？生活中也有很多容器，例如水杯是容器，用来装载水；你家里的大衣柜是容器，用来装载衣裤；饭盒是容器，用来装载饭菜。那么变量是装载什么的呢？</span><br><span class="line">答案是数据！结论：变量是内存中装载数据的小盒子，你只能用它来存数据和取数据。</span><br></pre></td></tr></table></figure></p><h3 id="计算机存储单元"><a href="#计算机存储单元" class="headerlink" title="计算机存储单元"></a>计算机存储单元</h3><p>A: 计算机中储存和运算的最小单位是?<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a: 一个字节,也就是一个byte.</span><br><span class="line"> win+r--cmd--回车</span><br><span class="line">b: 常用储存单位</span><br><span class="line">*1B（字节） = 8bit</span><br><span class="line">*1KB = 1024B</span><br><span class="line">*1MB = 1024KB</span><br><span class="line">*1GB = 1024MB</span><br><span class="line">*1TB = 1024GB</span><br><span class="line">*1PB = 1024TB</span><br></pre></td></tr></table></figure></p><h3 id="Java中数据类型四类八种"><a href="#Java中数据类型四类八种" class="headerlink" title="Java中数据类型四类八种"></a>Java中数据类型四类八种</h3><p> A: 数据类型四类八种<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*四类八种字节数数据表示范围</span><br><span class="line">*整型byte1-128～127</span><br><span class="line">short2-32768～32767</span><br><span class="line">int4-2147483648～2147483648</span><br><span class="line">long8-263～263-1</span><br><span class="line">*浮点型<span class="built_in">float</span>4-3.403E38～3.403E38</span><br><span class="line">double8-1.798E308～1.798E308</span><br><span class="line">*字符型char2表示一个字符，如(<span class="string">'a'</span>，<span class="string">'A'</span>，<span class="string">'0'</span>，<span class="string">'家'</span>)</span><br><span class="line">*布尔型boolean1只有两个值<span class="literal">true</span>与<span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h3 id="常量和数据类型"><a href="#常量和数据类型" class="headerlink" title="常量和数据类型"></a>常量和数据类型</h3><p> A:常量的定义<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* a: 整形常量默认是int类型</span><br><span class="line">* b: 小数常量默认是double类型</span><br><span class="line">* c: 定义长整形数据如果值超过int取值范围后面要+<span class="string">"L"</span></span><br><span class="line">* d: 定义<span class="built_in">float</span>类型的数据后面要+<span class="string">"f"</span> 否则默认是double</span><br></pre></td></tr></table></figure></p><h3 id="变量创建的三要素"><a href="#变量创建的三要素" class="headerlink" title="变量创建的三要素"></a>变量创建的三要素</h3><p>A: 定义变量的语法格式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">数据类型  变量名  =  变量值;</span><br><span class="line">* int         a    =  100;</span><br><span class="line">      * B:代码:</span><br><span class="line">public class Variable &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int a = 10;</span><br><span class="line">double b = 3.14;</span><br><span class="line">char c = <span class="string">'z'</span>;</span><br><span class="line">String s = <span class="string">"i love java"</span>;</span><br><span class="line"></span><br><span class="line">a = 20;</span><br><span class="line">System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="定义所有的基本数据类型变量"><a href="#定义所有的基本数据类型变量" class="headerlink" title="定义所有的基本数据类型变量"></a>定义所有的基本数据类型变量</h3><ul><li><p>A: 案例演示</p><ul><li>a: 八种基本类型数据的创建</li></ul></li></ul><h3 id="定义字符串变量"><a href="#定义字符串变量" class="headerlink" title="定义字符串变量"></a>定义字符串变量</h3><ul><li>A：案例演示<ul><li>创建字符串数据类型变量</li><li>String 是引用数据类型<h3 id="变量定义使用注意事项"><a href="#变量定义使用注意事项" class="headerlink" title="变量定义使用注意事项"></a>变量定义使用注意事项</h3></li></ul></li><li>A：变量使用的注意事项<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">* a: 变量定义后可以不赋值，使用时再赋值。不赋值不能使用。</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int x;</span><br><span class="line">x = 20; //为x赋值20</span><br><span class="line">System.out.println(x);//读取x变量中的值，再打印</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">* c:变量使用时有作用域的限制。</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int x = 20;</span><br><span class="line">&#123;</span><br><span class="line">    int y = 20;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(x);//读取x变量中的值，再打印</span><br><span class="line">System.out.println(y);//读取y变量中的值失败，失败原因，找不到y变量，因为超出了y变量作用范围，所以不能使用y变量</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="数据类型转换-自动转换"><a href="#数据类型转换-自动转换" class="headerlink" title="数据类型转换_自动转换"></a>数据类型转换_自动转换</h3><ul><li>A:     自动类型转换<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* a:表示范围小的数据类型转换成范围大的数据类型，这种方式称为自动类型转换</span><br><span class="line">自动类型转换格式：</span><br><span class="line">范围大的数据类型 变量 = 范围小的数据类型值；</span><br><span class="line">如：</span><br><span class="line">    double d = 1000;</span><br><span class="line">或</span><br><span class="line">    int i = 100;</span><br><span class="line">    double d2 = i;</span><br></pre></td></tr></table></figure></li></ul><h3 id="数据类型转换-强制转换"><a href="#数据类型转换-强制转换" class="headerlink" title="数据类型转换_强制转换"></a>数据类型转换_强制转换</h3><ul><li>A: 强制类型转换<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*a: 表示范围大的数据类型转换成范围小的数据类型，这种方式称为强制类型转换</span><br><span class="line">*b: 强制类型转换格式：</span><br><span class="line">范围小的数据类型  变量 = (范围小的数据类型) 范围大的数据类型值;</span><br><span class="line">如：</span><br><span class="line">int  i = (int)6.718;   //i的值为6</span><br><span class="line">或</span><br><span class="line">double  d = 3.14;</span><br><span class="line">int  i2 = (int)d;     //i2的值为3</span><br></pre></td></tr></table></figure></li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a><font color="#551A8B" size="">运算符</font></h2><h3 id="算数运算符-1"><a href="#算数运算符-1" class="headerlink" title="算数运算符_1"></a>算数运算符_1</h3><ul><li><p>A: 常见操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">运算符运算规则范例结果</span><br><span class="line">+正号+33</span><br><span class="line">+加2+35</span><br><span class="line">+连接字符串“中”+“国”“中国”</span><br><span class="line">-负号int a=3;-a-3</span><br><span class="line">-减3-12</span><br><span class="line">*乘2*36</span><br><span class="line">/除5/22</span><br><span class="line">%取模5/21</span><br><span class="line">++自增int a=1;a++/++a2</span><br><span class="line">--自减int b=3;a--/--a2</span><br></pre></td></tr></table></figure></li><li><p>B: 注意事项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*a:加法运算符在连接字符串时要注意，只有直接与字符串相加才会转成字符串。</span><br><span class="line">*b:除法“/”当两边为整数时，取整数部分，舍余数。当其中一边为浮点型时，按正常规则相除。 </span><br><span class="line">*c:“%”为整除取余符号，小数取余没有意义。结果符号与被取余符号相同。</span><br><span class="line">*d:整数做被除数，0不能做除数，否则报错。</span><br><span class="line">*e:小数做被除数，整除0结果为Infinity，对0取模结果为NaN</span><br></pre></td></tr></table></figure></li><li><p>C:代码演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public class OperatorDemo1 &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">/*</span><br><span class="line"> * 常量使用算数运算符</span><br><span class="line"> */</span><br><span class="line">System.out.println(10+20);</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 变量使用算数运算符</span><br><span class="line"> */</span><br><span class="line">int x = 10;</span><br><span class="line">int y = 20;</span><br><span class="line">//<span class="string">"+"</span>作为加法运算使用</span><br><span class="line">int z = x + y; </span><br><span class="line">//<span class="string">"+"</span>作为连接字符串使用</span><br><span class="line">System.out.println(<span class="string">"x="</span>+x);</span><br><span class="line">System.out.println(<span class="string">"y="</span>+y);</span><br><span class="line">System.out.println(<span class="string">"z="</span>+z);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="算数运算符-2"><a href="#算数运算符-2" class="headerlink" title="算数运算符_2"></a>算数运算符_2</h3><ul><li>算数运算符++、–<pre><code>* A:算数运算符++、--的使用    * a: ++运算符，会在原有值的基础上自增1    * b: --运算符，会在原有值的基础上自减1。* B:++  -- 位置的使用    * a:++,--运算符后置时，先使用变量a原有值参与运算操作，运算操作完成后，变量a的值自增1或者自减1；    * b:++，--运算符前置时，先将变量a的值自增1或者自减1，然后使用更新后的新值参与运算操作。</code></pre></li></ul><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><ul><li><p>A: 赋值运算符的使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">运算符 运算规则范例结果</span><br><span class="line">=赋值int a=22</span><br><span class="line">+=加后赋值int a=2，a+=24</span><br><span class="line">-=减后赋值int a=2，a-=20</span><br><span class="line">*=乘后赋值int a=2，a*=24</span><br><span class="line">/=整除后赋值int a=2，a/=21</span><br><span class="line">%=取模后赋值int a=2，a%=20</span><br></pre></td></tr></table></figure></li><li><p>B：案例演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> * 赋值运算符</span><br><span class="line"> * +=, -=, *=, /=, %= ： </span><br><span class="line"> * 上面的运算符作用：将等号左右两边计算，会将结果自动强转成等号左边的数据类型,再赋值给等号左边的</span><br><span class="line"> * 注意：赋值运算符左边必须是变量</span><br><span class="line"></span><br><span class="line">public class OperatorDemo2 &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">byte x = 10;</span><br><span class="line">x += 20;// 相当于 x = (byte)(x+20);</span><br><span class="line">System.out.println(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><ul><li>A:比较运算符的使用</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">运算符运算规则范例结果</span><br><span class="line">==相等于4==3False</span><br><span class="line">!=不等于4!=3True</span><br><span class="line">&lt;小于4&lt;3False</span><br><span class="line">&gt;大于4&gt;3True</span><br><span class="line">&lt;=小于等于4&lt;=3False</span><br><span class="line">&gt;=大于等于        4&gt;=3True</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>A: 逻辑运算符的使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">运算符运算规则范例结果</span><br><span class="line">&amp;与<span class="literal">false</span>&amp;<span class="literal">true</span>False</span><br><span class="line">|或<span class="literal">false</span>|<span class="literal">true</span>True</span><br><span class="line">^异或<span class="literal">true</span>^flaseTrue</span><br><span class="line">!非!<span class="literal">true</span>Flase</span><br><span class="line">&amp;&amp;短路与<span class="literal">false</span>&amp;&amp;<span class="literal">true</span>False</span><br><span class="line">||短路或<span class="literal">false</span>||<span class="literal">true</span>True</span><br><span class="line"></span><br><span class="line">规律小结:</span><br><span class="line">短路与&amp;&amp;:参与运算的两边数据，有<span class="literal">false</span>，则运算结果为<span class="literal">false</span>；</span><br><span class="line">短路或||:参与运算的两边数据，有<span class="literal">true</span>，则运算结果为<span class="literal">true</span>；</span><br><span class="line">逻辑非! : 参与运算的数据，原先是<span class="literal">true</span>则变成<span class="literal">false</span>，原先是<span class="literal">false</span>则变成<span class="literal">true</span>。</span><br></pre></td></tr></table></figure><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><ul><li>A: 格式:</li><li><pre><code>(条件表达式)？表达式1：表达式2；</code></pre></li><li><p>B: 代码案例</p><pre><code>方式一：System.out.println( 3&gt;2 ? “正确” : “错误” ); // 三元运算符运算后的结果为true，运算结果为表达式1的值“正确”，然后将结果“正确”，在控制台输出打印方式二：int a = 3;int b = 4;String result = (a==b) ? “相等” : “不相等”;  //三元运算符运算后的结果为false，运算结果为表达式2的值“不相等”，然后将结果赋值给了变量result方式三：int n = (3&gt;2 &amp;&amp; 4&gt;6) ? 100 : 200;//三元运算符运算后的结果为false，运算结果为表达式2的值200,然后将结果200赋值给了变量n</code></pre></li></ul><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">优先级描述运算符</span><br><span class="line">1括号()、[]</span><br><span class="line">2正负号+、-</span><br><span class="line">3自增自减，非++、--、!</span><br><span class="line">4乘除，取余*、/、%</span><br><span class="line">5加减+、-</span><br><span class="line">6移位运算&lt;&lt;、&gt;&gt;、&gt;&gt;&gt;</span><br><span class="line">7大小关系&gt;、&gt;=、&lt;、&lt;=</span><br><span class="line">8相等关系==、!=</span><br><span class="line">9按位与&amp;</span><br><span class="line">10按位异或^</span><br><span class="line">11按位或|</span><br><span class="line">12逻辑与&amp;&amp;</span><br><span class="line">13逻辑或||</span><br><span class="line">14条件运算?:</span><br><span class="line">15赋值运算=、+=、-=、*=、/=、%=</span><br><span class="line">16位赋值运算&amp;=、|=、&lt;&lt;=、&gt;&gt;=、&gt;&gt;&gt;=</span><br></pre></td></tr></table></figure><h3 id="商场库存清单案例"><a href="#商场库存清单案例" class="headerlink" title="商场库存清单案例"></a>商场库存清单案例</h3><p>A: 案例分析.</p><ul><li>a:观察清单后，可将清单分解为三个部分（清单顶部、清单中部、清单底部）</li><li>b:清单顶部为固定的数据，直接打印即可</li><li><p>c:清单中部为商品，为变化的数据，需要记录商品信息后，打印<br>经过观察，我们确定一项商品应该有如下几个属性：<br>品牌型号: 即商品名称，String型<br>尺寸：物品大小，double型<br>价格：物品单价，double型<br>配置：这一项为每种商品的配置信息，String型<br>库存数：这一项为每种商品的库存个数，int型</p></li><li><p>d:清单底部包含了统计操作，需经过计算后，打印<br>我们发现两个单独的可变化量<br>总库存数：所有商品总个数，int型<br>库存商品总金额：所有商品金额，double型</p></li></ul><p>B: 案例代码实现<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">//步骤一:  创建Demo01库存清单.java文件，编写main主方法</span><br><span class="line">public class Demo01库存清单 &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//步骤二:  记录每种库存商品信息</span><br><span class="line">//苹果笔记本电脑</span><br><span class="line">String macBrand = <span class="string">"MacBookAir"</span>;</span><br><span class="line">double macSize = 13.3;</span><br><span class="line">double macPrice = 6988.88;</span><br><span class="line">int macCount = 5;</span><br><span class="line"></span><br><span class="line">//联想Thinkpad笔记本电脑</span><br><span class="line">String thinkpadBrand = <span class="string">"ThinkpadT450"</span>;</span><br><span class="line">double thinkpadSize = 14.0;</span><br><span class="line">double thinkpadPrice = 5999.99;</span><br><span class="line">int thinkpadCount = 10;</span><br><span class="line"></span><br><span class="line">//华硕ASUS笔记本电脑</span><br><span class="line">String ASUSBrand = <span class="string">"ASUS-FL5800"</span>;</span><br><span class="line">double ASUSSize = 15.6;</span><br><span class="line">double ASUSPrice = 4999.50;</span><br><span class="line">int ASUSCount = 18;</span><br><span class="line"></span><br><span class="line">//步骤三: 统计库存总个数、库存总金额</span><br><span class="line">int totalCount = macCount + thinkpadCount + ASUSCount;</span><br><span class="line">double totalMoney = (macCount * macPrice) + (thinkpadCount * thinkpadPrice) + (ASUSCount * ASUSPrice);</span><br><span class="line"></span><br><span class="line">//步骤四: 列表顶部</span><br><span class="line">System.out.println(<span class="string">"------------------------------商城库存清单-----------------------------"</span>);</span><br><span class="line">System.out.println(<span class="string">"品牌型号尺寸价格库存数"</span>);</span><br><span class="line"></span><br><span class="line">步骤四:打印库存清单中部信息</span><br><span class="line">//列表中部</span><br><span class="line">System.out.println(macBrand+<span class="string">""</span>+macSize+<span class="string">""</span>+macPrice+<span class="string">""</span>+macCount);</span><br><span class="line">System.out.println(thinkpadBrand+<span class="string">""</span>+thinkpadSize+<span class="string">""</span>+thinkpadPrice+<span class="string">""</span>+thinkpadCount);</span><br><span class="line">System.out.println(ASUSBrand+<span class="string">""</span>+ASUSSize+<span class="string">""</span>+ASUSPrice+<span class="string">""</span>ASUSCount);</span><br><span class="line">打印库存清单底部信息</span><br><span class="line">//列表底部</span><br><span class="line">System.out.println(<span class="string">"-----------------------------------------------------------------------"</span>);</span><br><span class="line">System.out.println(<span class="string">"总库存数："</span>+totalCount); </span><br><span class="line">System.out.println(<span class="string">"库存商品总金额："</span>+totalMoney);</span><br></pre></td></tr></table></figure></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://desk-fd.zol-img.com.cn/t_s1920x1080c5/g5/M00/00/0C/ChMkJ1gF5IyIVpQZAAfWfSNJAuoAAXABwHjE1wAB9aV014.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;br&gt;java入门笔记&lt;br&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://leesen998.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="java" scheme="https://leesen998.github.io/tags/java/"/>
    
  </entry>
  
</feed>
