<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QJun</title>
  
  <subtitle>QJun&#39;s Homepage</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://leesen998.github.io/"/>
  <updated>2019-03-15T10:00:06.257Z</updated>
  <id>https://leesen998.github.io/</id>
  
  <author>
    <name>QJun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习算法优缺点对比及选择-小结</title>
    <link href="https://leesen998.github.io/2016/12/26/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%BC%98%E7%BC%BA%E7%82%B9%E5%AF%B9%E6%AF%94%E5%8F%8A%E9%80%89%E6%8B%A9/"/>
    <id>https://leesen998.github.io/2016/12/26/机器学习算法优缺点对比及选择/</id>
    <published>2016-12-26T11:48:29.000Z</published>
    <updated>2019-03-15T10:00:06.257Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://desk-fd.zol-img.com.cn/t_s1920x1080c5/g2/M00/0C/00/ChMlWVyA5JyIFsD7AArXsWw3WSoAAIp9gN0N1UACtfJ346.jpg" alt="" style="width:100%"></p><p>机器学习算法优缺点对比及选择</p><a id="more"></a><p>机器学习算法太多了，分类、回归、聚类、推荐、图像识别领域等等，要想找到一个合适算法真的不容易，所以在实际应用中，我们一般都是采用启发式学习方式来实验。通常最开始我们都会选择大家普遍认同的算法，诸如SVM，GBDT，Adaboost，现在深度学习很火热，神经网络也是一个不错的选择。</p><p>假如你在乎精度（accuracy）的话，最好的方法就是通过交叉验证（cross-validation）对各个算法一个个地进行测试，进行比较，然后调整参数确保每个算法达到最优解，最后选择最好的一个。但是如果你只是在寻找一个“足够好”的算法来解决你的问题，或者这里有些技巧可以参考，下面来分析下各个算法的优缺点，基于算法的优缺点，更易于我们去选择它。</p><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h3><p>在机器学习领域，一个基本的定理就是“没有免费的午餐”。<strong>换言之，就是没有算法能完美地解决所有问题，尤其是对监督学习而言（例如预测建模）</strong>。</p><p>举例来说，你不能去说神经网络任何情况下都能比决策树更有优势，反之亦然。它们要受很多因素的影响，比如你的数据集的规模或结构。</p><p>其结果是，在用给定的测试集来评估性能并挑选算法时，你应当根据具体的问题来采用不同的算法。</p><p>当然，<strong>所选的算法必须要适用于你自己的问题，这就要求选择正确的机器学习任务。</strong>作为类比，如果你需要打扫房子，你可能会用到吸尘器、扫帚或是拖把，但你绝对不该掏出铲子来挖地。</p><h3 id="2-偏差-amp-方差"><a href="#2-偏差-amp-方差" class="headerlink" title="**2. 偏差&amp;方差"></a>**2. 偏差&amp;方差</h3><p>在统计学中，一个模型好坏，是根据偏差和方差来衡量的，所以我们先来普及一下偏差(bias)和方差(variance)：</p><ul><li><p>偏差：描述的是预测值（估计值）的期望E’与真实值Y之间的差距。偏差越大，越偏离真实数据。</p></li><li><p>方差：描述的是预测值P的变化范围，离散程度，是预测值的方差，也就是离其期望值E的距离。方差越大，数据的分布越分散。</p></li></ul><p>模型的真实误差是两者之和，如公式：</p><p>通常情况下，如果是<strong>小训练集，高偏差/低方差的分类器（例如，朴素贝叶斯NB）要比低偏差/高方差大分类的优势大（例如，KNN）</strong>，<strong>因为后者会发生过拟合（overfiting）</strong>。<br>然而，<strong>随着你训练集的增长，模型对于原数据的预测能力就越好，偏差就会降低，此时低偏差/高方差的分类器就会渐渐的表现其优势（因为它们有较低的渐近误差），而高偏差分类器这时已经不足以提供准确的模型了。</strong></p><p><strong>为什么说朴素贝叶斯是高偏差低方差?</strong></p><p>以下内容引自知乎：</p><p>首先，假设你知道训练集和测试集的关系。简单来讲是我们要在训练集上学习一个模型，然后拿到测试集去用，效果好不好要根据测试集的错误率来衡量。但很多时候，我们只能假设测试集和训练集的是符合同一个数据分布的，但却拿不到真正的测试数据。这时候怎么在只看到训练错误率的情况下，去衡量测试错误率呢？</p><p>由于训练样本很少（至少不足够多），所以通过训练集得到的模型，总不是真正正确的。（就算在训练集上正确率100%，也不能说明它刻画了真实的数据分布，要知道刻画真实的数据分布才是我们的目的，而不是只刻画训练集的有限的数据点）。而且，实际中，训练样本往往还有一定的噪音误差，所以如果太追求在训练集上的完美而采用一个很复杂的模型，会使得模型把训练集里面的误差都当成了真实的数据分布特征，从而得到错误的数据分布估计。这样的话，到了真正的测试集上就错的一塌糊涂了（这种现象叫过拟合）。但是也不能用太简单的模型，否则在数据分布比较复杂的时候，模型就不足以刻画数据分布了（体现为连在训练集上的错误率都很高，这种现象较欠拟合）。过拟合表明采用的模型比真实的数据分布更复杂，而欠拟合表示采用的模型比真实的数据分布要简单。</p><p><strong>在统计学习框架下，大家刻画模型复杂度的时候，有这么个观点，认为Error = Bias +<br>Variance。这里的Error大概可以理解为模型的预测错误率，是有两部分组成的，一部分是由于模型太简单而带来的估计不准确的部分（Bias），另一部分是由于模型太复杂而带来的更大的变化空间和不确定性（Variance）。</strong></p><p>所以，这样就容易分析朴素贝叶斯了。它简单的假设了各个数据之间是无关的，是一个被<strong>严重简化了的模型</strong>。所以，<strong>对于这样一个简单模型，大部分场合都会Bias部分大于Variance部分，也就是说高偏差而低方差</strong>。</p><p>在实际中，为了让Error尽量小，我们在选择模型的时候需要平衡Bias和Variance所占的比例，也就是平衡over-fitting和under-fitting。</p><p>当模型复杂度上升的时候，偏差会逐渐变小，而方差会逐渐变大。</p><h3 id="3-常见算法优缺点"><a href="#3-常见算法优缺点" class="headerlink" title="**3. 常见算法优缺点"></a>**3. 常见算法优缺点</h3><h4 id="3-1-朴素贝叶斯"><a href="#3-1-朴素贝叶斯" class="headerlink" title="3.1 朴素贝叶斯"></a><strong>3.1 朴素贝叶斯</strong></h4><p>朴素贝叶斯属于生成式模型（<strong>关于生成模型和判别式模型，主要还是在于是否需要求联合分布</strong>），比较简单，你只需做一堆计数即可。<strong>如果注有条件独立性假设（一个比较严格的条件），朴素贝叶斯分类器的收敛速度将快于判别模型，比如逻辑回归</strong>，所以你只需要较少的训练数据即可。即使NB条件独立假设不成立，NB分类器在实践中仍然表现的很出色。<strong>它的主要缺点是它不能学习特征间的相互作用</strong>——(<strong>不能处理冗余特征</strong>)，用mRMR中R来讲，就是<strong>特征冗余</strong>。引用一个比较经典的例子，比如，虽然你喜欢BradPitt和Tom Cruise的电影，但是它不能学习出你不喜欢他们在一起演的电影。</p><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a><strong>优点</strong>：</h4><ul><li><p>朴素贝叶斯模型发源于古典数学理论，有着坚实的数学基础，以及<strong>稳定的分类效率。</strong></p></li><li><p>对<strong>大数量训练和查询时具有较高的速度</strong>。即使使用超大规模的训练集，针对每个项目通常也只会有相对较少的特征数，并且对项目的训练和分类也仅仅是特征概率的数学运算而已；</p></li><li><p>对<strong>小规模的数据表现很好</strong>，<strong>能处理多分类任务</strong>，<strong>适合增量式训练（即可以实时的对新增的样本进行训练）</strong>；</p></li><li><p><strong>对缺失数据不太敏感，</strong>算法也比较简单，常用于文本分类；</p></li><li><p>朴素贝叶斯对结果解释容易理解；</p></li></ul><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a><strong>缺点</strong>：</h4><ul><li><p>需要计算先验概率；</p></li><li><p><strong> 分类决策存在错误率；</strong></p></li><li><p>对输入数据的表达形式很敏感；</p></li><li><p>由于<strong>使用了样本属性独立性的假设，所以如果样本属性有关联时其效果不好</strong>；</p></li></ul><h4 id="朴素贝叶斯应用领域"><a href="#朴素贝叶斯应用领域" class="headerlink" title="朴素贝叶斯应用领域"></a><strong>朴素贝叶斯应用领域</strong></h4><ul><li><p><strong> 欺诈检测中使用较多</strong></p></li><li><p>一封电子邮件是否是垃圾邮件</p></li><li><p>一篇文章应该分到科技、政治，还是体育类</p></li><li><p>一段文字表达的是积极的情绪还是消极的情绪？</p></li><li><p>人脸识别</p></li></ul><h3 id="3-2-Logistic-Regression（逻辑回归）"><a href="#3-2-Logistic-Regression（逻辑回归）" class="headerlink" title="**3.2 Logistic Regression（逻辑回归）"></a>**3.2 Logistic Regression（逻辑回归）</h3><p>逻辑回归属于判别式模型，同时伴有很多模型正则化的方法（L0，<br>L1，L2，etc），而且你不必像在用朴素贝叶斯那样担心你的特征是否相关。与决策树、SVM相比，你还会得到一个不错的概率解释，你甚至可以轻松地利用新数据来更新模型（使用在线梯度下降算法-online gradient descent）。如果你需要一个概率架构（比如，简单地调节分类阈值，指明不确定性，或者是要获得置信区间），或者你希望以后将更多的训练数据快速整合到模型中去，那么使用它吧。</p><p><strong>Sigmoid函数</strong>：表达式如下:</p><h4 id="优点：-1"><a href="#优点：-1" class="headerlink" title="优点："></a><strong>优点：</strong></h4><ul><li><p>实现简单，广泛的应用于工业问题上；</p></li><li><p>分类时计算量非常小，速度很快，存储资源低；</p></li><li><p>便利的观测样本概率分数；</p></li><li><p>对逻辑回归而言，多重共线性并不是问题，它可以结合L2正则化来解决该问题；</p></li><li><p>计算代价不高，易于理解和实现；</p></li></ul><h4 id="缺点：-1"><a href="#缺点：-1" class="headerlink" title="缺点："></a><strong>缺点</strong>：</h4><ul><li><p>当特征空间很大时，逻辑回归的性能不是很好；</p></li><li><p>容易<strong>欠拟合</strong>，一般准确度不太高</p></li><li><p>不能很好地处理大量多类特征或变量；</p></li><li><p>只能处理两分类问题（在此基础上衍生出来的softmax可以用于多分类），且必须<strong>线性可分</strong>；</p></li><li><p>对于非线性特征，需要进行转换；</p></li></ul><h4 id="logistic回归应用领域："><a href="#logistic回归应用领域：" class="headerlink" title="logistic回归应用领域："></a><strong>logistic回归应用领域：</strong></h4><ul><li><p>用于二分类领域，可以得出概率值，适用于根据分类概率排名的领域，如搜索排名等。</p></li><li><p>Logistic回归的扩展softmax可以应用于多分类领域，如手写字识别等。</p></li><li><p>信用评估</p></li><li><p>测量市场营销的成功度</p></li><li><p>预测某个产品的收益</p></li><li><p>特定的某天是否会发生地震</p></li></ul><h3 id="3-3-线性回归"><a href="#3-3-线性回归" class="headerlink" title="**3.3 线性回归"></a>**3.3 线性回归</h3><p>线性回归是用于回归的，它不像Logistic回归那样用于分类，其基本思想是用<strong>梯度下降法</strong>对最小二乘法形式的误差函数进行优化，当然也可以用normal equation直接求得参数的解，结果为： </p><p>而在LWLR（局部加权线性回归）中，参数的计算表达式为: </p><p>由此可见LWLR与LR不同，LWLR是一个非参数模型，因为每次进行回归计算都要遍历训练样本至少一次。</p><p><strong>优点</strong>： 实现简单，计算简单；</p><p><strong>缺点</strong>： 不能拟合非线性数据.</p><h3 id="3-4-最近邻算法——KNN"><a href="#3-4-最近邻算法——KNN" class="headerlink" title="**3.4 最近邻算法——KNN"></a>**3.4 最近邻算法——KNN</h3><p>KNN即最近邻算法，其主要过程为：</p><p>1.<br>计算训练样本和测试样本中每个样本点的距离（常见的距离度量有欧式距离，马氏距离等）；</p><ol start="2"><li><p>对上面所有的距离值进行排序(升序)；</p></li><li><p>选前k个最小距离的样本；</p></li><li><p>根据这k个样本的标签进行投票，得到最后的分类类别；</p></li></ol><p>如何选择一个最佳的K值，这取决于数据。一般情况下，在分类时较大的K值能够减小噪声的影响，但会使类别之间的界限变得模糊。一个较好的K值可通过各种启发式技术来获取，比如，交叉验证。另外噪声和非相关性特征向量的存在会使K近邻算法的准确性减小。近邻算法具有较强的一致性结果，<strong>随着数据趋于无限，算法保证错误率不会超过贝叶斯算法错误率的两倍。</strong>对于一些好的K值，K近邻保证错误率不会超过贝叶斯理论误差率。</p><h4 id="KNN算法的优点"><a href="#KNN算法的优点" class="headerlink" title="KNN算法的优点"></a><strong>KNN算法的优点</strong></h4><ul><li><p>理论成熟，思想简单，既可以<strong>用来做分类也可以用来做回归</strong>；</p></li><li><p>可用于非线性分类；</p></li><li><p>训练时间复杂度为O(n)；</p></li><li><p>对<strong>数据没有假设，准确度高，对outlier不敏感</strong>；</p></li><li><p>KNN是一种<strong>在线技术</strong>，新数据可以直接加入数据集而不必进行重新训练；</p></li><li><p>KNN理论简单，容易实现；</p></li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a><strong>缺点</strong></h4><ul><li><p><strong>样本不平衡问题（即有些类别的样本数量很多，而其它样本的数量很少）效果差</strong>；</p></li><li><p><strong>需要大量内存</strong>；</p></li><li><p>对于样本容量大的数据集计算量比较大（体现在距离计算上）；</p></li><li><p>样本不平衡时，预测偏差比较大。如：某一类的样本比较少，而其它类样本比较多；</p></li><li><p><strong>KNN每一次分类都会重新进行一次全局运算</strong>；</p></li><li><p><strong> k值大小的选择没有理论选择最优，往往是结合K-折交叉验证得到最优k值选择；</strong></p></li></ul><h4 id="KNN算法应用领域"><a href="#KNN算法应用领域" class="headerlink" title="KNN算法应用领域"></a><strong>KNN算法应用领域</strong></h4><p>文本分类、模式识别、聚类分析，多分类领域</p><h3 id="3-5-决策树"><a href="#3-5-决策树" class="headerlink" title="**3.5 决策树"></a>**3.5 决策树</h3><p>决策树的一大优势就是易于解释。它可以毫无压力地处理特征间的交互关系并且是非参数化的，因此你不必担心异常值或者数据是否线性可分（举个例子，决策树能轻松处理好类别A在某个特征维度x的末端，类别B在中间，然后类别A又出现在特征维度x前端的情况）。它的缺点之一就是不支持在线学习，于是在新样本到来后，决策树需要全部重建。另一个缺点就是容易出现过拟合，但这也就是诸如随机森林RF（或提升树boosted<br>tree）之类的集成方法的切入点。另外，随机森林经常是很多分类问题的赢家（通常比支持向量机好上那么一丁点），它训练快速并且可调，同时你无须担心要像支持向量机那样调一大堆参数，所以在以前都一直很受欢迎。</p><p>决策树中很重要的一点就是选择一个属性进行分枝，因此要注意一下信息增益的计算公式，并深入理解它。</p><p>信息熵的计算公式如下:</p><p>其中的n代表有n个分类类别（比如假设是二类问题，那么n=2）。分别计算这2类样本在总样本中出现的概率  和  ，这样就可以计算出未选中属性分枝前的信息熵。</p><p>现在选中一个属性  用来进行分枝，此时分枝规则是：如果  的话，将样本分到树的一个分支；如果不相等则进入另一个分支。很显然，分支中的样本很有可能包括2个类别，分别计算这2个分支的熵  和  ,计算出分枝后的总信息熵  ，则此时的信息增益  。以信息增益为原则，把所有的属性都测试一边，选择一个使增益最大的属性作为本次分枝属性。</p><h4 id="决策树自身的优点"><a href="#决策树自身的优点" class="headerlink" title="决策树自身的优点"></a><strong>决策树自身的优点</strong></h4><ul><li><p>决策树易于理解和解释，可以可视化分析，容易提取出规则；</p></li><li><p>可以同时处理标称型和数值型数据；</p></li><li><p>比较适合处理有缺失属性的样本；</p></li><li><p>能够处理不相关的特征；</p></li><li><p>测试数据集时，运行速度比较快；</p></li><li><p>在相对短的时间内能够对大型数据源做出可行且效果良好的结果。</p></li></ul><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a><strong>缺点</strong></h4><ul><li><p>容易发生过拟合（随机森林可以很大程度上减少过拟合）；</p></li><li><p>容易忽略数据集中属性的相互关联；</p></li><li><p>对于那些各类别样本数量不一致的数据，在决策树中，进行属性划分时，不同的判定准则会带来不同的属性选择倾向；信息增益准则对可取数目较多的属性有所偏好（典型代表ID3算法），而增益率准则（CART）则对可取数目较少的属性有所偏好，但CART进行属性划分时候不再简单地直接利用增益率尽心划分，而是采用一种启发式规则）（只要是使用了信息增益，都有这个缺点，如RF）。</p></li><li><p>ID3算法计算信息增益时结果偏向数值比较多的特征。</p></li></ul><h4 id="改进措施"><a href="#改进措施" class="headerlink" title="改进措施"></a><strong>改进措施</strong></h4><ul><li><p>对决策树进行剪枝。可以采用交叉验证法和加入正则化的方法。</p></li><li><p>使用基于决策树的combination算法，如bagging算法，randomforest算法，可以解决过拟合的问题；</p></li></ul><h4 id="应用领域"><a href="#应用领域" class="headerlink" title="应用领域"></a><strong>应用领域</strong></h4><p>企业管理实践，企业投资决策，由于决策树很好的分析能力，在决策过程应用较多。</p><h3 id="3-5-1-ID3、C4-5算法"><a href="#3-5-1-ID3、C4-5算法" class="headerlink" title="**3.5.1 ID3、C4.5算法"></a>**3.5.1 ID3、C4.5算法</h3><p>ID3算法是以信息论为基础，以信息熵和信息增益度为衡量标准，从而实现对数据的归纳分类。ID3算法计算每个属性的信息增益，并选取具有最高增益的属性作为给定的测试属性。C4.5算法核心思想是ID3算法，是ID3算法的改进，改进方面有：</p><ul><li>用信息增益率来选择属性，克服了用信息增益选择属性时偏向选择取值多的属性的不足；</li><li>在树构造过程中进行剪枝； - 能处理非离散的数据； - 能处理不完整的数据。</li></ul><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a><strong>优点</strong></h4><ul><li>产生的分类规则易于理解，准确率较高。</li></ul><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a><strong>缺点</strong></h4><ul><li><p>在构造树的过程中，需要对数据集进行多次的顺序扫描和排序，因而导致算法的低效；</p></li><li><p>C4.5只适合于能够驻留于内存的数据集，当训练集大得无法在内存容纳时程序无法运行。</p></li></ul><h3 id="3-5-2-CART分类与回归树"><a href="#3-5-2-CART分类与回归树" class="headerlink" title="**3.5.2 CART分类与回归树"></a>**3.5.2 CART分类与回归树</h3><p>是一种决策树分类方法，采用基于最小距离的基尼指数估计函数，用来决定由该子数据集生成的决策树的拓展形。如果目标变量是标称的，称为分类树；如果目标变量是连续的，称为回归树。分类树是使用树结构算法将数据分成离散类的方法。</p><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a><strong>优点</strong></h4><p>1）非常灵活，可以允许有部分错分成本，还可指定先验概率分布，可使用自动的成本复杂性剪枝来得到归纳性更强的树。<br>2）在面对诸如存在缺失值、变量数多等问题时CART 显得非常稳健。</p><h3 id="3-6-Adaboosting"><a href="#3-6-Adaboosting" class="headerlink" title="**3.6 Adaboosting"></a>**3.6 Adaboosting</h3><p>Adaboost是一种加和模型，每个模型都是基于上一次模型的错误率来建立的，过分关注分错的样本，而对正确分类的样本减少关注度，逐次迭代之后，可以得到一个相对较好的模型。该算法是一种典型的boosting算法，其加和理论的优势可以使用Hoeffding不等式得以解释。有兴趣的同学可以阅读下自己之前写的这篇文章<em>AdaBoost算法详述</em>.下面总结下它的优缺点。</p><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a><strong>优点</strong></h4><ul><li><p>Adaboost是一种有很高精度的分类器。</p></li><li><p>可以使用各种方法构建子分类器，Adaboost算法提供的是框架。</p></li><li><p>当使用简单分类器时，计算出的结果是可以理解的，并且弱分类器的构造极其简单。</p></li><li><p>简单，不用做特征筛选。</p></li><li><p>不易发生overfitting。</p></li></ul><p>关于Adaboost, GBDT 及 XGBoost<br>算法区别，参考这篇文章：<em>Adaboost、GBDT与XGBoost的区别</em></p><h4 id="缺点-3"><a href="#缺点-3" class="headerlink" title="缺点"></a><strong>缺点</strong></h4><ul><li>对outlier比较敏感</li></ul><h3 id="3-7-SVM支持向量机"><a href="#3-7-SVM支持向量机" class="headerlink" title="**3.7 SVM支持向量机"></a>**3.7 SVM支持向量机</h3><p>支持向量机，一个经久不衰的算法，高准确率，为避免过拟合提供了很好的理论保证，而且就算数据在原特征空间线性不可分，只要给个合适的核函数，它就能运行得很好。在动辄超高维的文本分类问题中特别受欢迎。可惜内存消耗大，难以解释，运行和调参也有些烦人，而随机森林却刚好避开了这些缺点，比较实用。</p><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a><strong>优点</strong></h4><ul><li><p>可以解决高维问题，即大型特征空间；</p></li><li><p>解决小样本下机器学习问题；</p></li><li><p>能够处理非线性特征的相互作用；</p></li><li><p>无局部极小值问题；（相对于神经网络等算法）</p></li><li><p>无需依赖整个数据；</p></li><li><p>泛化能力比较强；</p></li></ul><h4 id="缺点-4"><a href="#缺点-4" class="headerlink" title="缺点"></a><strong>缺点</strong></h4><ul><li><p>当观测样本很多时，效率并不是很高；</p></li><li><p>对非线性问题没有通用解决方案，有时候很难找到一个合适的核函数；</p></li><li><p>对于核函数的高维映射解释力不强，尤其是径向基函数；</p></li><li><p>常规SVM只支持二分类；</p></li><li><p><strong>对缺失数据敏感</strong>；</p></li></ul><p>对于核的选择也是有技巧的（libsvm中自带了四种核函数：线性核、多项式核、RBF以及sigmoid核）：</p><ul><li><p>第一，如果样本数量小于特征数，那么就没必要选择非线性核，简单的使用线性核就可以了；</p></li><li><p>第二，如果样本数量大于特征数目，这时可以使用非线性核，将样本映射到更高维度，一般可以得到更好的结果；</p></li><li><p>第三，如果样本数目和特征数目相等，该情况可以使用非线性核，原理和第二种一样。</p></li></ul><p>对于第一种情况，也可以先对数据进行降维，然后使用非线性核，这也是一种方法。</p><h4 id="SVM应用领域"><a href="#SVM应用领域" class="headerlink" title="SVM应用领域"></a><strong>SVM应用领域</strong></h4><p>文本分类、图像识别（主要二分类领域，毕竟常规SVM只能解决二分类问题）</p><h3 id="3-8-人工神经网络的优缺点"><a href="#3-8-人工神经网络的优缺点" class="headerlink" title="**3.8 人工神经网络的优缺点"></a>**3.8 人工神经网络的优缺点</h3><h4 id="人工神经网络的优点："><a href="#人工神经网络的优点：" class="headerlink" title="人工神经网络的优点："></a><strong>人工神经网络的优点：</strong></h4><ul><li><p>分类的准确度高；</p></li><li><p>并行分布处理能力强,分布存储及学习能力强，</p></li><li><p>对噪声神经有较强的鲁棒性和容错能力；</p></li><li><p>具备联想记忆的功能，能充分逼近复杂的非线性关系；</p></li></ul><h4 id="人工神经网络的缺点："><a href="#人工神经网络的缺点：" class="headerlink" title="人工神经网络的缺点："></a><strong>人工神经网络的缺点：</strong></h4><ul><li><p>神经网络需要大量的参数，如网络拓扑结构、权值和阈值的初始值；</p></li><li><p>黑盒过程，不能观察之间的学习过程，输出结果难以解释，会影响到结果的可信度和可接受程度；</p></li><li><p>学习时间过长，有可能陷入局部极小值，甚至可能达不到学习的目的。</p></li></ul><p><strong>人工神经网络应用领域：</strong></p><p>目前深度神经网络已经应用与计算机视觉，自然语言处理，语音识别等领域并取得很好的效果。</p><h3 id="3-9-K-Means聚类"><a href="#3-9-K-Means聚类" class="headerlink" title="**3.9 K-Means聚类"></a>**3.9 K-Means聚类</h3><p>是一个简单的聚类算法，把n的对象根据他们的属性分为k个分割，k\&lt; n。<br>算法的核心就是要优化失真函数J,使其收敛到局部最小值但不是全局最小值。</p><p>关于K-Means聚类的文章，参见<em>机器学习算法-K-means聚类</em>。关于K-Means的推导，里面可是有大学问的，蕴含着强大的EM思想。</p><h4 id="优点-4"><a href="#优点-4" class="headerlink" title="优点"></a><strong>优点</strong></h4><ul><li><p>算法简单，容易实现 ；</p></li><li><p>算法速度很快；</p></li><li><p>对处理大数据集，该算法是相对可伸缩的和高效率的，因为它的复杂度大约是O(nkt)，其中n是所有对象的数目，k是簇的数目,t是迭代的次数。通常k\&lt;\&lt;n。这个算法<strong>通常局部收敛</strong>。</p></li><li><p>算法尝试找出使平方误差函数值最小的k个划分。当簇是密集的、球状或团状的，且簇与簇之间区别明显时，聚类效果较好。</p></li></ul><h4 id="缺点-5"><a href="#缺点-5" class="headerlink" title="缺点"></a><strong>缺点</strong></h4><ul><li><p>对数据类型要求较高，适合数值型数据；</p></li><li><p>可能收敛到局部最小值，在大规模数据上收敛较慢</p></li><li><p>分组的数目k是一个输入参数，不合适的k可能返回较差的结果。</p></li><li><p>对初值的簇心值敏感，对于不同的初始值，可能会导致不同的聚类结果；</p></li><li><p>不适合于发现非凸面形状的簇，或者大小差别很大的簇。</p></li><li><p>对于”噪声”和孤立点数据敏感，少量的该类数据能够对平均值产生极大影响。</p></li></ul><h3 id="3-10-EM最大期望算法"><a href="#3-10-EM最大期望算法" class="headerlink" title="**3.10 EM最大期望算法"></a>**3.10 EM最大期望算法</h3><p>EM算法是基于模型的聚类方法，是在概率模型中寻找参数最大似然估计的算法，其中概率模型依赖于无法观测的隐藏变量。E步估计隐含变量，M步估计其他参数，交替将极值推向最大。</p><p>EM算法比K-means算法计算复杂，收敛也较慢，不适于大规模数据集和高维数据，但比K-means算法计算结果稳定、准确。EM经常用在机器学习和计算机视觉的数据集聚（Data<br>Clustering）领域。</p><h3 id="3-11-集成算法（AdaBoost算法）"><a href="#3-11-集成算法（AdaBoost算法）" class="headerlink" title="**3.11 集成算法（AdaBoost算法）"></a>**3.11 集成算法（AdaBoost算法）</h3><h4 id="AdaBoost算法优点："><a href="#AdaBoost算法优点：" class="headerlink" title="AdaBoost算法优点："></a><strong>AdaBoost算法优点：</strong></h4><ul><li><p>很好的利用了弱分类器进行级联；</p></li><li><p>可以将不同的分类算法作为弱分类器；</p></li><li><p>AdaBoost具有很高的精度；</p></li><li><p>相对于bagging算法和Random Forest算法，AdaBoost充分考虑的每个分类器的权重；</p></li></ul><h4 id="Adaboost算法缺点："><a href="#Adaboost算法缺点：" class="headerlink" title="Adaboost算法缺点："></a><strong>Adaboost算法缺点：</strong></h4><ul><li><p>AdaBoost迭代次数也就是弱分类器数目不太好设定，可以使用交叉验证来进行确定；</p></li><li><p>数据不平衡导致分类精度下降；</p></li><li><p>训练比较耗时，每次重新选择当前分类器最好切分点；</p></li></ul><h4 id="AdaBoost应用领域："><a href="#AdaBoost应用领域：" class="headerlink" title="AdaBoost应用领域："></a><strong>AdaBoost应用领域：</strong></h4><p>模式识别、计算机视觉领域，用于二分类和多分类场景</p><h3 id="3-12-排序算法（PageRank）"><a href="#3-12-排序算法（PageRank）" class="headerlink" title="**3.12 排序算法（PageRank）"></a>**3.12 排序算法（PageRank）</h3><p>PageRank是google的页面排序算法，是基于从许多优质的网页链接过来的网页，必定还是优质网页的回归关系，来判定所有网页的重要性。（也就是说，一个人有着越多牛X朋友的人，他是牛X的概率就越大。）</p><h4 id="PageRank优点"><a href="#PageRank优点" class="headerlink" title="PageRank优点"></a><strong>PageRank优点</strong></h4><ul><li>完全独立于查询，只依赖于网页链接结构，可以离线计算。</li></ul><h4 id="PageRank缺点"><a href="#PageRank缺点" class="headerlink" title="PageRank缺点"></a><strong>PageRank缺点</strong></h4><ul><li><p>PageRank算法忽略了网页搜索的时效性。</p></li><li><p>旧网页排序很高，存在时间长，积累了大量的in-links，拥有最新资讯的新网页排名却很低，因为它们几乎没有in-links。</p></li></ul><h3 id="3-13-关联规则算法（Apriori算法）"><a href="#3-13-关联规则算法（Apriori算法）" class="headerlink" title="**3.13 关联规则算法（Apriori算法）"></a>**3.13 关联规则算法（Apriori算法）</h3><p>Apriori算法是一种挖掘关联规则的算法，用于挖掘其内含的、未知的却又实际存在的数据关系，其核心是基于两阶段频集思想的递推算法<br>。</p><h4 id="Apriori算法分为两个阶段："><a href="#Apriori算法分为两个阶段：" class="headerlink" title="Apriori算法分为两个阶段："></a><strong>Apriori算法分为两个阶段：</strong></h4><ul><li><p>寻找频繁项集</p></li><li><p>由频繁项集找关联规则</p></li></ul><h4 id="算法缺点："><a href="#算法缺点：" class="headerlink" title="算法缺点："></a><strong>算法缺点：</strong></h4><ul><li><p>在每一步产生侯选项目集时循环产生的组合过多，没有排除不应该参与组合的元素；</p></li><li><p>每次计算项集的支持度时，都对数据库中<br>的全部记录进行了一遍扫描比较，需要很大的I/O负载。</p></li></ul><h3 id="4-算法选择参考"><a href="#4-算法选择参考" class="headerlink" title="**4. 算法选择参考"></a>**4. 算法选择参考</h3><p>之前笔者翻译过一些国外的文章，其中有一篇文章中给出了一个简单的算法选择技巧：</p><ol><li><p>首当其冲应该选择的就是逻辑回归，如果它的效果不怎么样，那么可以将它的结果作为基准来参考，在基础上与其他算法进行比较；</p></li><li><p>然后试试决策树（随机森林）看看是否可以大幅度提升你的模型性能。即便最后你并没有把它当做为最终模型，你也可以使用随机森林来移除噪声变量，做特征选择；</p></li><li><p>如果特征的数量和观测样本特别多，那么当资源和时间充足时（这个前提很重要），使用SVM不失为一种选择。</p></li></ol><p>通常情况下：【GBDT>=SVM>=RF>=Adaboost>=Other…】，现在深度学习很热门，很多领域都用到，它是以神经网络为基础的，目前笔者自己也在学习，只是理论知识不扎实，理解的不够深入，这里就不做介绍了，希望以后可以写一片抛砖引玉的文章。</p><p>算法固然重要，<strong>但好的数据却要优于好的算法</strong>，设计优良特征是大有裨益的。假如你有一个超大数据集，那么无论你使用哪种算法可能对分类性能都没太大影响（此时就可以根据速度和易用性来进行抉择）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://desk-fd.zol-img.com.cn/t_s1920x1080c5/g2/M00/0C/00/ChMlWVyA5JyIFsD7AArXsWw3WSoAAIp9gN0N1UACtfJ346.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;机器学习算法优缺点对比及选择&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://leesen998.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习基础" scheme="https://leesen998.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>最大似然估计（MLE）、最大后验概率估计（MAP），以及贝叶斯公式</title>
    <link href="https://leesen998.github.io/2016/12/20/%E6%9C%80%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1%EF%BC%88MLE%EF%BC%89%E3%80%81%E6%9C%80%E5%A4%A7%E5%90%8E%E9%AA%8C%E6%A6%82%E7%8E%87%E4%BC%B0%E8%AE%A1%EF%BC%88MAP%EF%BC%89%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F/"/>
    <id>https://leesen998.github.io/2016/12/20/最大似然估计（MLE）、最大后验概率估计（MAP），以及贝叶斯公式/</id>
    <published>2016-12-20T11:48:29.000Z</published>
    <updated>2019-03-14T03:48:44.595Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg" alt="" style="width:100%"></p><p>最大似然估计（MLE）、最大后验概率估计（MAP），以及贝叶斯公式</p><a id="more"></a><h2 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h2><h3 id="Likelihood-amp-Maximum-likelihood"><a href="#Likelihood-amp-Maximum-likelihood" class="headerlink" title="Likelihood &amp; Maximum likelihood"></a>Likelihood &amp; Maximum likelihood</h3><p>似然与概率<br>在统计学中，似然函数（likelihood function，通常简写为likelihood，似然）是一个非常重要的内容，在非正式场合似然和概率（Probability）几乎是一对同义词，但是在统计学中似然和概率却是两个不同的概念。概率是在特定环境下某件事情发生的可能性，也就是结果没有产生之前依据环境所对应的参数来预测某件事情发生的可能性，比如抛硬币，抛之前我们不知道最后是哪一面朝上，但是根据硬币的性质我们可以推测任何一面朝上的可能性均为50%，这个概率只有在抛硬币之前才是有意义的，抛完硬币后的结果便是确定的；而似然刚好相反，是在确定的结果下去推测产生这个结果的可能环境（参数），还是抛硬币的例子，假设我们随机抛掷一枚硬币1,000次，结果500次人头朝上，500次数字朝上（实际情况一般不会这么理想，这里只是举个例子），我们很容易判断这是一枚标准的硬币，两面朝上的概率均为50%，这个过程就是我们运用出现的结果来判断这个事情本身的性质（参数），也就是似然。</p><p>结果和参数相互对应的时候，似然和概率在数值上是相等的，如果用 θ 表示环境对应的参数，x 表示结果，那么概率可以表示为：P(x|θ)</p><p>p(x|θ) 是条件概率的表示方法，θ 是前置条件，理解为在 θ 的前提下，事件 x 发生的概率，相对应的似然可以表示为：L(θ|x)</p><p>可以理解为已知结果为 x ，参数为 θ (似然函数里 θ 是变量，这里说的参数和变量是相对与概率而言的)对应的概率，即：L(θ|x)=P(x|θ)<br>需要说明的是两者在数值上相等，但是意义并不相同，L 是关于 θ 的函数，而 P 则是关于 x 的函数，两者从不同的角度描述一件事情。</p><h2 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h2><p>最大似然估计（Maximum likelihood estimation, 简称MLE）和最大后验概率估计（Maximum a posteriori estimation, 简称MAP）是很常用的两种参数估计方法，如果不理解这两种方法的思路，很容易弄混它们。下文将详细说明MLE和MAP的思路与区别。</p><p>但别急，我们先从概率和统计的区别讲起。</p><h3 id="概率和统计是一个东西吗？"><a href="#概率和统计是一个东西吗？" class="headerlink" title="概率和统计是一个东西吗？"></a>概率和统计是一个东西吗？</h3><p>概率（probabilty）和统计（statistics）看似两个相近的概念，其实研究的问题刚好相反。</p><p>概率研究的问题是，已知一个模型和参数，怎么去预测这个模型产生的结果的特性（例如均值，方差，协方差等等）。 举个例子，我想研究怎么养猪（模型是猪），我选好了想养的品种、喂养方式、猪棚的设计等等（选择参数），我想知道我养出来的猪大概能有多肥，肉质怎么样（预测结果）。</p><p>统计研究的问题则相反。统计是，有一堆数据，要利用这堆数据去预测模型和参数。仍以猪为例。现在我买到了一堆肉，通过观察和判断，我确定这是猪肉（这就确定了模型。在实际研究中，也是通过观察数据推测模型是／像高斯分布的、指数分布的、拉普拉斯分布的等等），然后，可以进一步研究，判定这猪的品种、这是圈养猪还是跑山猪还是网易猪，等等（推测模型参数）。</p><p>一句话总结：概率是已知模型和参数，推数据。统计是已知数据，推模型和参数。</p><p>显然，本文解释的MLE和MAP都是统计领域的问题。它们都是用来推测参数的方法。为什么会存在着两种不同方法呢？ 这需要理解贝叶斯思想。我们来看看贝叶斯公式。</p><h3 id="贝叶斯公式到底在说什么？"><a href="#贝叶斯公式到底在说什么？" class="headerlink" title="贝叶斯公式到底在说什么？"></a>贝叶斯公式到底在说什么？</h3><p>学习机器学习和模式识别的人一定都听过贝叶斯公式(Bayes’ Theorem)：</p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1551412124/samples/java%20files/kjghk.jpg" alt=""></p><p>【式1】贝叶斯公式看起来很简单，无非是倒了倒条件概率和联合概率的公式。</p><p>把B展开，可以写成：</p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1551412124/samples/java%20files/hjk.jpg" alt=""><br>【式2】（∼A∼A表示”非A”）</p><p>这个式子就很有意思了。</p><p>想想这个情况。一辆汽车（或者电瓶车）的警报响了，你通常是什么反应？有小偷？撞车了？ 不。。 你通常什么反应都没有。因为汽车警报响一响实在是太正常了！每天都要发生好多次。本来，汽车警报设置的功能是，出现了异常情况，需要人关注。然而，由于虚警实在是太多，人们渐渐不相信警报的功能了。</p><p>贝叶斯公式就是在描述，你有多大把握能相信一件证据？（how much you can trust the evidence）</p><p>我们假设响警报的目的就是想说汽车被砸了。把A计作“汽车被砸了”，B计作“警报响了”，带进贝叶斯公式里看。我们想求等式左边发生A|B的概率，这是在说警报响了，汽车也确实被砸了。汽车被砸引起（trigger）警报响，即B|A。但是，也有可能是汽车被小孩子皮球踢了一下、被行人碰了一下等其他原因（统统计作∼A），其他原因引起汽车警报响了，即B|∼A。那么，现在突然听见警报响了，这时汽车已经被砸了的概率是多少呢（这即是说，警报响这个证据有了，多大把握能相信它确实是在报警说汽车被砸了）？想一想，应当这样来计算。用警报响起、汽车也被砸了这事件的数量，除以响警报事件的数量（这即【式1】）。进一步展开，即警报响起、汽车也被砸了的事件的数量，除以警报响起、汽车被砸了的事件数量加上警报响起、汽车没被砸的事件数量（这即【式2】）。</p><p>可能有点绕，请稍稍想一想。</p><p>再思考【式2】。想让P(A|B)=1，即警报响了，汽车一定被砸了，该怎么做呢？让P(B|∼A)P(∼A)=0即可。很容易想清楚，假若让P(∼A)=0，即杜绝了汽车被球踢、被行人碰到等等其他所有情况，那自然，警报响了，只剩下一种可能——汽车被砸了。这即是提高了响警报这个证据的说服力。</p><p>从这个角度总结贝叶斯公式：做判断的时候，要考虑所有的因素。 老板骂你，不一定是你把什么工作搞砸了，可能只是他今天出门前和太太吵了一架。</p><p>再思考【式2】。观察【式2】右边的分子，P(B|A)为汽车被砸后响警报的概率。姑且仍为这是1吧。但是，若P(A)很小，即汽车被砸的概率本身就很小，则P(B|A)P(A)仍然很小，即【式2】右边分子仍然很小，P(A|B) 还是大不起来。 这里，​P(A)即是常说的先验概率，如果A的先验概率很小，就算P(B|A)较大，可能A的后验概率P(A|B)还是不会大（假设P(B|∼A)P(∼A)不变的情况下）。</p><p>从这个角度思考贝叶斯公式：一个本来就难以发生的事情，就算出现某个证据和他强烈相关，也要谨慎。证据很可能来自别的虽然不是很相关，但发生概率较高的事情。 发现刚才写的代码编译报错，可是我今天状态特别好，这语言我也很熟悉，犯错的概率很低。因此觉得是编译器出错了。 ————别，还是先再检查下自己的代码吧。</p><p>好了好了，说了这么多，下面言归正传，说一说MLE。</p><p>——————不行，还得先说似然函数（likelihood function）</p><h3 id="似然函数"><a href="#似然函数" class="headerlink" title="似然函数"></a>似然函数</h3><p>似然（likelihood）这个词其实和概率（probability）是差不多的意思，Colins字典这么解释：The likelihood of something happening is how likely it is to happen. 你把likelihood换成probability，这解释也读得通。但是在统计里面，似然函数和概率函数却是两个不同的概念（其实也很相近就是了）。</p><p>对于这个函数：</p><p>**P(x|θ)<br>输入有两个：x表示某一个具体的数据；θ表示模型的参数。</p><p>如果θ是已知确定的，xx是变量，这个函数叫做概率函数(probability function)，它描述对于不同的样本点x，其出现概率是多少。</p><p>如果x是已知确定的，θ是变量，这个函数叫做似然函数(likelihood function), 它描述对于不同的模型参数，出现x这个样本点的概率是多少。**</p><p>这有点像“一菜两吃”的意思。其实这样的形式我们以前也不是没遇到过。例如，f(x,y)=x^y, 即x的y次方。如果xx是已知确定的(例如x=2)，这就是f(y)=2^y, 这是指数函数。 如果yy是已知确定的(例如y=2)，这就是f(x)=x^2，这是二次函数。同一个数学形式，从不同的变量角度观察，可以有不同的名字。</p><p>这么说应该清楚了吧？ 如果还没讲清楚，别急，下文会有具体例子。</p><p>现在真要先讲讲MLE了。。</p><h3 id="最大似然估计（MLE）"><a href="#最大似然估计（MLE）" class="headerlink" title="最大似然估计（MLE）"></a>最大似然估计（MLE）</h3><p>假设有一个造币厂生产某种硬币，现在我们拿到了一枚这种硬币，想试试这硬币是不是均匀的。即想知道抛这枚硬币，正反面出现的概率（记为θ）各是多少？</p><p>这是一个统计问题，回想一下，解决统计问题需要什么？ 数据！</p><p>于是我们拿这枚硬币抛了10次，得到的数据（x0）是：反正正正正反正正正反。我们想求的正面概率θθ是模型参数，而抛硬币模型我们可以假设是 二项分布。</p><p>那么，出现实验结果x0（即反正正正正反正正正反）的似然函数是多少呢？</p><p>f(x0,θ)=(1−θ)×θ×θ×θ×θ×(1−θ)×θ×θ×θ×(1−θ)=θ^7(1−θ)^3=f(θ)<br>注意，这是个只关于θ的函数。而最大似然估计，顾名思义，就是要最大化这个函数。我们可以画出f(θ)的图像：</p><p><img src="https://img-blog.csdn.net/20170531003926799?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTUwODY0MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>可以看出，在θ=0.7时，似然函数取得最大值。</p><p>这样，我们已经完成了对θ的最大似然估计。即，抛10次硬币，发现7次硬币正面向上，最大似然估计认为正面向上的概率是0.7。（ummm..这非常直观合理，对吧？）</p><p>且慢，一些人可能会说，硬币一般都是均匀的啊！ 就算你做实验发现结果是“反正正正正反正正正反”，我也不信θ=0.7。</p><p>这里就包含了贝叶斯学派的思想了——要考虑先验概率。 为此，引入了最大后验概率估计。</p><h3 id="最大后验概率估计"><a href="#最大后验概率估计" class="headerlink" title="最大后验概率估计"></a>最大后验概率估计</h3><p>最大似然估计是求参数θθ, 使似然函数P(x0|θ)最大。最大后验概率估计则是想求θθ使P(x0|θ)P(θ)最大。求得的θ不单单让似然函数大，θ自己出现的先验概率也得大。 （这有点像正则化里加惩罚项的思想，不过正则化里是利用加法，而MAP里是利用乘法）</p><p>MAP其实是在最大化P(θ|x0)=P(x0|θ)P(θ)P(x0)，不过因为x0是确定的（即投出的“反正正正正反正正正反”），P(x0)是一个已知值，所以去掉了分母P(x0)（假设“投10次硬币”是一次实验，实验做了1000次，“反正正正正反正正正反”出现了n次，则P(x0)=n/1000。总之，这是一个可以由数据集得到的值）。最大化P(θ|x0)的意义也很明确，x0已经出现了，要求θ取什么值使P(θ|x0)最大。顺带一提，P(θ|x0)即后验概率，这就是“最大后验概率估计”名字的由来。</p><p>对于投硬币的例子来看，我们认为（”先验地知道“）θ取0.5的概率很大，取其他值的概率小一些。我们用一个高斯分布来具体描述我们掌握的这个先验知识，例如假设P(θ)为均值0.5，方差0.1的高斯函数，如下图：<br><img src="https://img-blog.csdn.net/20170531004009269?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTUwODY0MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>则P(x0|θ)P(θ)的函数图像为：<br><img src="https://img-blog.csdn.net/20170531003829147?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTUwODY0MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>注意，此时函数取最大值时，θ取值已向左偏移，不再是0.7。实际上，在θ=0.558时函数取得了最大值。即，用最大后验概率估计，得到θ=0.558<br>最后，那要怎样才能说服一个贝叶斯派相信θ=0.7呢？你得多做点实验。。</p><p>如果做了1000次实验，其中700次都是正面向上，这时似然函数为:<br><img src="https://img-blog.csdn.net/20170530235524800?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTUwODY0MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>如果仍然假设P(θ)为均值0.5，方差0.1的高斯函数，P(x0|θ)P(θ)的函数图像为：<br><img src="https://img-blog.csdn.net/20170531003953909?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTUwODY0MA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>在θ=0.696处，P(x0|θ)P(θ)取得最大值。</p><p>这样，就算一个考虑了先验概率的贝叶斯派，也不得不承认得把θ估计在0.7附近了。</p><p>PS. <strong>要是遇上了顽固的贝叶斯派，认为P(θ=0.5)=1 ，那就没得玩了。。 无论怎么做实验，使用MAP估计出来都是θ=0.5。这也说明，一个合理的先验概率假设是很重要的。（通常，先验概率能从数据中直接分析得到）</strong></p><p>最大似然估计和最大后验概率估计的区别<br>相信读完上文，MLE和MAP的区别应该是很清楚的了。MAP就是多个作为因子的先验概率P(θ)。或者，也可以反过来，认为MLE是把先验概率P(θ)认为等于1，即认为θ是均匀分布。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;最大似然估计（MLE）、最大后验概率估计（MAP），以及贝叶斯公式&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://leesen998.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习基础" scheme="https://leesen998.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>第九讲 背包问题问法的变化</title>
    <link href="https://leesen998.github.io/2016/12/19/%E7%AC%AC%E4%B9%9D%E8%AE%B2%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E9%97%AE%E6%B3%95%E7%9A%84%E5%8F%98%E5%8C%96/"/>
    <id>https://leesen998.github.io/2016/12/19/第九讲 背包问题问法的变化/</id>
    <published>2016-12-19T11:48:29.000Z</published>
    <updated>2019-03-15T10:00:47.062Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://desk-fd.zol-img.com.cn/t_s1920x1080c5/g2/M00/0B/0F/ChMlWlyAyIiIQH8pABv6qMmlUWEAAIp0AAv7LcAG_rA821.jpg" alt="" style="width:100%"></p><p>第九讲 背包问题问法的变化</p><a id="more"></a><p>以上涉及的各种背包问题都是要求在背包容量（费用）的限制下求可以取到的最大价值，但背包问题还有很多种灵活的问法，在这里值得提一下。但是我认为，只要深入理解了求背包问题最大价值的方法，即使问法变化了，也是不难想出算法的。</p><p>例如，求解最多可以放多少件物品或者最多可以装满多少背包的空间。这都可以根据具体问题利用前面的方程求出所有状态的值（f数组）之后得到。</p><p>还有，如果要求的是“总价值最小”“总件数最小”，只需简单的将上面的状态转移方程中的max改成min即可。</p><p>下面说一些变化更大的问法。</p><h3 id="输出方案"><a href="#输出方案" class="headerlink" title="输出方案"></a>输出方案</h3><p>一般而言，背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由状态转移方程的哪一项推出来的，换句话说，记录下它是由哪一个策略推出来的。便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。</p><p>还是以01背包为例，方程为f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}。再用一个数组g[i][v]，设g[i][v]=0表示推出f[i][v]的值时是采用了方程的前一项（也即f[i][v]=f[i-1][v]），g[i][v]表示采用了方程的后一项。注意这两项分别表示了两种策略：未选第i个物品及选了第i个物品。那么输出方案的伪代码可以这样写（设最终状态为f[N][V]）：</p><pre><code>i=Nv=Vwhile(i&gt;0)    if(g[i][v]==0)        print &quot;未选第i项物品&quot;    else if(g[i][v]==1)        print &quot;选了第i项物品&quot;        v=v-c[i]</code></pre><p>另外，采用方程的前一项或后一项也可以在输出方案的过程中根据f[i][v]的值实时地求出来，也即不须纪录g数组，将上述代码中的g[i][v]==0改成f[i][v]==f[i-1][v]，g[i][v]==1改成f[i][v]==f[i-1][v-c[i]]+w[i]也可。</p><h3 id="输出字典序最小的最优方案"><a href="#输出字典序最小的最优方案" class="headerlink" title="输出字典序最小的最优方案"></a>输出字典序最小的最优方案</h3><p>这里“字典序最小”的意思是1..N号物品的选择方案排列出来以后字典序最小。以输出01背包最小字典序的方案为例。</p><p>一般而言，求一个字典序最小的最优方案，只需要在转移时注意策略。首先，子问题的定义要略改一些。我们注意到，如果存在一个选了物品1的最优方案，那么答案一定包含物品1，原问题转化为一个背包容量为v-c[1]，物品为2..N的子问题。反之，如果答案不包含物品1，则转化成背包容量仍为V，物品为2..N的子问题。不管答案怎样，子问题的物品都是以i..N而非前所述的1..i的形式来定义的，所以状态的定义和转移方程都需要改一下。但也许更简易的方法是先把物品逆序排列一下，以下按物品已被逆序排列来叙述。</p><p>在这种情况下，可以按照前面经典的状态转移方程来求值，只是输出方案的时候要注意：从N到1输入时，如果f[i][v]==f[i-1][i-v]及f[i][v]==f[i-1][f-c[i]]+w[i]同时成立，应该按照后者（即选择了物品i）来输出方案。</p><h3 id="求方案总数"><a href="#求方案总数" class="headerlink" title="求方案总数"></a>求方案总数</h3><p>对于一个给定了背包容量、物品费用、物品间相互关系（分组、依赖等）的背包问题，除了再给定每个物品的价值后求可得到的最大价值外，还可以得到装满背包或将背包装至某一指定容量的方案总数。</p><p>对于这类改变问法的问题，一般只需将状态转移方程中的max改成sum即可。例如若每件物品均是完全背包中的物品，转移方程即为</p><pre><code>f[i][v]=sum{f[i-1][v],f[i][v-c[i]]}</code></pre><p>初始条件f[0][0]=1。</p><p>事实上，这样做可行的原因在于状态转移方程已经考察了所有可能的背包组成方案。</p><h3 id="最优方案的总数"><a href="#最优方案的总数" class="headerlink" title="最优方案的总数"></a>最优方案的总数</h3><p>这里的最优方案是指物品总价值最大的方案。以01背包为例。</p><p>结合求最大总价值和方案总数两个问题的思路，最优方案的总数可以这样求：f[i][v]意义同前述，g[i][v]表示这个子问题的最优方案的总数，则在求f[i][v]的同时求g[i][v]的伪代码如下：</p><pre><code>for i=1..N   for v=0..V        f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}        g[i][v]=0        if(f[i][v]==f[i-1][v])            inc(g[i][v],g[i-1][v])        if(f[i][v]==f[i-1][v-c[i]]+w[i])            inc(g[i][v],g[i-1][v-c[i]])</code></pre><p>如果你是第一次看到这样的问题，请仔细体会上面的伪代码。</p><h3 id="求次优解、第K优解"><a href="#求次优解、第K优解" class="headerlink" title="求次优解、第K优解"></a>求次优解、第K优解</h3><p>对于求次优解、第K优解类的问题，如果相应的最优解问题能写出状态转移方程、用动态规划解决，那么求次优解往往可以相同的复杂度解决，第K优解则比求最优解的复杂度上多一个系数K。</p><p>其基本思想是将每个状态都表示成有序队列，将状态转移方程中的max/min转化成有序队列的合并。这里仍然以01背包为例讲解一下。</p><p>首先看01背包求最优解的状态转移方程：f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}。如果要求第K优解，那么状态f[i][v]就应该是一个大小为K的数组f[i][v][1..K]。其中f[i][v][k]表示前i个物品、背包大小为v时，第k优解的值。“f[i][v]是一个大小为K的数组”这一句，熟悉C语言的同学可能比较好理解，或者也可以简单地理解为在原来的方程中加了一维。显然f[i][v][1..K]这K个数是由大到小排列的，所以我们把它认为是一个有序队列。</p><p>然后原方程就可以解释为：f[i][v]这个有序队列是由f[i-1][v]和f[i-1][v-c[i]]+w[i]这两个有序队列合并得到的。有序队列f[i-1][v]即f[i-1][v][1..K]，f[i-1][v-c[i]]+w[i]则理解为在f[i-1][v-c[i]][1..K]的每个数上加上w[i]后得到的有序队列。合并这两个有序队列并将结果的前K项储存到f[i][v][1..K]中的复杂度是O(K)。最后的答案是f[N][V][K]。总的复杂度是O(VNK)。</p><p>为什么这个方法正确呢？实际上，一个正确的状态转移方程的求解过程遍历了所有可用的策略，也就覆盖了问题的所有方案。只不过由于是求最优解，所以其它在任何一个策略上达不到最优的方案都被忽略了。如果把每个状态表示成一个大小为K的数组，并在这个数组中有序的保存该状态可取到的前K个最优值。那么，对于任两个状态的max运算等价于两个由大到小的有序队列的合并。</p><p>另外还要注意题目对于“第K优解”的定义，将策略不同但权值相同的两个方案是看作同一个解还是不同的解。如果是前者，则维护有序队列时要保证队列里的数没有重复的。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>显然，这里不可能穷尽背包类动态规划问题所有的问法。甚至还存在一类将背包类动态规划问题与其它领域（例如数论、图论）结合起来的问题，在这篇论背包问题的专文中也不会论及。但只要深刻领会前述所有类别的背包问题的思路和状态转移方程，遇到其它的变形问法，只要题目难度还属于NOIP，应该也不难想出算法。</p><p>触类旁通、举一反三，应该也是一个OIer应有的品质吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://desk-fd.zol-img.com.cn/t_s1920x1080c5/g2/M00/0B/0F/ChMlWlyAyIiIQH8pABv6qMmlUWEAAIp0AAv7LcAG_rA821.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第九讲 背包问题问法的变化&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法:背包问题" scheme="https://leesen998.github.io/tags/%E7%AE%97%E6%B3%95-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>第八讲 背包问题——泛化物品</title>
    <link href="https://leesen998.github.io/2016/12/18/%E7%AC%AC%E5%85%AB%E8%AE%B2%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E2%80%94%E2%80%94%E6%B3%9B%E5%8C%96%E7%89%A9%E5%93%81/"/>
    <id>https://leesen998.github.io/2016/12/18/第八讲 背包问题——泛化物品/</id>
    <published>2016-12-18T11:48:29.000Z</published>
    <updated>2019-03-15T09:58:45.646Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://desk-fd.zol-img.com.cn/t_s1920x1080c5/g2/M00/0C/00/ChMlWVyA5JuIJ-ifABrdMvVincoAAIp9gNZMZ0AGt1K305.jpg" alt="" style="width:100%"></p><p>第八讲 泛化物品</p><a id="more"></a><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>考虑这样一种物品，它并没有固定的费用和价值，而是它的价值随着你分配给它的费用而变化。这就是泛化物品的概念。</p><p>更严格的定义之。在背包容量为V的背包问题中，泛化物品是一个定义域为0..V中的整数的函数h，当分配给它的费用为v时，能得到的价值就是h(v)。</p><p>这个定义有一点点抽象，另一种理解是一个泛化物品就是一个数组h[0..V]，给它费用v，可得到价值h[V]。</p><p>一个费用为c价值为w的物品，如果它是01背包中的物品，那么把它看成泛化物品，它就是除了h(c)=w其它函数值都为0的一个函数。如果它是完全背包中的物品，那么它可以看成这样一个函数，仅当v被c整除时有h(v)=v/cw，其它函数值均为0。如果它是多重背包中重复次数最多为n的物品，那么它对应的泛化物品的函数有h(v)=v/cw仅当v被c整除且v/c&lt;=n，其它情况函数值均为0。</p><p>一个物品组可以看作一个泛化物品h。对于一个0..V中的v，若物品组中不存在费用为v的的物品，则h(v)=0，否则h(v)为所有费用为v的物品的最大价值。P07中每个主件及其附件集合等价于一个物品组，自然也可看作一个泛化物品。</p><h3 id="泛化物品的和"><a href="#泛化物品的和" class="headerlink" title="泛化物品的和"></a>泛化物品的和</h3><p>如果面对两个泛化物品h和l，要用给定的费用从这两个泛化物品中得到最大的价值，怎么求呢？事实上，对于一个给定的费用v，只需枚举将这个费用如何分配给两个泛化物品就可以了。同样的，对于0..V的每一个整数v，可以求得费用v分配到h和l中的最大价值f(v)。也即</p><p>f(v)=max{h(k)+l(v-k)|0&lt;=k&lt;=v}</p><p>可以看到，f也是一个由泛化物品h和l决定的定义域为0..V的函数，也就是说，f是一个由泛化物品h和l决定的泛化物品。</p><p>由此可以定义泛化物品的和：h、l都是泛化物品，若泛化物品f满足以上关系式，则称f是h与l的和。这个运算的时间复杂度取决于背包的容量，是O(V^2)。</p><p>泛化物品的定义表明：在一个背包问题中，若将两个泛化物品代以它们的和，不影响问题的答案。事实上，对于其中的物品都是泛化物品的背包问题，求它的答案的过程也就是求所有这些泛化物品之和的过程。设此和为s，则答案就是s[0..V]中的最大值。</p><h3 id="背包问题的泛化物品"><a href="#背包问题的泛化物品" class="headerlink" title="背包问题的泛化物品"></a>背包问题的泛化物品</h3><p>一个背包问题中，可能会给出很多条件，包括每种物品的费用、价值等属性，物品之间的分组、依赖等关系等。但肯定能将问题对应于某个泛化物品。也就是说，给定了所有条件以后，就可以对每个非负整数v求得：若背包容量为v，将物品装入背包可得到的最大价值是多少，这可以认为是定义在非负整数集上的一件泛化物品。这个泛化物品——或者说问题所对应的一个定义域为非负整数的函数——包含了关于问题本身的高度浓缩的信息。一般而言，求得这个泛化物品的一个子域（例如0..V）的值之后，就可以根据这个函数的取值得到背包问题的最终答案。</p><p>综上所述，一般而言，求解背包问题，即求解这个问题所对应的一个函数，即该问题的泛化物品。而求解某个泛化物品的一种方法就是将它表示为若干泛化物品的和然后求之。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>本讲可以说都是我自己的原创思想。具体来说，是我在学习函数式编程的 Scheme 语言时，用函数编程的眼光审视各类背包问题得出的理论。这一讲真的很抽象，也许在“模型的抽象程度”这一方面已经超出了NOIP的要求，所以暂且看不懂也没关系。相信随着你的OI之路逐渐延伸，有一天你会理解的。</p><p>我想说：“思考”是一个OIer最重要的品质。简单的问题，深入思考以后，也能发现更多。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://desk-fd.zol-img.com.cn/t_s1920x1080c5/g2/M00/0C/00/ChMlWVyA5JuIJ-ifABrdMvVincoAAIp9gNZMZ0AGt1K305.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第八讲 泛化物品&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法:背包问题" scheme="https://leesen998.github.io/tags/%E7%AE%97%E6%B3%95-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>第七讲 有依赖的背包问题</title>
    <link href="https://leesen998.github.io/2016/12/17/%E7%AC%AC%E4%B8%83%E8%AE%B2%20%E6%9C%89%E4%BE%9D%E8%B5%96%E7%9A%84%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://leesen998.github.io/2016/12/17/第七讲 有依赖的背包问题/</id>
    <published>2016-12-17T11:48:29.000Z</published>
    <updated>2019-02-28T03:06:05.433Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg" alt="" style="width:100%"></p><p>第七讲 有依赖的背包问题</p><a id="more"></a><h3 id="简化的问题"><a href="#简化的问题" class="headerlink" title="简化的问题"></a>简化的问题</h3><p>这种背包问题的物品间存在某种“依赖”的关系。也就是说，i依赖于j，表示若选物品i，则必须选物品j。为了简化起见，我们先设没有某个物品既依赖于别的物品，又被别的物品所依赖；另外，没有某件物品同时依赖多件物品。</p><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p>这个问题由NOIP2006金明的预算方案一题扩展而来。遵从该题的提法，将不依赖于别的物品的物品称为“主件”，依赖于某主件的物品称为“附件”。由这个问题的简化条件可知所有的物品由若干主件和依赖于每个主件的一个附件集合组成。</p><p>按照背包问题的一般思路，仅考虑一个主件和它的附件集合。可是，可用的策略非常多，包括：一个也不选，仅选择主件，选择主件后再选择一个附件，选择主件后再选择两个附件……无法用状态转移方程来表示如此多的策略。（事实上，设有n个附件，则策略有2^n+1个，为指数级。）</p><p>考虑到所有这些策略都是互斥的（也就是说，你只能选择一种策略），所以一个主件和它的附件集合实际上对应于P06中的一个物品组，每个选择了主件又选择了若干个附件的策略对应于这个物品组中的一个物品，其费用和价值都是这个策略中的物品的值的和。但仅仅是这一步转化并不能给出一个好的算法，因为物品组中的物品还是像原问题的策略一样多。</p><p>再考虑P06中的一句话： 可以对每组中的物品应用P02中“一个简单有效的优化”。 这提示我们，对于一个物品组中的物品，所有费用相同的物品只留一个价值最大的，不影响结果。所以，我们可以对主件i的“附件集合”先进行一次01背包，得到费用依次为0..V-c[i]所有这些值时相应的最大价值f’[0..V-c[i]]。那么这个主件及它的附件集合相当于V-c[i]+1个物品的物品组，其中费用为c[i]+k的物品的价值为f’[k]+w[i]。也就是说原来指数级的策略中有很多策略都是冗余的，通过一次01背包后，将主件i转化为V-c[i]+1个物品的物品组，就可以直接应用P06的算法解决问题了。</p><h3 id="较一般的问题"><a href="#较一般的问题" class="headerlink" title="较一般的问题"></a>较一般的问题</h3><p>更一般的问题是：依赖关系以图论中“森林”的形式给出（森林即多叉树的集合），也就是说，主件的附件仍然可以具有自己的附件集合，限制只是每个物品最多只依赖于一个物品（只有一个主件）且不出现循环依赖。</p><p>解决这个问题仍然可以用将每个主件及其附件集合转化为物品组的方式。唯一不同的是，由于附件可能还有附件，就不能将每个附件都看作一个一般的01背包中的物品了。若这个附件也有附件集合，则它必定要被先转化为物品组，然后用分组的背包问题解出主件及其附件集合所对应的附件组中各个费用的附件所对应的价值。</p><p>事实上，这是一种树形DP，其特点是每个父节点都需要对它的各个儿子的属性进行一次DP以求得自己的相关属性。这已经触及到了“泛化物品”的思想。看完P08后，你会发现这个“依赖关系树”每一个子树都等价于一件泛化物品，求某节点为根的子树对应的泛化物品相当于求其所有儿子的对应的泛化物品之和。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>NOIP2006的那道背包问题我做得很失败，写了上百行的代码，却一分未得。后来我通过思考发现通过引入“物品组”和“依赖”的概念可以加深对这题的理解，还可以解决它的推广问题。用物品组的思想考虑那题中极其特殊的依赖关系：物品不能既作主件又作附件，每个主件最多有两个附件，可以发现一个主件和它的两个附件等价于一个由四个物品组成的物品组，这便揭示了问题的某种本质。</p><p>我想说：失败不是什么丢人的事情，从失败中全无收获才是。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第七讲 有依赖的背包问题&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法:背包问题" scheme="https://leesen998.github.io/tags/%E7%AE%97%E6%B3%95-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>第六讲 分组的背包问题</title>
    <link href="https://leesen998.github.io/2016/12/16/%E7%AC%AC%E5%85%AD%E8%AE%B2%20%E5%88%86%E7%BB%84%E7%9A%84%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://leesen998.github.io/2016/12/16/第六讲 分组的背包问题/</id>
    <published>2016-12-16T11:48:29.000Z</published>
    <updated>2019-02-28T02:43:26.345Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg" alt="" style="width:100%"></p><p>第六讲 分组的背包问题</p><a id="more"></a><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p>这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设f[k][v]表示前k组物品花费费用v能取得的最大权值，则有：</p><p>f[k][v]=max{f[k-1][v],f[k-1][v-c[i]]+w[i]|物品i属于组k}</p><p>使用一维数组的伪代码如下：</p><pre><code>for 所有的组k    for v=V..0        for 所有的i属于组k            f[v]=max{f[v],f[v-c[i]]+w[i]}</code></pre><p>注意这里的三层循环的顺序，甚至在本文的第一个beta版中我自己都写错了。“for v=V..0”这一层循环必须在“for 所有的i属于组k”之外。这样才能保证每一组内的物品最多只有一个会被添加到背包中。</p><p>另外，显然可以对每组内的物品应用P02中“一个简单有效的优化”。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如P07），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第六讲 分组的背包问题&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法:背包问题" scheme="https://leesen998.github.io/tags/%E7%AE%97%E6%B3%95-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>第五讲 二维费用的背包问题</title>
    <link href="https://leesen998.github.io/2016/12/15/%E7%AC%AC%E4%BA%94%E8%AE%B2%20%E4%BA%8C%E7%BB%B4%E8%B4%B9%E7%94%A8%E7%9A%84%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://leesen998.github.io/2016/12/15/第五讲 二维费用的背包问题/</id>
    <published>2016-12-15T11:48:29.000Z</published>
    <updated>2019-02-28T02:40:49.548Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg" alt="" style="width:100%"></p><p>第五讲 二维费用的背包问题</p><a id="more"></a><p>问题<br>二维费用的背包问题是指：对于每件物品，具有两种不同的费用；选择这件物品必须同时付出这两种代价；对于每种代价都有一个可付出的最大值（背包容量）。问怎样选择物品可以得到最大的价值。设这两种代价分别为代价1和代价2，第i件物品所需的两种代价分别为a[i]和b[i]。两种代价可付出的最大值（两种背包容量）分别为V和U。物品的价值为w[i]。</p><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p>费用加了一维，只需状态也加一维即可。设f[i][v][u]表示前i件物品付出两种代价分别为v和u时可获得的最大价值。状态转移方程就是：</p><p>f[i][v][u]=max{f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+w[i]}</p><p>如前述方法，可以只使用二维的数组：当每件物品只可以取一次时变量v和u采用逆序的循环，当物品有如完全背包问题时采用顺序的循环。当物品有如多重背包问题时拆分物品。这里就不再给出伪代码了，相信有了前面的基础，你能够自己实现出这个问题的程序。</p><h3 id="物品总个数的限制"><a href="#物品总个数的限制" class="headerlink" title="物品总个数的限制"></a>物品总个数的限制</h3><p>有时，“二维费用”的条件是以这样一种隐含的方式给出的：最多只能取M件物品。这事实上相当于每件物品多了一种“件数”的费用，每个物品的件数费用均为1，可以付出的最大件数费用为M。换句话说，设f[v][m]表示付出费用v、最多选m件时可得到的最大价值，则根据物品的类型（01、完全、多重）用不同的方法循环更新，最后在f[0..V][0..M]范围内寻找答案。</p><h3 id="复数域上的背包问题"><a href="#复数域上的背包问题" class="headerlink" title="复数域上的背包问题"></a>复数域上的背包问题</h3><p>另一种看待二维背包问题的思路是：将它看待成复数域上的背包问题。也就是说，背包的容量以及每件物品的费用都是一个复数。而常见的一维背包问题则是实数域上的背包问题。（注意：上面的话其实不严谨，因为事实上我们处理的都只是整数而已。）所以说，一维背包的种种思想方法，往往可以应用于二位背包问题的求解中，因为只是数域扩大了而已。</p><p>作为这种思想的练习，你可以尝试将P11中提到的“子集和问题”扩展到复数域（即二维），并试图用同样的复杂度解决。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>当发现由熟悉的动态规划题目变形得来的题目时，在原来的状态中加一纬以满足新的限制是一种比较通用的方法。希望你能从本讲中初步体会到这种方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第五讲 二维费用的背包问题&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法:背包问题" scheme="https://leesen998.github.io/tags/%E7%AE%97%E6%B3%95-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>第四讲 混合三种背包问题</title>
    <link href="https://leesen998.github.io/2016/12/13/%E7%AC%AC%E5%9B%9B%E8%AE%B2%20%E6%B7%B7%E5%90%88%E4%B8%89%E7%A7%8D%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://leesen998.github.io/2016/12/13/第四讲 混合三种背包问题/</id>
    <published>2016-12-13T11:48:29.000Z</published>
    <updated>2019-02-28T02:18:21.372Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg" alt="" style="width:100%"></p><p>第四讲 混合三种背包问题</p><a id="more"></a><p>问题<br>如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？</p><h3 id="01背包与完全背包的混合"><a href="#01背包与完全背包的混合" class="headerlink" title="01背包与完全背包的混合"></a>01背包与完全背包的混合</h3><p>考虑到在P01和P02中给出的伪代码只有一处不同，故如果只有两类物品：一类物品只能取一次，另一类物品可以取无限次，那么只需在对每个物品应用转移方程时，根据物品的类别选用顺序或逆序的循环即可，复杂度是O(VN)。伪代码如下：</p><pre><code>for i=1..N    if 第i件物品属于01背包        for v=V..0            f[v]=max{f[v],f[v-c[i]]+w[i]};    else if 第i件物品属于完全背包        for v=0..V            f[v]=max{f[v],f[v-c[i]]+w[i]};</code></pre><h3 id="再加上多重背包"><a href="#再加上多重背包" class="headerlink" title="再加上多重背包"></a>再加上多重背包</h3><p>如果再加上有的物品最多可以取有限次，那么原则上也可以给出O(VN)的解法：遇到多重背包类型的物品用单调队列解即可。但如果不考虑超过NOIP范围的算法的话，用P03中将每个这类物品分成O(log n[i])个01背包的物品的方法也已经很优了。</p><p>当然，更清晰的写法是调用我们前面给出的三个相关过程。</p><pre><code>for i=1..N    if 第i件物品属于01背包        ZeroOnePack(c[i],w[i])    else if 第i件物品属于完全背包        CompletePack(c[i],w[i])    else if 第i件物品属于多重背包        MultiplePack(c[i],w[i],n[i])</code></pre><p>在最初写出这三个过程的时候，可能完全没有想到它们会在这里混合应用。我想这体现了编程中抽象的威力。如果你一直就是以这种“抽象出过程”的方式写每一类背包问题的，也非常清楚它们的实现中细微的不同，那么在遇到混合三种背包问题的题目时，一定能很快想到上面简洁的解法，对吗？</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>有人说，困难的题目都是由简单的题目叠加而来的。这句话是否公理暂且存之不论，但它在本讲中已经得到了充分的体现。本来01背包、完全背包、多重背包都不是什么难题，但将它们简单地组合起来以后就得到了这样一道一定能吓倒不少人的题目。但只要基础扎实，领会三种基本背包问题的思想，就可以做到把困难的题目拆分成简单的题目来解决。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第四讲 混合三种背包问题&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法:背包问题" scheme="https://leesen998.github.io/tags/%E7%AE%97%E6%B3%95-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>第三讲 多重背包问题</title>
    <link href="https://leesen998.github.io/2016/12/12/%E7%AC%AC%E4%B8%89%E8%AE%B2%20%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://leesen998.github.io/2016/12/12/第三讲 多重背包问题/</id>
    <published>2016-12-12T11:48:29.000Z</published>
    <updated>2019-02-28T02:13:57.261Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg" alt="" style="width:100%"></p><p>第三讲 多重背包问题</p><a id="more"></a><p>题目<br>有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p><h3 id="基本算法"><a href="#基本算法" class="headerlink" title="基本算法"></a>基本算法</h3><p>这题目和完全背包问题很类似。基本的方程只需将完全背包问题的方程略微一改即可，因为对于第i种物品有n[i]+1种策略：取0件，取1件……取n[i]件。令f[i][v]表示前i种物品恰放入一个容量为v的背包的最大权值，则有状态转移方程：</p><pre><code>f[i][v]=max{f[i-1][v-k*c[i]]+k*w[i]|0&lt;=k&lt;=n[i]}</code></pre><p>复杂度是O(V*Σn[i])。</p><h3 id="转化为01背包问题"><a href="#转化为01背包问题" class="headerlink" title="转化为01背包问题"></a>转化为01背包问题</h3><p>另一种好想好写的基本方法是转化为01背包求解：把第i种物品换成n[i]件01背包中的物品，则得到了物品数为Σn[i]的01背包问题，直接求解，复杂度仍然是O(V*Σn[i])。</p><p>但是我们期望将它转化为01背包问题之后能够像完全背包一样降低复杂度。仍然考虑二进制的思想，我们考虑把第i种物品换成若干件物品，使得原问题中第i种物品可取的每种策略——取0..n[i]件——均能等价于取若干件代换以后的物品。另外，取超过n[i]件的策略必不能出现。</p><p>方法是：将第i种物品分成若干件物品，其中每件物品有一个系数，这件物品的费用和价值均是原来的费用和价值乘以这个系数。使这些系数分别为1,2,4,…,2^(k-1),n[i]-2^k+1，且k是满足n[i]-2^k+1&gt;0的最大整数。例如，如果n[i]为13，就将这种物品分成系数分别为1,2,4,6的四件物品。</p><p>分成的这几件物品的系数和为n[i]，表明不可能取多于n[i]件的第i种物品。另外这种方法也能保证对于0..n[i]间的每一个整数，均可以用若干个系数的和表示，这个证明可以分0..2^k-1和2^k..n[i]两段来分别讨论得出，并不难，希望你自己思考尝试一下。</p><p>这样就将第i种物品分成了O(log n[i])种物品，将原问题转化为了复杂度为O(V*Σlog n[i])的01背包问题，是很大的改进。</p><p>下面给出O(log amount)时间处理一件多重背包中物品的过程，其中amount表示物品的数量：</p><pre><code>procedure MultiplePack(cost,weight,amount)    if cost*amount&gt;=V        CompletePack(cost,weight)        return    integer k=1    while k&lt;amount        ZeroOnePack(k*cost,k*weight)        amount=amount-k        k=k*2    ZeroOnePack(amount*cost,amount*weight)</code></pre><p>希望你仔细体会这个伪代码，如果不太理解的话，不妨翻译成程序代码以后，单步执行几次，或者头脑加纸笔模拟一下，也许就会慢慢理解了。</p><h3 id="O-VN-的算法"><a href="#O-VN-的算法" class="headerlink" title="O(VN)的算法"></a>O(VN)的算法</h3><p>多重背包问题同样有O(VN)的算法。这个算法基于基本算法的状态转移方程，但应用单调队列的方法使每个状态的值可以以均摊O(1)的时间求解。由于用单调队列优化的DP已超出了NOIP的范围，故本文不再展开讲解。我最初了解到这个方法是在楼天成的“男人八题”幻灯片上。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>这里我们看到了将一个算法的复杂度由O(VΣn[i])改进到O(VΣlog n[i])的过程，还知道了存在应用超出NOIP范围的知识的O(VN)算法。希望你特别注意“拆分物品”的思想和方法，自己证明一下它的正确性，并将完整的程序代码写出来。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第三讲 多重背包问题&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法:背包问题" scheme="https://leesen998.github.io/tags/%E7%AE%97%E6%B3%95-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>第二讲 完全背包问题</title>
    <link href="https://leesen998.github.io/2016/12/11/%E7%AC%AC%E4%BA%8C%E8%AE%B2%20%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://leesen998.github.io/2016/12/11/第二讲 完全背包问题/</id>
    <published>2016-12-11T11:48:29.000Z</published>
    <updated>2019-03-01T08:38:35.133Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg" alt="" style="width:100%"></p><p>第二讲 完全背包问题</p><a id="more"></a><p>题目<br>有N种物品和一个容量为V的背包，<strong>每种物品都有无限件可用</strong>。第i种物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</p><h3 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h3><p><strong>这个问题非常类似于01背包问题，所不同的是每种物品有无限件</strong>。也就是从每种物品的角度考虑，与它相关的策略已并非取或不取两种，而是有取0件、取1件、取2件……等很多种。如果仍然按照解01背包时的思路，令f[i][v]表示前i种物品恰放入一个容量为v的背包的最大权值。仍然可以按照每种物品不同的策略写出状态转移方程，像这样：</p><pre><code>f[i][v]=max{f[i-1][v-k*c[i]]+k*w[i]|0&lt;=k*c[i]&lt;=v}</code></pre><p>这跟01背包问题一样有O(VN)个状态需要求解，但求解每个状态的时间已经不是常数了，求解状态f[i][v]的时间是O(v/c[i])，总的复杂度可以认为是O(V*Σ(V/c[i]))，是比较大的。</p><p>将01背包问题的基本思路加以改进，得到了这样一个清晰的方法。这说明01背包问题的方程的确是很重要，可以推及其它类型的背包问题。但我们还是试图改进这个复杂度。</p><h3 id="一个简单有效的优化"><a href="#一个简单有效的优化" class="headerlink" title="一个简单有效的优化"></a>一个简单有效的优化</h3><p>完全背包问题有一个很简单有效的优化，是这样的：若两件物品i、j满足c[i]=w[j]，则将物品j去掉，不用考虑。这个优化的正确性显然：任何情况下都可将价值小费用高得j换成物美价廉的i，得到至少不会更差的方案。对于随机生成的数据，这个方法往往会大大减少物品的件数，从而加快速度。然而这个并不能改善最坏情况的复杂度，因为有可能特别设计的数据可以一件物品也去不掉。</p><p>这个优化可以简单的O(N^2)地实现，一般都可以承受。另外，针对背包问题而言，比较不错的一种方法是：首先将费用大于V的物品去掉，然后使用类似计数排序的做法，计算出费用相同的物品中价值最高的是哪个，可以O(V+N)地完成这个优化。这个不太重要的过程就不给出伪代码了，希望你能独立思考写出伪代码或程序。</p><h3 id="转化为01背包问题求解"><a href="#转化为01背包问题求解" class="headerlink" title="转化为01背包问题求解"></a>转化为01背包问题求解</h3><p>既然01背包问题是最基本的背包问题，那么我们可以考虑把完全背包问题转化为01背包问题来解。最简单的想法是，考虑到第i种物品最多选V/c[i]件，于是可以把第i种物品转化为V/c[i]件费用及价值均不变的物品，然后求解这个01背包问题。这样完全没有改进基本思路的时间复杂度，但这毕竟给了我们将完全背包问题转化为01背包问题的思路：将一种物品拆成多件物品。</p><p>更高效的转化方法是：把第i种物品拆成费用为c[i]<em>2^k、价值为w[i]</em>2^k的若干件物品，其中k满足c[i]*2^k&lt;=V。这是二进制的思想，因为不管最优策略选几件第i种物品，总可以表示成若干个2^k件物品的和。这样把每种物品拆成O(log V/c[i])件物品，是一个很大的改进。</p><p>但我们有更优的O(VN)的算法。</p><h3 id="O-VN-的算法"><a href="#O-VN-的算法" class="headerlink" title="O(VN)的算法"></a>O(VN)的算法</h3><p>这个算法使用一维数组，先看伪代码：</p><pre><code>for i=1..N    for v=0..V        f[v]=max{f[v],f[v-cost]+weight}</code></pre><p>你会发现，这个伪代码与P01的伪代码只有v的循环次序不同而已。为什么这样一改就可行呢？首先想想为什么P01中要按照v=V..0的逆序来循环。这是因为要保证第i次循环中的状态f[i][v]是由状态f[i-1][v-c[i]]递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果f[i-1][v-c[i]]。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果f[i][v-c[i]]，所以就可以并且必须采用v=0..V的顺序循环。这就是这个简单的程序为何成立的道理。</p><p>值得一提的是，上面的伪代码中两层for循环的次序可以颠倒。这个结论有可能会带来算法时间常数上的优化。</p><p>这个算法也可以以另外的思路得出。例如，将基本思路中求解f[i][v-c[i]]的状态转移方程显式地写出来，代入原方程中，会发现该方程可以等价地变形成这种形式：</p><pre><code>f[i][v]=max{f[i-1][v],f[i][v-c[i]]+w[i]}</code></pre><p>将这个方程用一维数组实现，便得到了上面的伪代码。</p><p>最后抽象出处理一件完全背包类物品的过程伪代码：</p><pre><code>procedure CompletePack(cost,weight)    for v=cost..V        f[v]=max{f[v],f[v-c[i]]+w[i]}</code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>完全背包问题也是一个相当基础的背包问题，它有两个状态转移方程，分别在“基本思路”以及“O(VN)的算法“的小节中给出。希望你能够对这两个状态转移方程都仔细地体会，不仅记住，也要弄明白它们是怎么得出来的，最好能够自己想一种得到这些方程的方法。事实上，对每一道动态规划题目都思考其方程的意义以及如何得来，是加深对动态规划的理解、提高动态规划功力的好方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第二讲 完全背包问题&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法:背包问题" scheme="https://leesen998.github.io/tags/%E7%AE%97%E6%B3%95-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>01背包问题</title>
    <link href="https://leesen998.github.io/2016/12/10/%E7%AC%AC%E4%B8%80%E8%AE%B2%2001%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://leesen998.github.io/2016/12/10/第一讲 01背包问题/</id>
    <published>2016-12-10T11:48:29.000Z</published>
    <updated>2019-02-28T03:58:28.456Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg" alt="" style="width:100%"></p><p>第一讲 01背包问题</p><a id="more"></a><p> 题目</p><p><strong>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使价值总和最大。</strong></p><h3 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h3><p>这是最基础的背包问题，特点是：<strong>每种物品仅有一件，可以选择放或不放</strong>。</p><p>用子问题定义状态：即f[i][v]表示前i件物品恰放入一个容量为v的背包可以获得的最大价值。则其状态转移方程便是：</p><pre><code>f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]+w[i]}</code></pre><p>这个方程非常重要，基本上所有跟背包相关的问题的方程都是由它衍生出来的。所以有必要将它详细解释一下：“将前i件物品放入容量为v的背包中”这个子问题，<strong>若只考虑第i件物品的策略（放或不放）</strong>，那么就可以转化为一个只牵扯前i-1件物品的问题。<strong>如果不放第i件物品，那么问题就转化为“前i-1件物品放入容量为v的背包中”</strong>，价值为f[i-1][v]；<strong>如果放第i件物品，那么问题就转化为“前i-1件物品放入剩下的容量为v-c[i]的背包中”，此时能获得的最大价值就是f[i-1][v-c[i]]再加上通过放入第i件物品获得的价值w[i]。</strong></p><h3 id="优化空间复杂度"><a href="#优化空间复杂度" class="headerlink" title="优化空间复杂度"></a>优化空间复杂度</h3><p>以上方法的时间和空间复杂度均为O(VN)，其中时间复杂度应该已经不能再优化了，但空间复杂度却可以优化到O。</p><p>先考虑上面讲的基本思路如何实现，肯定是有一个主循环i=1..N，每次算出来二维数组f[i][0..V]的所有值。那么，如果只用一个数组f[0..V]，能不能保证第i次循环结束后f[v]中表示的就是我们定义的状态f[i][v]呢？f[i][v]是由f[i-1][v]和f[i-1][v-c[i]]两个子问题递推而来，能否保证在推f[i][v]时（也即在第i次主循环中推f[v]时）能够得到f[i-1][v]和f[i-1][v-c[i]]的值呢？<strong>事实上，这要求在每次主循环中我们以v=V..0的顺序推f[v]，这样才能保证推f[v]时f[v-c[i]]保存的是状态f[i-1][v-c[i]]的值</strong>。伪代码如下：</p><pre><code>for i=1..N    for v=V..0        f[v]=max{f[v],f[v-c[i]]+w[i]};</code></pre><p>其中的f[v]=max{f[v],f[v-c[i]]}一句恰就相当于我们的转移方程f[i][v]=max{f[i-1][v],f[i-1][v-c[i]]}，因为现在的f[v-c[i]]就相当于原来的f[i-1][v-c[i]]。如果将v的循环顺序从上面的逆序改成顺序的话，那么则成了f[i][v]由f[i][v-c[i]]推知，与本题意不符，但它却是另一个重要的背包问题<em>P02</em>最简捷的解决方案，<strong>故学习只用一维数组解01背包问题是十分必要的。</strong></p><p>事实上，使用一维数组解01背包的程序在后面会被多次用到，所以这里抽象出一个处理一件01背包中的物品过程，以后的代码中直接调用不加说明。</p><p>过程ZeroOnePack，表示处理一件01背包中的物品，两个参数cost、weight分别表明这件物品的费用和价值。</p><pre><code>procedure ZeroOnePack(cost,weight)    for v=V..cost        f[v]=max{f[v],f[v-cost]+weight}</code></pre><p>注意这个过程里的处理与前面给出的伪代码有所不同。前面的示例程序写成v=V..0是为了在程序中体现每个状态都按照方程求解了，避免不必要的思维复杂度。而这里既然已经抽象成看作黑箱的过程了，就可以加入优化。费<strong>用为cost的物品不会影响状态f[0..cost-1]，这是显然的</strong>。</p><p>有了这个过程以后，01背包问题的伪代码就可以这样写：</p><pre><code>for i=1..N    ZeroOnePack(c[i],w[i]);</code></pre><h3 id="初始化的细节问题"><a href="#初始化的细节问题" class="headerlink" title="初始化的细节问题"></a>初始化的细节问题</h3><p>我们看到的求最优解的背包问题题目中，事实上有<strong>两种不太相同</strong>的问法。<strong>有的题目要求“恰好装满背包”时的最优解，有的题目则并没有要求必须把背包装满</strong>。一种区别这两种问法的实现方法是在<strong>初始化的时候有所不同。</strong></p><p><strong>如果是第一种问法，要求恰好装满背包，那么在初始化时除了f[0]为0其它f[1..V]均设为-∞，这样就可以保证最终得到的f[N]是一种恰好装满背包的最优解。</strong></p><p><strong>如果并没有要求必须把背包装满，而是只希望价格尽量大，初始化时应该将f[0..V]全部设为0。</strong></p><p>为什么呢？可以这样理解：<strong>初始化的f数组事实上就是在没有任何物品可以放入背包时的合法状态。如果要求背包恰好装满，那么此时只有容量为0的背包可能被价值为0的“恰好装满”，其它容量的背包均没有合法的解，属于未定义的状态，它们的值就都应该是-∞了。如果背包并非必须被装满，那么任何容量的背包都有一个合法解“什么都不装”，这个解的价值为0，所以初始时状态的值也就全部为0了。</strong></p><p>这个小技巧完全可以推广到其它类型的背包问题，后面也就不再对进行状态转移之前的初始化进行讲解。</p><h3 id="一个常数优化"><a href="#一个常数优化" class="headerlink" title="一个常数优化"></a>一个常数优化</h3><p>前面的伪代码中有 for v=V..1，可以将这个循环的下限进行改进。</p><p>由于只需要最后f[v]的值，倒推前一个物品，其实只要知道f[v-w[n]]即可。以此类推，对以第j个背包，其实只需要知道到f[v-sum{w[j..n]}]即可，即代码中的</p><pre><code>for i=1..N    for v=V..0</code></pre><p>可以改成</p><pre><code>for i=1..n    bound=max{V-sum{w[i..n]},c[i]}    for v=V..bound</code></pre><p>这对于V比较大时是有用的。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>01背包问题是最基本的背包问题，它包含了背包问题中设计状态、方程的最基本思想，另外，别的类型的背包问题往往也可以转换成01背包问题求解。故一定要仔细体会上面基本思路的得出方法，状态转移方程的意义，以及最后怎样优化的空间复杂度。</p><p>01背包的状态转换方程 f[i,j] = Max{ f[i-1,j-Wi]+Pi( j &gt;= Wi ),  f[i-1,j] }<br>f[i,j]表示在前i件物品中选择若干件放在承重为 j 的背包中，可以取得的最大价值。<br>Pi表示第i件物品的价值。<br>决策：为了背包中物品总价值最大化，第 i件物品应该放入背包中吗 ？</p><p>题目描述：</p><p>假设山洞里共有a,b,c,d ,e这5件宝物（不是5种宝物），它们的重量分别是2,2,6,5,4，它们的价值分别是6,3,5,4,6，现在给你个承重为10的背包, 怎么装背包，可以才能带走最多的财富。</p><p>有编号分别为a,b,c,d,e的五件物品，它们的重量分别是2,2,6,5,4，它们的价值分别是6,3,5,4,6，现在给你个承重为10的背包，如何让背包里装入的物品具有最大的价值总和？</p><p>name    weight    value    1    2    3    4    5    6    7    8    9    10<br>a    2    6    0    6    6    9    9    12    12    15    15    15<br>b    2    3    0    3    3    6    6    9    9    9    10    11<br>c    6    5    0    0    0    6    6    6    6    6    10    11<br>d    5    4    0    0    0    6    6    6    6    6    10    10<br>e    4    6    0    0    0    6    6    6    6    6    6    6</p><p>只要你能通过找规律手工填写出上面这张表就算理解了01背包的动态规划算法。</p><p>首先要明确这张表是至底向上，从左到右生成的。</p><p>为了叙述方便，用e2单元格表示e行2列的单元格，这个单元格的意义是用来表示只有物品e时，有个承重为2的背包，那么这个背包的最大价值是0，因为e物品的重量是4，背包装不了。</p><p>对于d2单元格，表示只有物品e，d时,承重为2的背包,所能装入的最大价值，仍然是0，因为物品e,d都不是这个背包能装的。</p><p>同理，c2=0，b2=3,a2=6。</p><p>对于承重为8的背包，a8=15,是怎么得出的呢？</p><p>根据01背包的状态转换方程，需要考察两个值，</p><p>一个是f[i-1,j],对于这个例子来说就是b8的值9，另一个是f[i-1,j-Wi]+Pi；</p><p>在这里，</p><p> f[i-1,j]表示我有一个承重为8的背包，当只有物品b,c,d,e四件可选时，这个背包能装入的最大价值</p><p>f[i-1,j-Wi]表示我有一个承重为6的背包（等于当前背包承重减去物品a的重量），当只有物品b,c,d,e四件可选时，这个背包能装入的最大价值</p><p>f[i-1,j-Wi]就是指单元格b6,值为9，Pi指的是a物品的价值，即6</p><p>由于f[i-1,j-Wi]+Pi = 9 + 6 = 15 大于f[i-1,j] = 9，所以物品a应该放入承重为8的背包</p><p>以下是actionscript3 的代码</p><pre><code>public function get01PackageAnswer(bagItems:Array,bagSize:int):Array{    var bagMatrix:Array=[];    var i:int;    var item:PackageItem;    for(i=0;i&lt;bagItems.length;i++)    {        bagMatrix[i] = [0];    }    for(i=1;i&lt;=bagSize;i++)    {        for(var j:int=0;j&lt;bagItems.length;j++)        {            item = bagItems[j] as PackageItem;            if(item.weight &gt; i)            {                //i背包转不下item                if(j==0)                {                    bagMatrix[j][i] = 0;                }                else                {                    bagMatrix[j][i]=bagMatrix[j-1][i];                }            }            else            {                //将item装入背包后的价值总和                var itemInBag:int;                if(j==0)                {                    bagMatrix[j][i] = item.value;                    continue;                }                else                {                    itemInBag = bagMatrix[j-1][i-item.weight]+item.value;                }                bagMatrix[j][i] = (bagMatrix[j-1][i] &gt; itemInBag ? bagMatrix[j-1][i] : itemInBag)            }        }    }    //find answer    var answers:Array=[];    var curSize:int = bagSize;    for(i=bagItems.length-1;i&gt;=0;i--)    {        item = bagItems[i] as PackageItem;        if(curSize==0)        {            break;        }        if(i==0 &amp;&amp; curSize &gt; 0)        {            answers.push(item.name);            break;        }        if(bagMatrix[i][curSize]-bagMatrix[i-1][curSize-item.weight]==item.value)        {            answers.push(item.name);            curSize -= item.weight;        }    }    return answers;}</code></pre><p>PackageItem类<br>    public class PackageItem<br>    {<br>        public var name:String;<br>        public var weight:int;<br>        public var value:int;<br>        public function PackageItem(name:String,weight:int,value:int)<br>        {<br>            this.name = name;<br>            this.weight = weight;<br>            this.value = value;<br>        }<br>    }</p><p>测试代码<br>                var nameArr:Array=[‘a’,’b’,’c’,’d’,’e’];<br>                var weightArr:Array=[2,2,6,5,4];<br>                var valueArr:Array=[6,3,5,4,6];<br>                var bagItems:Array=[];<br>                for(var i:int=0;i&lt;nameArr.length;i++)<br>                {<br>                    var bagItem:PackageItem = new PackageItem(nameArr[i],weightArr[i],valueArr[i]);<br>                    bagItems[i]=bagItem;<br>                }<br>                var arr:Array = ac.get01PackageAnswer(bagItems,10);</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第一讲 01背包问题&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法:背包问题" scheme="https://leesen998.github.io/tags/%E7%AE%97%E6%B3%95-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法基础1()</title>
    <link href="https://leesen998.github.io/2016/12/08/chapter1%E7%AC%94%E8%AE%B0/"/>
    <id>https://leesen998.github.io/2016/12/08/chapter1笔记/</id>
    <published>2016-12-08T11:48:29.000Z</published>
    <updated>2019-02-28T02:59:17.269Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg" alt="" style="width:100%"></p><p>1、<br>2、<br>3、<br>4、<br>5、<br>6、</p><a id="more"></a><h3 id="01算法复杂度"><a href="#01算法复杂度" class="headerlink" title="01算法复杂度"></a>01算法复杂度</h3><h4 id="大O记号"><a href="#大O记号" class="headerlink" title="大O记号"></a>大O记号</h4><p>同样地出于保守的估计，我们首先关注T(n)的渐进上界。为此可引入所谓“大O记号”（big-O notation） 。<br>具体地，若存在正的常数c和函数f(n)，使得对任何n &gt;&gt; 2都有<br>T(n) &lt;= c∙f(n)则可认为在n足够大之后， f(n)给出了T(n)增长速度的一个<strong>渐进上界</strong>。此时，记之为：<br>T(n) = O(f(n))<br>由这一定义，可导出大O记号的以下性质：<br>(1) 对于任一常数c &gt; 0，有O(f(n)) = O(c∙f(n))<br>(2) 对于任意常数a &gt; b &gt; 0，有O(n^a + n^b) = O(n^a)</p><h4 id="大Ω记号"><a href="#大Ω记号" class="headerlink" title="大Ω记号"></a>大Ω记号</h4><p>为了对算法的复杂度最好情况做出估计，需要借助另一个记号。如果存在正的常数c和函数g(n)，使得对于任何n &gt;&gt; 2都有T(n)  c∙g(n)<br>就可以认为，在n足够大之后， g(n)给出了T(n)的一个<strong>渐进下界</strong>。此时，我们记之为：<br>T(n) = Ω(g(n))<br>这里的Ω称作“大Ω记号” （big-Ω notation）。<br>与大O记号恰好相反，大Ω记号是对算法执行效率的乐观估计—对于规模为n的任意输入，算法的运行时间都不低于Ω(g(n))。比如，即便在最好情况下，起泡排序也至少需要T(n) = Ω(n)的计算时间。</p><h4 id="大Θ记号"><a href="#大Θ记号" class="headerlink" title="大Θ记号"></a>大Θ记号</h4><p>借助大O记号、大Ω记号，可以对算法的时间复杂度作出定量的界定，亦即，从渐进的趋势<br>看， T(n)介于Ω(g(n))与O(f(n))之间。若恰巧出现g(n) = f(n)的情况，则可以使用另一记号来表示。<br>如果存在正的常数c1 &lt; c2和函数h(n)，使得对于任何n &gt;&gt; 2都有<br> c1∙h(n) &lt;= T(n) &lt;= c2∙h(n)<br>就可以认为在n足够大之后， h(n)给出了T(n)的一个<strong>确界</strong>。此时，我们记之为：<br>T(n) = Θ(h(n))<br>这里的Θ称作“大Θ记号” （big-Θ notation） ，它是对算法复杂度的准确估计</p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544775642/samples/java%20files/118.jpg" alt=""></p><h4 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h4><h5 id="常数O-1"><a href="#常数O-1" class="headerlink" title="常数O(1)"></a>常数O(1)</h5><p> 问题与算法<br>首先考查如下问题：任给一个整数子集S, |S| = n ≥ 3，从中找出一个元素a ∈ S，使得<br>a ≠ max(S)且a ≠ min(S)。亦即，在最大、最小者之外任取一个元素，称作“非极端元素” 或“平常元素” 。<br>任取三个元素x, y, z ∈ S; //既然S是集合，返三个元素必于异<br>通过比较对它们做排序; //设排序结枅为：min{x, y, z}, median(x, y, z), max{x, y, z}<br>输出median(x, y, z);</p><h5 id="对数O-logn"><a href="#对数O-logn" class="headerlink" title="对数O(logn)"></a>对数O(logn)</h5><p> 问题与算法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i =<span class="number">1</span>,n=<span class="number">1000</span>,j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line"></span><br><span class="line">            i*=<span class="number">2</span>;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>每次i乘以2，也就是说，至多经过1 + log2（n）次循环， i必然超过n，从而算法终止<br><strong>由大O记号定义，在用函数logrn界定渐进复杂度时，常底数r的具体取值无所谓，故通常不予专门标出而笼统地记作logn</strong>。<br>比如，尽管此处底数为常数2，却可直接记作O(logn)。<br>此类算法称作具有“对数时间复杂度”</p><h5 id="线性O-n"><a href="#线性O-n" class="headerlink" title="线性O(n)"></a>线性O(n)</h5><p> 问题与算法<br>考查如下问题：计算给定n个整数的总和。 该问题可由代码1.3中的算法sumI()解决。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sumI</span><span class="params">(<span class="keyword">int</span> A[], <span class="keyword">int</span> n)</span> </span>&#123; <span class="comment">//数组求和算法（迭代版）</span></span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>; <span class="comment">//初始化累计器，O(1)</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">//对全部共O(n)个元素，逐一</span></span><br><span class="line">sum += A[i]; <span class="comment">//累计，O(1)</span></span><br><span class="line"><span class="keyword">return</span> sum; <span class="comment">//返回回累计值，O(1)</span></span><br><span class="line">&#125; <span class="comment">//O(1) + O(n)*O(1) + O(1) = O(n+2) = O(n)</span></span><br></pre></td></tr></table></figure></p><p>首先，对s的初始化需要O(1)时间。算法的主体部分是一个循环，每一轮循环中只需进行一次累加运算，这属于基本操作，可在O(1)时间内完成。<br>每经过一轮循环，都将一个元素累加至s，故总共需要做n轮循环， 于是该算法的运行时间应为：<br>O(1) + O(1)×n = O(n+1) = O(n)</p><h5 id="多项式O-polynomial-n"><a href="#多项式O-polynomial-n" class="headerlink" title="多项式O(polynomial(n))"></a>多项式O(polynomial(n))</h5><p>若运行时间可以表示和度量为T(n) = O(f(n))的形式，而且f(x)为多项式，则对应的算法称作“多项式时间复杂度算法” （polynomial-time algorithm)。<br>所实现起泡排序bubblesort()算法的时间复杂度应为T(n) = O(n^2)， 故该算法即属于此类。<br>当然， 以上所介绍的线性时间复杂度算法， 也属于多项式时间复杂度算法的特例，其中线性多项式f(n) = n的次数为1<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544778262/samples/java%20files/121.jpg" alt=""></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544778262/samples/java%20files/122.jpg" alt=""></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544778262/samples/java%20files/123.jpg" alt=""></p><h5 id="复杂度层次"><a href="#复杂度层次" class="headerlink" title="复杂度层次"></a>复杂度层次</h5><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544777430/samples/java%20files/119.jpg" alt=""><br>常用的<strong>时间复杂度</strong>所耗费的时间<strong>从小到大</strong>依次是：<br><strong>O(1) &lt; O(logn) &lt; (n) &lt; O(nlogn) &lt; O(n^2) &lt; O(n^3) &lt; O(2^n) &lt; O(n!) &lt; O(n^n)</strong></p><h3 id="02递归"><a href="#02递归" class="headerlink" title="02递归"></a>02递归</h3><h4 id="线性递归"><a href="#线性递归" class="headerlink" title="线性递归"></a>线性递归</h4><p>数组求和<br>以下仍以下数组求和问题为例，采用线性递归模式设计另一算法。首先注意到，若n =0则总和必为0，这也是最终的平凡情况。否则一般地，数组的总和可理解为前n-1个整数（即A[0,n-2]）之和，再加上A[]的最后一个元素（即A[n-1]）。 按这一思路，可设计出sum()算法如代码1.5所示<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线性递归,数组求和</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> [] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> result = func(arr,arr.length);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> []  arr,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (n&lt;<span class="number">1</span>) ? <span class="number">0</span>:func(arr,n-<span class="number">1</span>)+arr[n-<span class="number">1</span>];</span><br><span class="line"><span class="comment">// n &lt; 1平凡情况，递归基</span></span><br><span class="line"><span class="comment">//return 0; //直接（非递归式）计算</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>由此实例可看出递归算法保证有穷性的基本技巧。 具体地，<strong>首先必须判断并处理n = 0之类的平凡情况，以免因无限递归而导致系统溢出。这类平凡情况统称“递归基”（base case ofrecursion）</strong>。<strong> 可能有多种平凡情况</strong>，但至少要有一种，且这类情况迟早必出现。比如，算法sum()的递归基只包含一种情况，只需简单地判断n是否已经减小到0</p><p>算法sum()是通过更深一层的自我调用来实现的，而且该函数的每一实例对自身的调用至多一次。于是，<strong>在每一层次上至多只有一个实例，且它们构成一个线性的次序关系。此类递归模式因而称作“线性递归” （linear recursion）</strong> ，它也是递归的最基本形式<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544754637/samples/java%20files/010.jpg" alt=""><br>该图清晰地给出了算法执行的整个过程：首先对参数n进行调用，再转向对参数n-1的调用，再转向对参数n-2的调用， …，直至最终的参数0。<br>在抵达递归基后不再递归，而是将平凡的解（长度为0数组的总和0）返回给对参数1的调用；累加上A[0]之后，再返回给对参数2的调用；<br>累加上A[1]之后，继续返回给对参数3的调用； …；如此依次返回，直到最终返回给对参数n的调用，此时，只需累加A[n-1]即得到整个数组的总和</p><p><strong>时间复杂度：</strong><br>具体地， 就以上的sum()算法而言，每一递归实例中非递归部分所涉及的计算无非三类（判断n是否为0、累加sum(n-1)与A[n-1]、返回当前总和） ，而且它们至多各执行一次。<br>鉴于它们均属于常数时间成本的基本操作，每个递归实例实际所需的计算时间都应为常数O(3)。由图还可以看出， <strong>对于长度为n的输入数组，递归深度应为n+1，故整个sum()算法共需运行(n+1) * O(3) = O(n)时间</strong></p><p><strong>空间复杂度：</strong><br>在创建了最后一个递归实例（即到达递归基）时，占用的空间量达到最大——准确地说，<strong>等于所有递归实例各自所占空间量的总和</strong>。<br>这里每一递归实例所需存放的数据，无非是<strong>调用参数（数组A的起始地址和长度n）以及用于累加总和的临时变量</strong>。<br>这些数据各自只需<strong>常数规模</strong>的空间，其总量也应为常数。<br>故此可知，<strong>sum()算法的空间复杂度线性正比于其递归的深度， 亦即O(n)</strong></p><p><strong>递归算法的空间复杂度：递归深度N*每次递归所要的辅助空间， 如果每次递归所需的辅助空间是常数，则递归的空间复杂度是 O(N).</strong></p><h5 id="减而治之"><a href="#减而治之" class="headerlink" title="减而治之"></a>减而治之</h5><p>线性递归模式往往对应于所谓<strong>减而治之（decrease-and-conquer）</strong> 的算法策略：递归每深入一层，待求解问题的规模都缩减一个常数，直至最终蜕化为平凡的小（简单）问题。<br>按照减而治之策略，此处随着递归的深入，调用参数将单调地线性递减。因此无论最初输入的n有多大，递归调用的总次数都是有限的， 故算法的执行迟早会终止，即满足有穷性。<strong>当抵达递归基时，算法将执行非递归的计算（这里是返回0）</strong><br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544755213/samples/java%20files/112.jpg" alt=""></p><h5 id="递推方程"><a href="#递推方程" class="headerlink" title="递推方程"></a>递推方程</h5><p>该方法无需绘出具体的调用过程，而是通过对递归模式的数学归纳，导出关<br>于复杂度定界函数的递推方程（组）及其边界条件，从而将复杂度分析的任务转化为递归方程（组）的求解</p><p>仍以代码线性递归版sum()算法为例， 将该算法处理长度为n的数组所需的时间成本记作T(n)。<br>我们将该算法的思路重新表述如下：为解决问题sum(A, n)，需递归地解决问题sum(A,n-1)，然后累加上A[n-1]。<br>按照这一新的理解，求解sum(A, n)所需的时间，应该等于求解sum(A,n-1)所需的时间，另加一次整数加法运算所需的时间。</p><p>根据以上分析，可以得到关于T(n)的如下一般性的递推关系：<br>T(n) = T(n-1) + O(1) = T(n-1) + c1，其中c1为常数<br>另一方面，当递归过程抵达递归基时，求解平凡问题sum(A, 0)只需（用于直接返回0的）常数时间。<br>如此，即可获得如下边界条件：<br>T(0) = O(1) = c2， 其中c2为常数<br>联立以上两个方程， 最终可以解得：<br><strong>T(n) = c1n + c2 = O(n)</strong></p><p><strong>递归算法的空间复杂度：递归深度N*每次递归所要的辅助空间， 如果每次递归所需的辅助空间是常数，则递归的空间复杂度是 O(N).</strong></p><p><strong>线性递归版sum()算法共需O(n)的附加空间</strong></p><h5 id="多递归基"><a href="#多递归基" class="headerlink" title="多递归基"></a>多递归基</h5><p>为保证有穷性， 所有递归算法都首先必须设有递归基，且确保对应的语句总能执行到。<br>实际上， 针对算法中可能出现的每一类平凡情况，都需要设置对应的递归基，因此同一算法的递归基可能（显式或隐式地）不止一个。<br>以下考察数组倒置问题， 也就是将数组中各元素的次序前后翻转。 比如，若输入数组为：<br>A[] = {3, 1, 4, 1, 5, 9, 2, 6}<br>则倒置后为：<br>A[] = {6, 2, 9, 5, 1, 4, 1, 3}<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544756811/samples/java%20files/113.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多递归基，数组倒置</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reserse</span><span class="params">(<span class="keyword">int</span> [] a,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(left&lt;<span class="number">0</span> || right&gt;=a.length)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(left &lt; right)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp =a[left];</span><br><span class="line">            a[left] =a[right];</span><br><span class="line">            a[right] = temp;</span><br><span class="line">            reserse(a,left+<span class="number">1</span>,right-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">////else隐含了两种递归基</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可见，每深入递归一层，待倒置区间的长度 left - right + 1都缩短2个单元。因此， 所有递归实例所对应区间长度的奇偶性一致。<br><strong>需要特别留意的是， 此处递归基实际上分为两种情况： left = right（原数组长度为奇数）或left = right + 1（原数组长度为偶数）。当然，无论如何reverse()算法都必然会终止于这两种平凡情况之一，因此递归的深度应为：<br>[(n + 1) / 2] = O(n)</strong><br>在算法终止之前，递归每深入一层都会通过一次对换使得当前的A[left]与A[right]就位，因此该算法的时间复杂度也应线性正比于递归深度，即O(n)。</p><h4 id="二分递归"><a href="#二分递归" class="headerlink" title="二分递归"></a>二分递归</h4><h5 id="分而治之"><a href="#分而治之" class="headerlink" title="分而治之"></a>分而治之</h5><p>面对输入规模庞大的应用问题，每每感慨于头绪纷杂而无从下手的你，不妨从先哲孙子的名言中获取灵感“凡治众如治寡，分数是也” 。是的，解决此类问题的有效方法之一，就是将其<strong>分解为若干规模更小的子问题</strong>， 再通过递归机制分别求解。 这种分解持续进行，直到子问题规模缩减至平凡情况。这也就是所谓的分而治之（divide-and-conquer） 策略<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544757921/samples/java%20files/115.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二分递归，数组求和</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> [] a,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(left&lt;<span class="number">0</span> || right&gt;=a.length)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(left == right)&#123;</span><br><span class="line">            <span class="keyword">return</span> a[left];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> medium = (left+right)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> sum(a,left,medium) + sum(a,medium+<span class="number">1</span>,right);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544760574/samples/java%20files/117.jpg" alt=""></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544760532/samples/java%20files/1169.jpg" alt=""><br>针对n = 8的情况给出了sum(A, 0, 7)执行过程的递归跟踪。其中各方框都标注有对应的lo和hi值， 即子数组区间的起、止单元。<br>可见，按照调用的关系及次序，<strong>该方法的所有实例构成一个层次结构（即二叉树）</strong>。<br>沿着这个层次结构每下降一层，每个递归实例sum(lo, hi)都分裂为一对更小的实例sum(lo, mi)和sum(mi+1, hi)——准确地说，<strong>每经过一次递归调用， 子问题对应的数组区间长度hi-lo+1都将减半</strong>。</p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1544794354/samples/java%20files/124.jpg" alt=""><br>算法启动后经连续m = log2n次递归调用，数组区间的长度从最初的n首次缩减至1，并到达第一个递归基。<br><strong>实际上，刚到达任一递归基时，已执行的递归调用总是比递归返回多m = log2n次。<br>更一般地，到达区间长度为2^k的任一递归实例之前，已执行的递归调用总是比递归返回多m-k次。</strong><br>因此，<strong>递归深度（即任一时刻的活跃递归实例的总数）不会超过m+1</strong>。<br>鉴于每个递归实例仅需常数空间， 故除数组本身所占的空间，该<strong>算法只需要O(m+1) = O(logn)的附加空间。</strong><br>我们还记得， 代码1.5 中线性递归版sum()算法共需O(n)的附加空间，就这一点而言，新的二分递归版sum()算法有很大改进</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1544254144/samples/java%20files/photo-1542312455-e31bb150371c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;1、&lt;br&gt;2、&lt;br&gt;3、&lt;br&gt;4、&lt;br&gt;5、&lt;br&gt;6、&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构与算法" scheme="https://leesen998.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb学习笔记——基础2(CSS&amp;JS)</title>
    <link href="https://leesen998.github.io/2016/12/04/javaweb_day02-css&amp;js%E5%8F%82%E8%80%83/"/>
    <id>https://leesen998.github.io/2016/12/04/javaweb_day02-css&amp;js参考/</id>
    <published>2016-12-04T11:48:29.000Z</published>
    <updated>2019-02-19T09:47:14.298Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297948/samples/java%20files/photo-1544728344-7efa025e5603.jpg" alt="" style="width:100%"></p><p>了解CSS的概念<br>了解CSS的引入方式<br>了解CSS的基本语法和常用的选择器<br>了解CSS的盒子模型,悬浮和定位.<br><strong>了解JS的概念 掌握JS的基本语法,数据类型,能够使用JS完成简单的页面交互</strong></p><a id="more"></a><p><strong>任务</strong></p><ul><li><p>使用CSS完成网站首页的美化</p></li><li><p>使用CSS完成网站注册页面的美化</p></li><li><p>使用JS完成简单的数据校验</p></li><li><p>使用JS完成图片轮播效果</p></li></ul><p><strong>导航</strong></p><p>| <strong>目标</strong> | 了解CSS的概念 了解CSS的引入方式<br>了解CSS的基本语法和常用的选择器<br>了解CSS的盒子模型,悬浮和定位.<br><strong>了解JS的概念 掌握JS的基本语法,数据类型,能够使用JS完成简单的页面交互</strong>. |</p><h2 id="使用CSS对首页进行重新布局："><a href="#使用CSS对首页进行重新布局：" class="headerlink" title="使用CSS对首页进行重新布局："></a>使用CSS对首页进行重新布局：</h2><h3 id="需求分析："><a href="#需求分析：" class="headerlink" title="需求分析："></a>需求分析：</h3><p>在上次的HTML课程中已经使用表格标签对页面进行布局显示了，但是表格标签有一定的缺陷。实际开发中都会采用DIV+CSS的方式进行布局。使用DIV+CSS重新布局网站的首页：</p><p><img src="/2016/12/04/javaweb_day02-css&js参考/05fcb96be337da274cdf022e79d4a79c.png" alt=""></p><h3 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h3><h4 id="技术分析"><a href="#技术分析" class="headerlink" title="技术分析"></a>技术分析</h4><p>【HTML的DIV标签】</p><p>HTML中有两个块标记：</p><pre><code>    &lt;div&gt;&lt;/div&gt;    &lt;span&gt;&lt;/span&gt;</code></pre><p>【CSS的概述】</p><ul><li>什么是CSS：</li></ul><p>Cascading Style Sheets 层叠样式表.</p><ul><li>CSS的作用：</li></ul><p>CSS主要用来修饰HTML的显示.代码复用.将页面元素与样式进行分离.</p><ul><li>CSS的使用：</li></ul><p>语法：</p><p>选择器{属性1:属性值;属性2:属性值;..}</p><pre><code>&lt;style&gt;    h2{        color:red;        font-size:100px;    }&lt;/style&gt;</code></pre><p>【CSS的引入方式】</p><ul><li>行内样式：</li></ul><p>直接在html的元素上使用style的属性编写CSS：</p><pre><code>&lt;span style=&quot;color:#00FF00 ;font-size: 100px;&quot;&gt;训练营&lt;/span&gt;</code></pre><ul><li>内部样式：</li></ul><p>在html的\&lt;head>标签中使用\&lt;style>标签来定义CSS</p><pre><code>&lt;style&gt;    span{        color:blue;        font-size: 200px;    }&lt;/style&gt;</code></pre><ul><li>外部样式：</li></ul><p>将CSS定义成一个.css的文件，在html中将该文件引入到html中</p><pre><code>&lt;link href=&quot;style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;</code></pre><p>【CSS的基本选择器】</p><p>CSS的选择器为了更能精确的找个某个元素来设计的</p><ul><li>元素选择器：</li></ul><pre><code>div{color: red;}</code></pre><ul><li>id选择器：</li></ul><pre><code>        &lt;style&gt;            #d1{                color: red;            }        &lt;/style&gt;    &lt;div id=&quot;d1&quot;&gt;王凤&lt;/div&gt;***** id通常都是唯一的.</code></pre><ul><li>类选择器：</li></ul><pre><code>HTML:&lt;div class=&quot;d1&quot;&gt;王守义&lt;/div&gt;        &lt;div&gt;王凤&lt;/div&gt;        &lt;div class=&quot;d1&quot;&gt;王如花&lt;/div&gt;CSS:        &lt;style&gt;            .d1{                color: green;            }        &lt;/style&gt;</code></pre><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">选择器:★</span><br><span class="line"><span class="tag">&lt;<span class="name">id选择器</span>&gt;</span>&gt;</span><br><span class="line">要求:</span><br><span class="line">html元素必须有id属性且有值   <span class="tag">&lt;<span class="name">xxx</span> <span class="attr">id</span>=<span class="string">"id1"</span>&gt;</span><span class="tag">&lt;/<span class="name">xxx</span>&gt;</span></span><br><span class="line">css中通过"#"引入,后面加上id的值  #id1&#123;...&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">class选择器</span></span></span><br><span class="line"><span class="tag">要求<span class="attr">:</span></span></span><br><span class="line">html元素必须有class属性且有值 &lt;xxx class="cls1"/&gt;</span><br><span class="line">css中通过"."引入,后面加上class的值  .cls1&#123;...&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">元素选择器</span>&gt;</span></span><br><span class="line">直接用元素(标签)名即可   xxx&#123;...&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">派生的选择器</span><br><span class="line"><span class="tag">&lt;<span class="name">属性选择器★</span>&gt;</span></span><br><span class="line">要求:</span><br><span class="line">html元素必须有一个属性不论属性是什么且有值  <span class="tag">&lt;<span class="name">xxx</span> <span class="attr">nihao</span>=<span class="string">"wohenhao"</span>/&gt;</span></span><br><span class="line">css中通过下面的方式使用</span><br><span class="line">元素名[属性="属性值"]&#123;....&#125;</span><br><span class="line">例如:</span><br><span class="line">xxx[nihao="wohenhao"]&#123;....&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">后代选择器</span>&gt;</span></span><br><span class="line">选择器 后代选择器&#123;...&#125;   </span><br><span class="line"><span class="tag">&lt;<span class="name">在满足第一个选择器的条件下找后代的选择器,给满足条件的元素添加样式</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">了解的选择器</span><br><span class="line">锚伪类选择器</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">锚伪类</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">在支持</span> <span class="attr">CSS</span> 的浏览器中，链接的不同状态都可以不同的方式显示，</span></span><br><span class="line"><span class="tag">这些状态包括：活动状态，已被访问状态，未被访问状态，和鼠标悬停状态。&gt;</span></span><br><span class="line"></span><br><span class="line">a:link &#123;color: #FF0000&#125;/* 未访问的链接 */</span><br><span class="line">a:visited &#123;color: #00FF00&#125;/* 已访问的链接 */</span><br><span class="line">a:hover &#123;color: #FF00FF&#125;/* 鼠标移动到链接上 */</span><br><span class="line">a:active &#123;color: #0000FF&#125;/* 选定的链接 */</span><br><span class="line">提示：在 CSS 定义中，a:hover 必须被置于 a:link 和 a:visited 之后，才是有效的。</span><br><span class="line"></span><br><span class="line">提示：在 CSS 定义中，a:active 必须被置于 a:hover 之后，才是有效的。</span><br><span class="line"></span><br><span class="line">提示：伪类名称对大小写不敏感。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">选择器使用小结:</span><br><span class="line">id选择器:一个元素(标签)</span><br><span class="line">class选择器:一类元素 </span><br><span class="line">元素选择器:一种元素</span><br><span class="line">属性选择器:元素选择器的特殊用法</span><br><span class="line">使用的时候注意:(了解)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">若多个样式作用于一个元素的时候</span></span></span><br><span class="line"><span class="tag">不同的样式,会叠加</span></span><br><span class="line"><span class="tag">相同的样式,最近原则&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">若多个选择器作用于一个元素的时候</span></span></span><br><span class="line"><span class="tag">越特殊优先级越高 <span class="attr">id</span>优先级最高 &gt;</span> 属性选择器 &gt; class选择器&gt; 元素选择器&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">#divId1&#123;</span></span><br><span class="line"><span class="undefined">background-color: teal;</span></span><br><span class="line"><span class="undefined">width: 50%;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#divId2&#123;</span></span><br><span class="line"><span class="undefined">background-color: crimson;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">.divCls1&#123;</span></span><br><span class="line"><span class="undefined">background-color: darkturquoise;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">div&#123;</span></span><br><span class="line"><span class="undefined">background-color: rosybrown;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">div[att="divatt1"]&#123;</span></span><br><span class="line"><span class="undefined">background-color: tomato;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">span&#123;</span></span><br><span class="line"><span class="undefined">background-color: lawngreen;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">span[att="spanatt1"]&#123;</span></span><br><span class="line"><span class="undefined">background-color: mediumaquamarine;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/l2.css"</span>  <span class="attr">type</span>=<span class="string">"text/css"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"divId1"</span>&gt;</span>花蝴蝶夫人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"divCls1"</span>&gt;</span>换个地方好感动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>股份及回复<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">att</span>=<span class="string">"divatt1"</span>&gt;</span>更符合规范化<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> &gt;</span>过分很过分1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">att</span>=<span class="string">"spanatt1"</span>&gt;</span>过分很过分2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"divCls1"</span>&gt;</span>过分很过分3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">att</span>=<span class="string">"spanatt1"</span> <span class="attr">class</span>=<span class="string">"divCls1"</span> <span class="attr">id</span>=<span class="string">"divId2"</span>&gt;</span>过分很过分4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">att</span>=<span class="string">"spanatt1"</span> <span class="attr">class</span>=<span class="string">"divCls1"</span> &gt;</span>过分很过分5<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">越特殊优先级越高 id优先级最高 &gt; 属性选择器 &gt; class选择器&gt; 元素选择器</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【CSS的悬浮】</p><ul><li>CSS的float属性：</li></ul><p>float属性中常用取值:</p><ul><li><p>Left :悬浮到左边</p></li><li><p>Right :悬浮到右边</p></li></ul><p>使用clear属性清除浮动：</p><ul><li><p>Left ：清除左侧浮动</p></li><li><p>Right ：清除右侧浮动</p></li><li><p>Both ：清除两侧的浮动</p></li></ul><h4 id="步骤分析："><a href="#步骤分析：" class="headerlink" title="步骤分析："></a>步骤分析：</h4><ul><li><p>创建一个外层的div元素</p></li><li><p>在div中创建代表每块区域div</p></li><li><p>在每块div引入需要的元素的内容</p></li></ul><h3 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;    &lt;head&gt;        &lt;meta charset=&quot;UTF-8&quot;&gt;        &lt;title&gt;&lt;/title&gt;        &lt;link href=&quot;../css/main.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;        &lt;style&gt;            .content{                border:1px solid blue;                height: 600px;                background: url(../img/regist_bg.jpg);                margin: 10px 0px;            }        &lt;/style&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;!-- 创建一个整体的DIV --&gt;        &lt;div&gt;            &lt;div&gt;                &lt;div class=&quot;top&quot;&gt;                    &lt;img src=&quot;../img/logo2.png&quot; height=&quot;48&quot;/&gt;                &lt;/div&gt;                &lt;div class=&quot;top&quot;&gt;                    &lt;img src=&quot;../img/header.png&quot;  height=&quot;48&quot;/&gt;                &lt;/div&gt;                &lt;div class=&quot;top&quot; style=&quot;padding-top: 10px;height: 40px;&quot;&gt;                    &lt;a href=&quot;#&quot;&gt;登录&lt;/a&gt;                    &lt;a href=&quot;#&quot;&gt;注册&lt;/a&gt;                    &lt;a href=&quot;#&quot;&gt;购物车&lt;/a&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;!--清除浮动--&gt;            &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;            &lt;!-- 菜单部分的DIV--&gt;            &lt;div class=&quot;menu&quot;&gt;                &lt;ul&gt;                    &lt;li style=&quot;display: inline;&quot;&gt;首页&lt;/li&gt;                    &lt;li style=&quot;display: inline;&quot;&gt;电脑办公&lt;/li&gt;                    &lt;li style=&quot;display: inline;&quot;&gt;手机数码&lt;/li&gt;                    &lt;li style=&quot;display: inline;&quot;&gt;鞋靴箱包&lt;/li&gt;                &lt;/ul&gt;            &lt;/div&gt;            &lt;div class=&quot;content&quot;&gt;                &lt;div style=&quot;position: absolute;left:400px;top:150px;background-color: white;border:5px solid gray;width: 700px;height: 500px;&quot;&gt;                    &lt;h3&gt;用户注册&lt;/h3&gt;                    &lt;form&gt;                                            &lt;table width=&quot;100%&quot; height=&quot;100%&quot; border=&quot;0&quot; align=&quot;center&quot; cellspacing=&quot;10&quot;&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;用户名&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;请输入用户名&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;密码&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;确认密码&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;repassword&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;性别&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot; checked=&quot;checked&quot;/&gt;男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot;/&gt;女&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;Email&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;email&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;姓名&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;name&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;生日&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;birthday&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;验证码&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;checkcode&quot; size=&quot;10&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td colspan=&quot;2&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;注册&quot; style=&quot;background: url(../img/register.gif);&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                            &lt;/table&gt;                                            &lt;/form&gt;                &lt;/div&gt;            &lt;/div &gt;            &lt;div&gt;                &lt;img src=&quot;../img/footer.jpg&quot; /&gt;            &lt;/div&gt;            &lt;div align=&quot;center&quot;&gt;                &lt;a href=&quot;../案例一：网站信息页面显示/网站信息页面显示.html&quot;&gt;关于我们&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;联系我们&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;招贤纳士&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;法律声明&lt;/a&gt;                    &lt;a href=&quot;link.html&quot;&gt;友情链接&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;支付方式&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;配送方式&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;服务声明&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;广告声明&lt;/a&gt;                    &lt;br/&gt;                    Copyright © 2005-2016 传智商城 版权所有             &lt;/div&gt;        &lt;/div&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a>扩展：</h3><h4 id="CSS的其他的选择器："><a href="#CSS的其他的选择器：" class="headerlink" title="CSS的其他的选择器："></a>CSS的其他的选择器：</h4><p>【CSS的其他选择器】</p><ul><li>属性选择器</li></ul><p>选中带有某个属性的元素：</p><pre><code>&lt;style&gt;        input[type=&quot;text&quot;]{            background-color: yellow;        }        input[type=&quot;password&quot;]{            background-color: green;        }    &lt;/style&gt;</code></pre><ul><li>层次选择器：</li></ul><p>父选择器 子孙选择器 { }</p><pre><code>&lt;style&gt;        #d1 div{            color: red;        }    &lt;/style&gt;</code></pre><ul><li>伪类选择器：</li></ul><p>主要用来描述超链接</p><pre><code>&lt;style&gt;        a:link{            color:blue;            font-size: 40px;        }        a:visited{            color: red;            font-size: 40px;        }        a:hover{            color: green;            font-size: 100px;        }        a:active{            color: brown;            font-size: 200px;        }    &lt;/style&gt;</code></pre><h2 id="使用DIV-CSS对注册页面进行布局："><a href="#使用DIV-CSS对注册页面进行布局：" class="headerlink" title="使用DIV+CSS对注册页面进行布局："></a>使用DIV+CSS对注册页面进行布局：</h2><h3 id="需求分析：-1"><a href="#需求分析：-1" class="headerlink" title="需求分析："></a>需求分析：</h3><p>使用DIV+CSS对注册页面进行布局。更加灵活！</p><p><img src="/2016/12/04/javaweb_day02-css&js参考/0eeab158dc69f1a08a46aad9c9d4d412.png" alt=""></p><h3 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a>分析：</h3><h4 id="技术分析："><a href="#技术分析：" class="headerlink" title="技术分析："></a>技术分析：</h4><p>【CSS的盒子模型】</p><p><img src="/2016/12/04/javaweb_day02-css&js参考/c54b721c55b08f0c0a041b379a11bf55.png" alt=""></p><p>设置盒子的外边距：margin</p><ul><li><p>Margin-top</p></li><li><p>Margin-right</p></li><li><p>Margin-bottom</p></li><li><p>Margin-left</p></li></ul><p>设置盒子的内边距：padding</p><ul><li><p>Padding-top</p></li><li><p>Padding-right</p></li><li><p>Padding-bottom</p></li><li><p>Padding-left</p></li></ul><h4 id="步骤分析：-1"><a href="#步骤分析：-1" class="headerlink" title="步骤分析："></a>步骤分析：</h4><ul><li><p>创建一个整体div元素</p></li><li><p>在里面创建5个分别代表某个部分的DIV</p></li><li><p>在每个部分中完成单独内容的显示</p></li></ul><h3 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;    &lt;head&gt;        &lt;meta charset=&quot;UTF-8&quot;&gt;        &lt;title&gt;&lt;/title&gt;        &lt;link href=&quot;../css/main.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;        &lt;style&gt;            .content{                border:1px solid blue;                height: 600px;                background: url(../img/regist_bg.jpg);                margin: 10px 0px;            }        &lt;/style&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;!-- 创建一个整体的DIV --&gt;        &lt;div&gt;            &lt;div&gt;                &lt;div class=&quot;top&quot;&gt;                    &lt;img src=&quot;../img/logo2.png&quot; height=&quot;48&quot;/&gt;                &lt;/div&gt;                &lt;div class=&quot;top&quot;&gt;                    &lt;img src=&quot;../img/header.png&quot;  height=&quot;48&quot;/&gt;                &lt;/div&gt;                &lt;div class=&quot;top&quot; style=&quot;padding-top: 10px;height: 40px;&quot;&gt;                    &lt;a href=&quot;#&quot;&gt;登录&lt;/a&gt;                    &lt;a href=&quot;#&quot;&gt;注册&lt;/a&gt;                    &lt;a href=&quot;#&quot;&gt;购物车&lt;/a&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;!--清除浮动--&gt;            &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;            &lt;!-- 菜单部分的DIV--&gt;            &lt;div class=&quot;menu&quot;&gt;                &lt;ul&gt;                    &lt;li style=&quot;display: inline;&quot;&gt;首页&lt;/li&gt;                    &lt;li style=&quot;display: inline;&quot;&gt;电脑办公&lt;/li&gt;                    &lt;li style=&quot;display: inline;&quot;&gt;手机数码&lt;/li&gt;                    &lt;li style=&quot;display: inline;&quot;&gt;鞋靴箱包&lt;/li&gt;                &lt;/ul&gt;            &lt;/div&gt;            &lt;div class=&quot;content&quot;&gt;                &lt;div style=&quot;position: absolute;left:400px;top:150px;background-color: white;border:5px solid gray;width: 700px;height: 500px;&quot;&gt;                    &lt;h3&gt;用户注册&lt;/h3&gt;                    &lt;form&gt;                                            &lt;table width=&quot;100%&quot; height=&quot;100%&quot; border=&quot;0&quot; align=&quot;center&quot; cellspacing=&quot;10&quot;&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;用户名&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;请输入用户名&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;密码&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;确认密码&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;repassword&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;性别&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot; checked=&quot;checked&quot;/&gt;男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot;/&gt;女&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;Email&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;email&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;姓名&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;name&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;生日&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;birthday&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td&gt;验证码&lt;/td&gt;                                                    &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;checkcode&quot; size=&quot;10&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                                &lt;tr&gt;                                                    &lt;td colspan=&quot;2&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;注册&quot; style=&quot;background: url(../img/register.gif);&quot;/&gt;&lt;/td&gt;                                                &lt;/tr&gt;                                            &lt;/table&gt;                                            &lt;/form&gt;                &lt;/div&gt;            &lt;/div &gt;            &lt;div&gt;                &lt;img src=&quot;../img/footer.jpg&quot; /&gt;            &lt;/div&gt;            &lt;div align=&quot;center&quot;&gt;                &lt;a href=&quot;../案例一：网站信息页面显示/网站信息页面显示.html&quot;&gt;关于我们&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;联系我们&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;招贤纳士&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;法律声明&lt;/a&gt;                    &lt;a href=&quot;link.html&quot;&gt;友情链接&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;支付方式&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;配送方式&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;服务声明&lt;/a&gt;                    &lt;a href=&quot;&quot;&gt;广告声明&lt;/a&gt;                    &lt;br/&gt;                    Copyright © 2005-2016 传智商城 版权所有             &lt;/div&gt;        &lt;/div&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="扩展：-1"><a href="#扩展：-1" class="headerlink" title="扩展："></a>扩展：</h3><h4 id="扩展属性："><a href="#扩展属性：" class="headerlink" title="扩展属性："></a>扩展属性：</h4><p>【列表属性】</p><pre><code>ul li{list-style-image: url(../img/reg4.gif);}</code></pre><p>【颜色取值】</p><ul><li>英文取值：</li></ul><p>color：red</p><ul><li>十六进制数：</li></ul><p>color：#ff0000</p><ul><li>Rgb方式：</li></ul><p>color：rgb(255,0,0)</p><h2 id="使用JS完成简单的数据的校验"><a href="#使用JS完成简单的数据的校验" class="headerlink" title="使用JS完成简单的数据的校验"></a>使用JS完成简单的数据的校验</h2><h3 id="需求分析：-2"><a href="#需求分析：-2" class="headerlink" title="需求分析："></a>需求分析：</h3><p>使用JS完成对注册页面进行简单的数据的非空校验。在提交表单的时候，不可以出现用户名，密码是空的情况。</p><h3 id="分析：-2"><a href="#分析：-2" class="headerlink" title="分析："></a>分析：</h3><h4 id="技术分析：-1"><a href="#技术分析：-1" class="headerlink" title="技术分析："></a>技术分析：</h4><p>HTML骨架，CSS美化，JS可以使页面动起来。</p><p>【JavaScript的概述】</p><ul><li>什么是JavaScript：</li></ul><p>运行在浏览器端的脚本语言.</p><p><img src="/2016/12/04/javaweb_day02-css&js参考/1bab19489fa8d8d454288efba8364fd4.png" alt=""></p><p>JS的组成：</p><p><img src="/2016/12/04/javaweb_day02-css&js参考/59122feb8340b920b258e3d174e3bfcf.png" alt=""></p><p>ECMAScript：语法，语句.</p><p>BOM:浏览器对象</p><p>DOM:Document Object Model.操作文档中的元素和内容.</p><ul><li>在哪些地方使用JS</li></ul><p>JS增加用户和网站交互</p><ul><li>如何使用JS</li></ul><p>语法：</p><ul><li><p>区分大小写</p></li><li><p>语法要求不是特别严格</p></li><li><p>变量是弱变量类型</p><ul><li><p>var i = 3;</p></li><li><p>var s = “aa”;</p></li></ul></li><li><p>JS代码需要写在\&lt;script>\&lt;/script></p></li></ul><p>【JS的数据类型】</p><ul><li><p>原始类型：</p></li><li><p>string</p></li><li><p>number</p></li><li><p>boolean</p></li><li><p>undefined</p></li><li><p>null</p></li><li><p>引用类型：</p></li></ul><p>基于对象而不是面向对象.内置对象.对象类型的默认值是null.</p><p>【JS的运算符和语句】</p><p>运算符与Java中一致.</p><ul><li>全等于 === ：类型和值都一致返回true</li></ul><p>语句与Java一致：</p><p>【JS的输出】</p><ul><li>alert()</li></ul><p>向页面中弹出一个提示框！！</p><ul><li>innerHTML:</li></ul><p>向页面的某个元素中写一段内容，将原有的东西覆盖</p><ul><li>document.write();</li></ul><p>向页面中写内容</p><h4 id="步骤分析：-2"><a href="#步骤分析：-2" class="headerlink" title="步骤分析："></a>步骤分析：</h4><ul><li>JS都是由事件触发的，第一步确定事件。</li></ul><p>on…</p><ul><li><p>JS的事件都会触发一个函数，编写一个函数。</p></li><li><p>JS获得操作的对象的元素。</p></li></ul><p>document.getElementById(“”);</p><ul><li>JS修改这个元素的属性或值。</li></ul><h3 id="代码实现：-2"><a href="#代码实现：-2" class="headerlink" title="代码实现："></a>代码实现：</h3><pre><code>&lt;script&gt;        // 第一步确定事件：onsubmit        // 第二步编写触发函数：        function checkForm(){            // 第三步：通过ID获得元素            var uValue = document.getElementById(&quot;username&quot;).value;            // alert(uValue);            if(uValue == &quot;&quot;){                alert(&quot;用户名不能为空！&quot;);                return false;            }            // 校验密码            var pValue = document.getElementById(&quot;password&quot;).value;            if(pValue == &quot;&quot;){                alert(&quot;密码不能为空！&quot;);                return false;            }            // 校验确认密码            var rpValue = document.getElementById(&quot;repassword&quot;).value;            if(rpValue != pValue){                alert(&quot;两次密码输入不一致！&quot;);                return false;            }            // 校验邮箱：使用正则表达式：            var eValue = document.getElementById(&quot;email&quot;).value;            if(!/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/.test(eValue)){                alert(&quot;邮箱格式不正确！&quot;);                return false;            }        }    &lt;/script&gt;</code></pre><h2 id="使用JS完成首页上轮播图片效果："><a href="#使用JS完成首页上轮播图片效果：" class="headerlink" title="使用JS完成首页上轮播图片效果："></a>使用JS完成首页上轮播图片效果：</h2><h3 id="需求分析：-3"><a href="#需求分析：-3" class="headerlink" title="需求分析："></a>需求分析：</h3><p>在网站的首页上图片的轮播，现在页面中图片是静止的。让图片隔5秒自动切换。</p><p><img src="/2016/12/04/javaweb_day02-css&js参考/1f240f98375dec3a306f4899cb62f51c.png" alt=""></p><h3 id="分析：-3"><a href="#分析：-3" class="headerlink" title="分析："></a>分析：</h3><h4 id="技术分析：-2"><a href="#技术分析：-2" class="headerlink" title="技术分析："></a>技术分析：</h4><p>【修改图片的路径】</p><p>获得图片，修改图片的src的属性。</p><p>document.getElementById(“img1”).src=”2.jpg”;</p><p>【JS中定时操作】</p><p>查看BOM中的window对象：</p><p><img src="/2016/12/04/javaweb_day02-css&js参考/f3cb873e0aa09f7c4b3130319067b51e.png" alt=""></p><ul><li><p>setInterval() :隔多少毫秒之后，执行一段代码。重复执行。</p></li><li><p>setTimeout() :隔多少毫秒之后，执行一段代码。</p></li></ul><p><img src="/2016/12/04/javaweb_day02-css&js参考/fe925ca8d6dbfdd188eae9bb3242f421.png" alt=""></p><p>清除定时：</p><ul><li><p>clearInterval() :清除setInterval的定时操作。</p></li><li><p>clearTimeout() : 清除setTimeout的定时操作。</p></li></ul><p>示例代码：</p><p>function init(){</p><p>// window.setTimeout(“alert(‘aaa’)”,5000);</p><p>window.setInterval(“alert(‘bbb’)”,5000);</p><p>}</p><h4 id="步骤分析：-3"><a href="#步骤分析：-3" class="headerlink" title="步骤分析："></a>步骤分析：</h4><ul><li><p>步骤一：使用页面加载的事件触发一个函数</p></li><li><p>步骤二：在函数中设置定时：setInterval设置定时，5秒之后（切换图片-定义一个函数）</p></li><li><p>步骤三：编写切换图片的函数</p></li><li><p>步骤四：在函数中获得图片的元素</p></li><li><p>步骤五：修改图片的src的属性</p></li></ul><h3 id="代码实现：-3"><a href="#代码实现：-3" class="headerlink" title="代码实现："></a>代码实现：</h3><pre><code>&lt;script&gt;        function init(){            // 设置定时            setInterval(&quot;changeImg()&quot;,5000);        }        // 定义一个全局变量        var i = 1;        function changeImg(){            // 获得图片的元素：            var img1 = document.getElementById(&quot;img1&quot;);            if(i == 3){                i =1;            }else{                i++;            }            // 修改图片的src的属性            img1.src = &quot;../img/&quot;+i+&quot;.jpg&quot;;        }    &lt;/script&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297948/samples/java%20files/photo-1544728344-7efa025e5603.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;了解CSS的概念&lt;br&gt;了解CSS的引入方式&lt;br&gt;了解CSS的基本语法和常用的选择器&lt;br&gt;了解CSS的盒子模型,悬浮和定位.&lt;br&gt;&lt;strong&gt;了解JS的概念 掌握JS的基本语法,数据类型,能够使用JS完成简单的页面交互&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://leesen998.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="JavaWeb" scheme="https://leesen998.github.io/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb学习笔记——基础1(html)</title>
    <link href="https://leesen998.github.io/2016/12/03/javaweb_day01-%E7%AC%94%E8%AE%B01/"/>
    <id>https://leesen998.github.io/2016/12/03/javaweb_day01-笔记1/</id>
    <published>2016-12-03T11:48:29.000Z</published>
    <updated>2019-01-27T09:04:55.722Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297948/samples/java%20files/photo-1544728344-7efa025e5603.jpg" alt="" style="width:100%"></p><p>了解什么是标记语言<br>了解HTML主要特性,主要变化及发展趋势<br>了解HTML的结构标签<br>掌握HTML的主要标签(字体,图片,列表,链接,表单等标签)</p><a id="more"></a><p><strong>今日任务</strong></p><ul><li><p>网站信息页面案例</p></li><li><p>网站图片信息页面案例</p></li><li><p>网站友情链接页面案例</p></li><li><p>网站首页案例</p></li><li><p>网站注册页面案例</p></li><li><p>网站后台页面案例</p></li></ul><p><strong>导航</strong></p><p>| <strong>目标</strong> | 了解什么是标记语言<br>了解HTML主要特性,主要变化及发展趋势<br>了解HTML的结构标签<br>掌握HTML的主要标签(字体,图片,列表,链接,表单等标签) |<br>|————–|——————————————————————————————————————————|                                                                                                                |</p><h2 id="1、网站信息页面显示案例："><a href="#1、网站信息页面显示案例：" class="headerlink" title="1、网站信息页面显示案例："></a><strong>1、网站信息页面显示案例：</strong></h2><h3 id="需求分析："><a href="#需求分析：" class="headerlink" title="需求分析："></a>需求分析：</h3><p>在网页中显示一个文字信息页面，显示效果如下：</p><p><img src="/2016/12/03/javaweb_day01-笔记1/3f3edce24d50735198f86cd0f41a4f53.png" alt=""></p><p>【HTML的概述】</p><ul><li>什么是HTML</li></ul><p>HTML：Hyper Text Markup Language 超文本标记语言</p><ul><li><p>超文本：比文本功能更加强大</p></li><li><p>标记语言：通过一组标签对内容进行描述的一门语言</p></li><li><p>为什么学习HTML</p></li></ul><p>HTML是设计页面基础</p><ul><li>在哪些地方可以使用HTML</li></ul><p>设计页面的时候都可以使用HTML</p><ul><li>如何使用HTML</li></ul><h3 id="HTML的语法和规范"><a href="#HTML的语法和规范" class="headerlink" title="HTML的语法和规范"></a>HTML的语法和规范</h3><ul><li><p>HTML文件的扩展名是.html或者是.htm</p></li><li><p>HTML文件是由头和体组成</p></li><li><p>HTML这组标签是不区分大小写</p></li><li><p>HTML的标记通常是由【开始标签】和【结束标签】组成：</p></li></ul><pre><code>&lt;b&gt;内容&lt;/b&gt;  &lt;br/&gt; 换行 html标签:声明子标签:    &lt;head&gt;&lt;/head&gt;    &lt;body&gt;&lt;/body&gt;head:用来存放当前页面的重要信息,一般不展示在html页面上    常见的子标签:        &lt;title&gt;&lt;/title&gt; 网页的标题body:    要展示的数据放在body中</code></pre><h3 id="【HTML的字体标签】"><a href="#【HTML的字体标签】" class="headerlink" title="【HTML的字体标签】"></a>【HTML的字体标签】</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">font</span>&gt;</span>标签</span><br><span class="line">    <span class="tag">&lt;<span class="name">font</span> 属性名=<span class="string">”属性值”</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">        size:控制字体大小.最小1 最大7</span><br><span class="line">        color：控制字体颜色. 使用英文设置 ，使用16进制数设置</span><br><span class="line">        face：控制字体.</span><br><span class="line">    .</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>&gt;</span>天佑中华<span class="tag">&lt;/<span class="name">font</span>&gt;</span>天佑中华<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"7"</span>&gt;</span>我个大7<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"100"</span>&gt;</span>我个大100<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"1"</span>&gt;</span>我个大1<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>我很红<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#ff0000"</span>&gt;</span>我很红<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#f000ff"</span>&gt;</span>我很红<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#055000"</span>&gt;</span>我很红<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"黑体"</span> <span class="attr">size</span>=<span class="string">"6"</span>&gt;</span>我很黑<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="【HTML的排版标签】"><a href="#【HTML的排版标签】" class="headerlink" title="【HTML的排版标签】"></a>【HTML的排版标签】</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hn</span>&gt;</span>标题标签</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>b标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">n取值 :1~6</span><br><span class="line">h1最大  h6最小</span><br><span class="line">自动换行 且留白 默认加粗</span><br><span class="line"></span><br><span class="line">常用属性:</span><br><span class="line">align:对齐方式</span><br><span class="line">left:左  right:右 center:居中</span><br><span class="line">格式:</span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span>换行标签</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span>代表换行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span>水平线标签</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span>水平线标签</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>字体加粗</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体标签</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>&gt;</span>天佑中华<span class="tag">&lt;/<span class="name">font</span>&gt;</span>天佑中华<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"7"</span>&gt;</span>我个大7<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"100"</span>&gt;</span>我个大100<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"1"</span>&gt;</span>我个大1<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>我很红<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#ff0000"</span>&gt;</span>我很红<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#f000ff"</span>&gt;</span>我很红<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#055000"</span>&gt;</span>我很红<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"楷体"</span> <span class="attr">size</span>=<span class="string">"6"</span>&gt;</span>我很黑<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>感受停在我发端的指尖<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">如何瞬间冻结时间<span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">记住望着我坚定的双眼<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">也许已经没有明天<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>面对浩瀚的星海<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="步骤分析"><a href="#步骤分析" class="headerlink" title="步骤分析"></a>步骤分析</h4><ul><li><p>步骤一：创建一个html文件</p></li><li><p>步骤二：创建标题标签</p></li><li><p>步骤三：标题下面会有一个水平线</p></li><li><p>步骤四：创建段落标签创建四个段落</p></li><li><p>步骤五：将某些文字设置为红色</p></li></ul><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 创建标题标签 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">h2</span>&gt;</span>公司简介<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">             作者：offline</span></span><br><span class="line"><span class="comment">             时间：2016-01-21</span></span><br><span class="line"><span class="comment">             描述：水平线</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">             作者：offline</span></span><br><span class="line"><span class="comment">             时间：2016-01-21</span></span><br><span class="line"><span class="comment">             描述：创建段落标签</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span> 腾讯，1998年11月诞生于中国深圳，是一家以互联网为基础的科技与文化公司。<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">我们的使命是 “<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#ff0000"</span>&gt;</span> 通过互联网服务提升人类生活品质<span class="tag">&lt;/<span class="name">font</span>&gt;</span>” 。腾讯秉承着 “<span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>一切以用户价值为依归<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>”的经营理念，为亿万网民提供优质的互联网综合服务。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span> 腾讯的战略目标是“连接一切”，我们长期致力于社交平台与数字内容两大核心业务：</span><br><span class="line">一方面通过微信与QQ等社交平台，实现人与人、服务及设备的智慧连接；</span><br><span class="line">另一方面为数以亿计的用户提供优质的新闻、视频、游戏、音乐、文学、动漫、影业等数字内容产品及相关服务。</span><br><span class="line">我们还积极推动金融科技的发展，通过普及移动支付等技术能力，为智慧交通、智慧零售、智慧城市等领域提供有力支持。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>腾讯希望成为各行各业的数字化助手，助力数字中国建设。在工业、医疗、零售、教育等各个领域，</span><br><span class="line">腾讯为传统行业的数字化转型升级提供“数字接口”和“数字工具箱”。我们秉持数字工匠精神，</span><br><span class="line">希望用数字创新提升每个人的生活品质。随着“互联网+”战略实施和数字经济的发展，</span><br><span class="line">我们通过战略合作与开放平台，与合作伙伴共建数字生态共同体，推进云计算、大数据、人工智能等前沿科技与各行各业的融合发展及创新共赢。</span><br><span class="line">多年来，腾讯的开放生态带动社会创业就业人次达数千万，相关创业企业估值已达数千亿元。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 腾讯的愿景是成为“最受尊敬的互联网企业”。我们始终坚守“科技向善”的初心，</span><br><span class="line">运用科技手段助力公益事业发展，并将社会责任融入每一个产品。</span><br><span class="line">2007年，腾讯倡导并发起了中国互联网第一家在民政部注册的全国性非公募基金会——腾讯公益慈善基金会。腾讯公益致力于成为“人人可公益的创连者”，</span><br><span class="line">以互联网核心能力推动公益行业的长远发展为己任。腾讯公益联合多方发起了中国首个互联网公益日——99公益日，帮助公益组织和广大爱心网友、企业之间形成良好的公益生态，</span><br><span class="line">让透明化的“指尖公益”融入亿万网民的生活。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、网站的图片页面显示"><a href="#2、网站的图片页面显示" class="headerlink" title="2、网站的图片页面显示"></a>2、网站的图片页面显示</h2><h3 id="需求分析：-1"><a href="#需求分析：-1" class="headerlink" title="需求分析："></a>需求分析：</h3><p>在网页中显示带有图片的页面效果如下：</p><h3 id="【HTML的图片标记】"><a href="#【HTML的图片标记】" class="headerlink" title="【HTML的图片标记】"></a>【HTML的图片标记】</h3><pre><code>&lt;img /&gt;-   src：图片的路径-   width：图片宽度-   height：图片的高度-   alt：图片提示</code></pre><p>图片路径：</p><ul><li><p>分成相对路径和绝对路径</p></li><li><p>相对路径:</p><ul><li><p>./ :代表当前路径</p></li><li><p>../ :代表上一级路径</p></li></ul></li></ul><h4 id="步骤分析："><a href="#步骤分析：" class="headerlink" title="步骤分析："></a>步骤分析：</h4><ul><li><p>创建一个img标签引入logo图片</p></li><li><p>创建一个img标签引入header图片</p></li></ul><h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>网站图片页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/header.jpg"</span> <span class="attr">alt</span>=<span class="string">"正品保障"</span> <span class="attr">height</span>=<span class="string">"60px"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/3.jpg"</span> <span class="attr">title</span> =<span class="string">"商品展示"</span> <span class="attr">height</span>=<span class="string">"1200px"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、网站的列表显示页面"><a href="#3、网站的列表显示页面" class="headerlink" title="3、网站的列表显示页面"></a>3、网站的列表显示页面</h2><h3 id="需求分析：-2"><a href="#需求分析：-2" class="headerlink" title="需求分析："></a>需求分析：</h3><p>在页面中列表显示友情链接：</p><h3 id="【HTML的列表标签】"><a href="#【HTML的列表标签】" class="headerlink" title="【HTML的列表标签】"></a>【HTML的列表标签】</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    无序列表</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    有序列表</span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">常用的子标签</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span> 列表项(列表内容)</span><br></pre></td></tr></table></figure><h4 id="步骤实现"><a href="#步骤实现" class="headerlink" title="步骤实现"></a>步骤实现</h4><ul><li>创建一个无序列表显示友情链接</li></ul><h3 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>传智播客<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>百合网<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>世纪佳缘<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"a"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>貂蝉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>西施<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>杨玉环<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>王昭君<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"square"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>张学友<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>郭富城<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>黎明<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="【超链接标签】："><a href="#【超链接标签】：" class="headerlink" title="【超链接标签】："></a>【超链接标签】：</h3><p>【超链接标签】</p><p>【超链接标签】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    href：超链接跳转的路径</span><br><span class="line"></span><br><span class="line">    target：打开方式</span><br><span class="line">    _self：在自身页面打开</span><br><span class="line">    _blank：打开一个新窗口</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>友情连接<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>CSDN<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.hust.edu.cn"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>hust<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4、网站的首页显示"><a href="#4、网站的首页显示" class="headerlink" title="4、网站的首页显示"></a>4、网站的首页显示</h2><h3 id="需求分析：-3"><a href="#需求分析：-3" class="headerlink" title="需求分析："></a>需求分析：</h3><p>在浏览器中显示网站的首页效果如下：</p><p><img src="/images/javaweb_day01/1.jpg" alt="dd"></p><h3 id="【HTML的表格标签】"><a href="#【HTML的表格标签】" class="headerlink" title="【HTML的表格标签】"></a>【HTML的表格标签】</h3><p>表格标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">表格标签★</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">常用的子标签</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>:行</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">常用子标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>:列</span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>:表头单元格 默认居中加粗</span><br><span class="line">注意:</span><br><span class="line">一行必须只有有一个单元格或者一列</span><br><span class="line">//////////////////</span><br><span class="line"></span><br><span class="line">table 的常用属性:</span><br><span class="line">border:边框  像素值</span><br><span class="line">width:</span><br><span class="line">align:表格对齐方式</span><br><span class="line"></span><br><span class="line">tr 的常用属性:</span><br><span class="line">align:内容对齐</span><br><span class="line"></span><br><span class="line">td 的常用属性:</span><br><span class="line">align:内容对齐</span><br><span class="line">colspan:跨列合并 值:合并的列数</span><br><span class="line">rowspan:跨行合并</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"40%"</span> <span class="attr">height</span>=<span class="string">"150px"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">bgcolor</span>=<span class="string">"#ffff00"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--创建一个4行3列--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>11<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>12<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>13<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>21<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>22<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>23<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>31<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>32<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>41<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>42<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>43<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"40%"</span> <span class="attr">height</span>=<span class="string">"150px"</span> <span class="attr">align</span>=<span class="string">"center"</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--创建一个4行3列--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>11<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>12<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>13<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>21<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>22&amp;23<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>31&amp;41<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>32<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>42<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>43<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>表格的属性：</p><ul><li><p>border ：表格边框</p></li><li><p>width ：表格宽度</p></li><li><p>height ：表格高度</p></li><li><p>align ：水平方向对齐方式 left center right</p></li><li><p>bgcolor ：背景色</p></li></ul><h4 id="步骤分析：-1"><a href="#步骤分析：-1" class="headerlink" title="步骤分析："></a>步骤分析：</h4><ul><li><p>步骤一：创建8行表格</p></li><li><p>步骤二：实现第一行，嵌套一个一行三列表格。</p></li><li><p>步骤三：实现第二行，实现导航，设置背景色。</p></li><li><p>步骤四：放置一张图片</p></li><li><p>步骤五：显示热门商品，创建一个三行七列的表格。对表格进行跨行，跨列的操作。</p></li><li><p>步骤六：引入一张广告图片。</p></li><li><p>步骤七：显示最新商品，创建一个三行七列的表格。对表格进行跨行，跨列的操作。</p></li><li><p>步骤八：广告信息</p></li><li><p>步骤九：链接版权信息。</p></li></ul><h3 id="代码实现-3"><a href="#代码实现-3" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"1400"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- LOGO部分 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">"40"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/logo2.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/header.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../案例五：网站注册页面显示/网站的注册页面.html"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">"30"</span> <span class="attr">bgcolor</span>=<span class="string">"black"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导航部分--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;  </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;  </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;        </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp; </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp; </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/1.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">border</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"7"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"5"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>最新商品<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/title2.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>  <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"500"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/big01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span> <span class="attr">width</span>=<span class="string">"600"</span> <span class="attr">height</span>=<span class="string">"250"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/middle01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"250"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"200"</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"200"</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--广告--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/ad.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">border</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"7"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"5"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>最新商品<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/title2.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>  <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"500"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/big01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span> <span class="attr">width</span>=<span class="string">"600"</span> <span class="attr">height</span>=<span class="string">"250"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/middle01.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"250"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"200"</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"200"</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>  <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../products/hao/small03.jpg"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gray"</span>&gt;</span>电磁锅<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>$499<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/footer.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../案例一：网站信息页面显示/网站信息页面显示.html"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>招贤纳士<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>法律声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../案例三：网站列表页面显示/网站列表页面显示.html"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>支付方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>配送方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>服务声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>广告声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">Copyright © 2005-2016 传智商城 版权所有 </span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5、网站的注册页面案例："><a href="#5、网站的注册页面案例：" class="headerlink" title="5、网站的注册页面案例："></a>5、网站的注册页面案例：</h2><h3 id="需求分析：-4"><a href="#需求分析：-4" class="headerlink" title="需求分析："></a>需求分析：</h3><p>在浏览器中显示如下的效果：</p><p><img src="/images/javaweb_day01/2.png" alt="ff"></p><h3 id="【HTML的表单标签】"><a href="#【HTML的表单标签】" class="headerlink" title="【HTML的表单标签】"></a>【HTML的表单标签】</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">表单标签：</span><br><span class="line"></span><br><span class="line">-   需要提交的表单需要使用<span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span>括起来</span><br><span class="line"></span><br><span class="line">    -   action：提交路径</span><br><span class="line"></span><br><span class="line">    -   method：提交方式</span><br><span class="line"></span><br><span class="line">-   文本框:</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”text”/</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        -   name</span><br><span class="line"></span><br><span class="line">        -   value</span><br><span class="line"></span><br><span class="line">        -   size</span><br><span class="line"></span><br><span class="line">        -   maxlength</span><br><span class="line"></span><br><span class="line">        -   readonly</span><br><span class="line"></span><br><span class="line">-   密码框：</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”password”/</span>&gt;</span></span><br><span class="line"></span><br><span class="line">-   单选按钮：</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”radio”/</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        -   Checked：默认选中</span><br><span class="line"></span><br><span class="line">-   复选框</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”checkbox”/</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        -   Checked：默认选中</span><br><span class="line"></span><br><span class="line">-   下拉列表框</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        -   Selected：默认选中</span><br><span class="line"></span><br><span class="line">        -   Multiple：全部显示</span><br><span class="line"></span><br><span class="line">-   文件上传项</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”file”</span> <span class="attr">name</span>=<span class="string">”file”/</span>&gt;</span></span><br><span class="line"></span><br><span class="line">-   文本区</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">””</span> <span class="attr">cols</span>=<span class="string">””</span> <span class="attr">rows</span>=<span class="string">””</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">-   提交按钮</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”submit”</span> <span class="attr">value</span>=<span class="string">”注册”</span>&gt;</span></span><br><span class="line"></span><br><span class="line">-   重置按钮</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”reset”</span> <span class="attr">value</span>=<span class="string">”重置”</span>&gt;</span></span><br><span class="line"></span><br><span class="line">-   普通按钮</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”button”</span> <span class="attr">value</span>=<span class="string">”普通按钮”</span>&gt;</span></span><br><span class="line"></span><br><span class="line">-   隐藏字段</span><br><span class="line"></span><br><span class="line">    -   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”hidden”</span> <span class="attr">name</span>=<span class="string">”id”/</span>&gt;</span></span><br><span class="line"></span><br><span class="line">提交方式：</span><br><span class="line"></span><br><span class="line">-   GET ：默认值</span><br><span class="line"></span><br><span class="line">    -   提交的数据都会在地址栏中进行显示</span><br><span class="line"></span><br><span class="line">    -   提交的数据的时候是有大小的限制</span><br><span class="line"></span><br><span class="line">-   POST ：</span><br><span class="line"></span><br><span class="line">    -   提交的数据不会再地址栏中进行显示</span><br><span class="line"></span><br><span class="line">    -   提交的数据没有大小限制</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">表单:</span><br><span class="line">常用属性:</span><br><span class="line">action:信息提交的路径 默认是当前页面</span><br><span class="line">method:表单提交的方式</span><br><span class="line"><span class="tag">&lt;<span class="name">"只需要掌握两种</span></span></span><br><span class="line"><span class="tag"><span class="attr">get</span>(默认)和<span class="attr">post</span>"</span></span><br><span class="line"><span class="tag">"<span class="attr">get</span>和<span class="attr">post</span>的区别<span class="attr">:</span></span></span><br><span class="line"><span class="tag"><span class="attr">1.get</span>请求会把所有的参数追加在地址栏上,<span class="attr">post</span>请求不会</span></span><br><span class="line"><span class="tag"><span class="attr">2.get</span>请求参数大小有限制,<span class="attr">post</span>请求参数大小没有限制</span></span><br><span class="line"><span class="tag"><span class="attr">3.post</span>相当于<span class="attr">get</span>安全些"&gt;</span></span><br><span class="line">常见的子标签</span><br><span class="line">input</span><br><span class="line">select:下拉选</span><br><span class="line">textarea:文本域</span><br><span class="line"></span><br><span class="line">input标签</span><br><span class="line">常用的属性:</span><br><span class="line">type:</span><br><span class="line">text:文本框 默认</span><br><span class="line">password:密码框</span><br><span class="line">radio:单选框</span><br><span class="line">checkbox:多选框</span><br><span class="line">file:文件框</span><br><span class="line"></span><br><span class="line">submit:提交</span><br><span class="line">reset:重置</span><br><span class="line">button:普通按钮</span><br><span class="line"></span><br><span class="line">hidden:隐藏域 在页面上显示 提交的时候可以提交过去</span><br><span class="line">image:图片提交 替代submit </span><br><span class="line">name:</span><br><span class="line">可以将几个单选框(复选框)设置为一组</span><br><span class="line">要想将信息保存到服务器上必须有name属性</span><br><span class="line">readonly:</span><br><span class="line">readonly="readonly" 只读</span><br><span class="line">disabled:</span><br><span class="line">disabled="disabled" 禁用</span><br><span class="line"></span><br><span class="line">select :下拉选</span><br><span class="line">格式:</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"pro"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>黑龙江<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">textarea:文本域</span><br><span class="line">常用的属性:</span><br><span class="line">cols:列</span><br><span class="line">rows:行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">提交到服务器的内容的格式:</span><br><span class="line">key=value&amp;</span><br><span class="line"><span class="tag">&lt;<span class="name">"对于文本框</span> 密码框 文本域 手写的内容传递过去了"</span></span><br><span class="line"><span class="tag">"对于单选框和多选框来说,却没有把值传递过去"</span></span><br><span class="line"><span class="tag">要想把值传递过去 必须设置<span class="attr">value</span>属性</span></span><br><span class="line"><span class="tag">若下拉选要想把选中内容的值传递过去,请加上<span class="attr">value</span>属性&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">默认值:</span></span></span><br><span class="line"><span class="tag">文本框 密码框<span class="attr">:</span>只需要添加<span class="attr">value</span>属性</span></span><br><span class="line"><span class="tag">单选框 多选框<span class="attr">:</span>添加 <span class="attr">checked</span>=<span class="string">"checked"</span></span></span><br><span class="line"><span class="tag">下拉选<span class="attr">:</span>添加<span class="attr">selected</span>=<span class="string">"selected"</span></span></span><br><span class="line"><span class="tag">文本域<span class="attr">:</span>标签体&gt;</span></span><br><span class="line"></span><br><span class="line">当我们提交的时候 发现地址栏变化</span><br><span class="line">?username=tom&amp;password=123&amp;sex=on&amp;hobby=on&amp;hobby=on&amp;photo=&amp;pro=黑龙江&amp;city=哈尔滨&amp;intr=good+girl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"007"</span>/&gt;</span></span><br><span class="line">姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"xuduoduo"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>  <span class="attr">value</span>=<span class="string">"123"</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">性别:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>女</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">爱好:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"eat"</span>&gt;</span>吃</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>喝</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"sleep"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>睡</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">头像:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"photo"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">籍贯:</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"pro"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"01"</span>&gt;</span>黑龙江<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"02"</span>&gt;</span>吉林<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"03"</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>辽宁<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> &gt;</span>-请选择-<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0101"</span>&gt;</span>哈尔滨<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0102"</span>&gt;</span>漠河<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0201"</span>&gt;</span>长春<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0202"</span>&gt;</span>吉林<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>沈阳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>锦州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">自我介绍:</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"intr"</span> <span class="attr">cols</span>=<span class="string">"40"</span> <span class="attr">rows</span>=<span class="string">"4"</span>&gt;</span>good!<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"保存"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"普通按钮"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="步骤分析：-2"><a href="#步骤分析：-2" class="headerlink" title="步骤分析："></a>步骤分析：</h4><ul><li><p>步骤一：创建一个5行表格</p></li><li><p>步骤二：完成每行显示</p></li><li><p>步骤三：中间行设置一个背景图片，嵌套一个表格居中显示。在表格中显示表单的内容</p></li></ul><h3 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- LOGO部分 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">"40"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/logo2.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/header.png"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">"black"</span> <span class="attr">height</span>=<span class="string">"30"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;  </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;  </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;        </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp; </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"white"</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">"600"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">background</span>=<span class="string">"../img/regist_bg.jpg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"60%"</span> <span class="attr">height</span>=<span class="string">"80%"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">bgcolor</span>=<span class="string">"white"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">cellspacing</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"repassword"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>/&gt;</span>男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"女"</span>/&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>生日<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"checkcode"</span> <span class="attr">size</span>=<span class="string">"10"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/footer.jpg"</span> <span class="attr">width</span>=<span class="string">"100%"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../案例一：网站信息页面显示/网站信息页面显示.html"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>招贤纳士<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>法律声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../案例三：网站列表页面显示/网站列表页面显示.html"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>支付方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>配送方式<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>服务声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>广告声明<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">Copyright © 2005-2016 传智商城 版权所有 </span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6、网站后台页面显示"><a href="#6、网站后台页面显示" class="headerlink" title="6、网站后台页面显示"></a>6、网站后台页面显示</h2><h3 id="需求分析：-5"><a href="#需求分析：-5" class="headerlink" title="需求分析："></a>需求分析：</h3><p>在浏览器中显示网站的后台页面，效果如下图：<br><img src="/images/javaweb_day01/3.png" alt="dd"></p><h3 id="【HTML的框架标记frameset】"><a href="#【HTML的框架标记frameset】" class="headerlink" title="【HTML的框架标记frameset】"></a>【HTML的框架标记frameset】</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line">* 使用了frameset标签，不需要使用body.</span><br><span class="line">* <span class="tag">&lt;<span class="name">注意:</span> 最好和<span class="attr">body</span>不要共存&gt;</span></span><br><span class="line">* 属性：</span><br><span class="line">* rows：横向切分页面</span><br><span class="line">* cols：纵向切分页面</span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span>&gt;</span>标签代表切分每个部分的页面</span><br><span class="line">* src：引入页面的路径</span><br><span class="line">*</span><br></pre></td></tr></table></figure><h4 id="步骤分析：-3"><a href="#步骤分析：-3" class="headerlink" title="步骤分析："></a>步骤分析：</h4><ul><li><p>步骤一：先将页面切分成上下两个部分。</p></li><li><p>步骤二：将下部分切分成左右两个部分。</p></li><li><p>步骤三：分别引入不同的页面。</p></li></ul><h3 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">"15%,*"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"top.html"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"15%,*"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"left.html"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"right.html"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="扩展需求："><a href="#扩展需求：" class="headerlink" title="扩展需求："></a>扩展需求：</h3><p>点击分类管理，将数据放入到表格中显示到右侧区域中！</p><p>在frame上添加一个属性name，在超链接的target属性上设置这个名称。点击超链接的时候，跳转到指定的位置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"data.html"</span> <span class="attr">target</span>=<span class="string">"right"</span>&gt;</span>分类管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="html-文件-标题-字体标签"><a href="#html-文件-标题-字体标签" class="headerlink" title="html 文件/标题/字体标签"></a>html 文件/标题/字体标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">案例1-网站信息展示</span><br><span class="line">需求:</span><br><span class="line">在页面展示一些文字信息,需要排版</span><br><span class="line">技术分析:</span><br><span class="line">html:超文本标签语言</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">////////////////////</span><br><span class="line">html:</span><br><span class="line">作用:展示</span><br><span class="line">超文本:超越了一般文本,描述文本的字体 颜色 图片</span><br><span class="line">标签:标记</span><br><span class="line">html书写规则:</span><br><span class="line">文件的后缀名  .html(建议) 或者 .htm</span><br><span class="line">标签必须用 <span class="tag">&lt;&gt;</span> 引起来 已经定义好的标签</span><br><span class="line">属性 </span><br><span class="line">格式: key="value"</span><br><span class="line">建议属性的值用引号引起来.</span><br><span class="line">不区分大小写</span><br><span class="line">注意:</span><br><span class="line">最好将所有的内容放在一个标签中 <span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">有开始标签和结束标签的标签称之为围堵标签</span><br><span class="line">没有结束的标签的称之为空标签  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">开始标签和结束标签之间的内容称之为标签体.</span><br><span class="line"><span class="comment">&lt;!--注释内容--&gt;</span> html页面中的注释</span><br><span class="line">标签必须正常嵌套,</span><br><span class="line">标签最好关闭</span><br><span class="line">文件标签:</span><br><span class="line">html标签:</span><br><span class="line">声明当前网页为html页面</span><br><span class="line">子标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">head:用来存放当前页面的重要信息,一般不展示在html页面上</span><br><span class="line">常见的子标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> 网页的标题</span><br><span class="line">body:</span><br><span class="line">要展示的数据放在body中</span><br><span class="line">标题标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">hn</span>&gt;</span><span class="tag">&lt;/<span class="name">hn</span>&gt;</span></span><br><span class="line">n取值 :1~6</span><br><span class="line">h1最大  h6最小</span><br><span class="line">自动换行 且留白 默认加粗</span><br><span class="line">常用属性:</span><br><span class="line">align:对齐方式</span><br><span class="line">left:左  right:右 center:居中</span><br><span class="line">格式:</span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">//////</span><br><span class="line">字体标签:(了解)规定文本的字体、字体尺寸、字体颜色。</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">常用属性:</span><br><span class="line">face:字体</span><br><span class="line">size:尺寸</span><br><span class="line">color:颜色</span><br><span class="line">颜色的取值:(RGB)</span><br><span class="line">方式1: #xxxxxx  x为16进制</span><br><span class="line">方式2: 英文单词</span><br><span class="line">段落标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">其他标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span>  <span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span>加粗 </span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 斜体</span><br><span class="line">水平线</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">换行</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">//////////////////////////</span><br><span class="line">案例1-步骤分析:</span><br><span class="line">1.新建一个html页面</span><br><span class="line">2.标题标签</span><br><span class="line">3.添加一个水平线</span><br><span class="line">4.4个段落</span><br><span class="line">5.添加字体颜色 加粗 斜体</span><br><span class="line">/////////////////////</span><br><span class="line">案例2-图片网页展示</span><br><span class="line">需求:</span><br><span class="line">在一个页面中展示多张图片</span><br><span class="line">技术分析:</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>/&gt;</span></span><br><span class="line">图片标签:★</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>/&gt;</span></span><br><span class="line">常用属性:</span><br><span class="line">★src:图片的路径</span><br><span class="line">alt:替代文字</span><br><span class="line">title:移上去显示的文字</span><br><span class="line">width:宽</span><br><span class="line">height:高</span><br><span class="line">大小的写法:</span><br><span class="line">像素:123px</span><br><span class="line">百分比:20%</span><br><span class="line">路径的写法:</span><br><span class="line">相对路径:</span><br><span class="line">./ 或者 什么都不写  当前目录</span><br><span class="line">../  上一级目录</span><br><span class="line">绝对路径:</span><br><span class="line">带协议的绝对路径:</span><br><span class="line">http://www.itheima.com</span><br><span class="line">实现:</span><br></pre></td></tr></table></figure><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">////////////////</span><br><span class="line">案例3-列表页面展示</span><br><span class="line">需求:</span><br><span class="line">将友情连接的页面通过列表展示出来</span><br><span class="line">技术分析:</span><br><span class="line">列表标签</span><br><span class="line">列表标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span> 有序</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span> 无序</span><br><span class="line"></span><br><span class="line">常用的标签</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span> 列表项</span><br><span class="line">超链接标记</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">常用属性:</span><br><span class="line">href:跳转路径</span><br><span class="line">target:在那里打开</span><br><span class="line">默认值:_self  _blank(在空白页面打开)</span><br></pre></td></tr></table></figure><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">////////////////////////</span><br><span class="line">案例4-首页信息的展示</span><br><span class="line">需求:</span><br><span class="line">通过表格布局将首页信息展示</span><br><span class="line">技术分析:</span><br><span class="line">表格表格</span><br><span class="line">表格标签★</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">常用的子标签</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>:行</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">常用子标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>:列</span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>:表头单元格 默认居中加粗</span><br><span class="line">注意:</span><br><span class="line">一行必须只有有一个单元格或者一列</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">//////////////////</span><br><span class="line"></span><br><span class="line">table 的常用属性:</span><br><span class="line">border:边框  像素值</span><br><span class="line">width:</span><br><span class="line">align:表格对齐方式</span><br><span class="line">tr 的常用属性:</span><br><span class="line">align:内容对齐</span><br><span class="line">td 的常用属性:</span><br><span class="line">align:内容对齐</span><br><span class="line">colspan:跨列合并 值:合并的列数</span><br><span class="line">rowspan:跨行合并</span><br><span class="line">步骤分析:</span><br><span class="line">1.常见一个8行1列的表格</span><br><span class="line">2.在第一行 放logo</span><br><span class="line">嵌套一个1行3列的表格</span><br><span class="line">3.第2行 放菜单</span><br><span class="line">4.第3行 放图片</span><br><span class="line">5.第4行 热门商品</span><br><span class="line">嵌套一个2行7列的表格</span><br><span class="line"></span><br><span class="line">6.第5行 放广告图片</span><br><span class="line">7.第6行 最新商品</span><br><span class="line">嵌套一个2行7列的表格</span><br><span class="line">8.第7行 放一个图片</span><br><span class="line">9.第8行 </span><br><span class="line">两个段落</span><br></pre></td></tr></table></figure><h3 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">///////////////////////</span><br><span class="line">案例5-表单页面</span><br><span class="line">需求:</span><br><span class="line">设计一个表单页面,用来收集用户的数据</span><br><span class="line">技术分析:</span><br><span class="line">表单标签</span><br><span class="line">表单标签★★★</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">作用:</span><br><span class="line">用来从浏览器端收集用户的信息.</span><br><span class="line">步骤分析:</span><br><span class="line">1.在页面中间添加一个表格</span><br><span class="line">2.10行3列表格</span><br><span class="line">3.在表格中添加表单表单子标签</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">表单:</span><br><span class="line">常用属性:</span><br><span class="line">action:信息提交的路径 默认是当前页面</span><br><span class="line">method:表单提交的方式</span><br><span class="line">只需要掌握两种</span><br><span class="line">get(默认)和post</span><br><span class="line">get和post的区别:</span><br><span class="line">1.get请求会把所有的参数追加在地址栏上,post请求不会</span><br><span class="line">2.get请求参数大小有限制,post请求参数大小没有限制</span><br><span class="line">3.post相当于get安全些</span><br><span class="line">常见的子标签</span><br><span class="line">input</span><br><span class="line">select:下拉选</span><br><span class="line">textarea:文本域</span><br><span class="line"></span><br><span class="line">input标签</span><br><span class="line">常用的属性:</span><br><span class="line">type:</span><br><span class="line">text:文本框 默认</span><br><span class="line">password:密码框</span><br><span class="line">radio:单选框</span><br><span class="line">checkbox:多选框</span><br><span class="line">file:文件框</span><br><span class="line"></span><br><span class="line">submit:提交</span><br><span class="line">reset:重置</span><br><span class="line">button:普通按钮</span><br><span class="line"></span><br><span class="line">hidden:隐藏域 在页面上显示 提交的时候可以提交过去</span><br><span class="line">image:图片提交 替代submit </span><br><span class="line">name:</span><br><span class="line">可以将几个单选框(复选框)设置为一组</span><br><span class="line">要想将信息保存到服务器上必须有name属性</span><br><span class="line">readonly:</span><br><span class="line">readonly="readonly" 只读</span><br><span class="line">disabled:</span><br><span class="line">disabled="disabled" 禁用</span><br><span class="line"></span><br><span class="line">select :下拉选</span><br><span class="line">格式:</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"pro"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>黑龙江<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">textarea:文本域</span><br><span class="line">常用的属性:</span><br><span class="line">cols:列</span><br><span class="line">rows:行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">提交到服务器的内容的格式:</span><br><span class="line">key=value&amp;</span><br><span class="line">对于文本框 密码框 文本域 手写的内容传递过去了</span><br><span class="line">对于单选框和多选框来说,却没有把值传递过去</span><br><span class="line">要想把值传递过去 必须设置value属性</span><br><span class="line">若下拉选要想把选中内容的值传递过去,请加上value属性</span><br><span class="line"></span><br><span class="line">默认值:</span><br><span class="line">文本框 密码框:只需要添加value属性</span><br><span class="line">单选框 多选框:添加 checked="checked"</span><br><span class="line">下拉选:添加selected="selected"</span><br><span class="line">文本域:标签体</span><br><span class="line"></span><br><span class="line">当我们提交的时候 发现地址栏变化</span><br><span class="line">?username=tom&amp;password=123&amp;sex=on&amp;hobby=on&amp;hobby=on&amp;photo=&amp;pro=黑龙江&amp;city=哈尔滨&amp;intr=good+girl</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><h3 id="frameset-框架集、转义字符、总结"><a href="#frameset-框架集、转义字符、总结" class="headerlink" title="frameset:框架集、转义字符、总结"></a>frameset:框架集、转义字符、总结</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">/////////////////////////////////</span><br><span class="line">案例6-后台管理页面(了解)</span><br><span class="line">需求:</span><br><span class="line">开发一个后台管理页面,通过frameset实现</span><br><span class="line">技术分析:</span><br><span class="line">frameset:框架集</span><br><span class="line">frame:具体实现</span><br><span class="line">frameset:框架集(了解)</span><br><span class="line">常用属性:</span><br><span class="line">cols:垂直切割</span><br><span class="line">例如: cols="40%,60%"</span><br><span class="line">例如: cols="40%,*,10%"</span><br><span class="line">rows:水平切割</span><br><span class="line">常见的子标签:</span><br><span class="line">frame</span><br><span class="line">注意:</span><br><span class="line">最好和body不要共存</span><br><span class="line">frame:具体实现</span><br><span class="line">常用属性:</span><br><span class="line">src:展示的页面的url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//////////////</span><br><span class="line">补充:</span><br><span class="line">转义字符:</span><br><span class="line">三部分构成 &amp;实体;</span><br><span class="line">掌握的转义字符:</span><br><span class="line">&gt;&amp;gt;  //greater than</span><br><span class="line"><span class="tag">&lt;&amp;<span class="attr">lt</span>;</span></span><br><span class="line"><span class="tag">&amp;&amp;<span class="attr">amp</span>;</span></span><br><span class="line"><span class="tag">空格 &amp;<span class="attr">nbsp</span>;</span></span><br><span class="line"><span class="tag">//////////////////////</span></span><br><span class="line"><span class="tag"><span class="attr">meta</span></span></span><br><span class="line"><span class="tag">元信息</span></span><br><span class="line">&lt;meta charset="UTF-8"&gt;指定浏览器用什么编码打开此页面</span><br><span class="line">//////////////////////////////////</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/////////////////////////////////////////////</span><br><span class="line">上午回顾:</span><br><span class="line">html</span><br><span class="line">文件标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">排版标签:</span><br><span class="line">p</span><br><span class="line">br</span><br><span class="line">hr</span><br><span class="line">字体</span><br><span class="line">font</span><br><span class="line">h1~h6</span><br><span class="line">b</span><br><span class="line">strong</span><br><span class="line">i</span><br><span class="line">图片★</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图片路径"</span> <span class="attr">alt</span>=<span class="string">"替代文字"</span> <span class="attr">width</span>=<span class="string">""</span> <span class="attr">height</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">超链接★</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"跳转路径"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>xxxx<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">列表项</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">表格标签★★</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">""</span> <span class="attr">align</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">td中的重要属性:</span><br><span class="line">colspan:列合并</span><br><span class="line">rowspan:行合并</span><br><span class="line">表单标签★★★</span><br><span class="line">form</span><br><span class="line">常用属性:</span><br><span class="line">action:提交路径</span><br><span class="line">method:提交方式 get和post</span><br><span class="line">常见的子标签:</span><br><span class="line">input</span><br><span class="line">select</span><br><span class="line">textarea</span><br><span class="line">input标签:</span><br><span class="line">10中type</span><br><span class="line">text</span><br><span class="line">password</span><br><span class="line">radio</span><br><span class="line">checkbox</span><br><span class="line">file</span><br><span class="line">submit</span><br><span class="line">reset</span><br><span class="line">button</span><br><span class="line">hidden</span><br><span class="line">image</span><br><span class="line">若想将内容发送到服务器,必须有name属性  username=tom</span><br><span class="line">select标签:</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"提交到服务器的值"</span>&gt;</span>展示内容<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">textarea:文本域</span><br><span class="line">格式:</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">""</span> <span class="attr">rows</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">框架(了解)</span><br><span class="line">frameset:定义框架集</span><br><span class="line">常用属性:</span><br><span class="line">cols:</span><br><span class="line">rows:</span><br><span class="line">常见的子标签:</span><br><span class="line">frame</span><br><span class="line">frame:具体展示</span><br><span class="line">常用属性:</span><br><span class="line">src:展示网页的url</span><br><span class="line">name:给当前的frame起个名称</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297948/samples/java%20files/photo-1544728344-7efa025e5603.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;了解什么是标记语言&lt;br&gt;了解HTML主要特性,主要变化及发展趋势&lt;br&gt;了解HTML的结构标签&lt;br&gt;掌握HTML的主要标签(字体,图片,列表,链接,表单等标签)&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://leesen998.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="JavaWeb" scheme="https://leesen998.github.io/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记——基础31(类加载器,反射)</title>
    <link href="https://leesen998.github.io/2016/12/02/day33%E7%AC%94%E8%AE%B0/"/>
    <id>https://leesen998.github.io/2016/12/02/day33笔记/</id>
    <published>2016-12-02T11:48:29.000Z</published>
    <updated>2019-01-25T12:18:04.010Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297948/samples/java%20files/photo-1544728344-7efa025e5603.jpg" alt="" style="width:100%"></p><p>1、类加载器<br>2、反射构造方法<br>3、反射成员变量<br>4、反射成员方法<br>5、反射配置文件运行类中的方法 </p><a id="more"></a><h3 id="1JVM运行时数据区"><a href="#1JVM运行时数据区" class="headerlink" title="1JVM运行时数据区"></a>1JVM运行时数据区</h3><p><img src="https://img-blog.csdn.net/20141013141216040" alt=""><br><img src="https://img-blog.csdn.net/20141117164047783" alt=""><br><img src="https://img-blog.csdn.net/20141013142638909" alt=""><br><img src="https://img-blog.csdn.net/20141013142924359" alt=""></p><h3 id="2类加载器"><a href="#2类加载器" class="headerlink" title="2类加载器"></a>2类加载器</h3><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548253528/samples/java%20files/%E5%9B%BE%E7%89%873431.png" alt=""></p><h4 id="A-类的加载"><a href="#A-类的加载" class="headerlink" title="*A.类的加载"></a>*A.类的加载</h4><p>当程序要使用某个类时，如果该类还未被加载到内存中，则系统会通过加载，连接，初始化三步来实现对这个类进行初始化。</p><p>    <em> a 加载<br>……</em> <strong>就是指将class文件读入内存，并为之创建一个Class文件的对象。</strong><br>……* <strong>任何类被使用时系统都会建立一个Class对象</strong></p><p>    <em> b 连接<br>……</em> <strong>验证 是否有正确的内部结构，并和其他类协调一致<br>……<em> 准备 负责为类的静态成员分配内存，并设置默认初始化值<br>……</em> 解析 将类的二进制数据中的符号引用替换为直接引用</strong></p><p>    <em> c 初始化<br>……</em> 就是之前的初始化步骤（new 对象）<br>……* 注：<strong>简单的说就是：把.class文件加载到内存里，并把这个.class文件封装成一个Class类型的对象。</strong></p><h4 id="B-类的加载时机"><a href="#B-类的加载时机" class="headerlink" title="B.类的加载时机"></a>B.类的加载时机</h4><p>以下的情况，会加载这个类。</p><ul><li>a.<strong> 创建类的实例</strong></li><li>b. <strong>类的静态变量，或者为静态变量赋值</strong></li><li>c. <strong>类的静态方法</strong></li><li>d. <strong>使用反射方式来强制创建某个类或接口对应的java.lang.Class对象</strong></li><li>e. <strong>初始化某个类的子类</strong></li><li>f. <strong>直接使用java.exe命令来运行某个主类</strong></li></ul><h4 id="C-类加载器"><a href="#C-类加载器" class="headerlink" title="* C: 类加载器"></a>* C: 类加载器</h4><p>类加载器(Class Loader)：顾名思义，指的是可以加载类的工具。JVM自身定义了三个类加载器：引导类加载器(Bootstrap Class Loader)、拓展类加载器(Extension Class Loader )、应用加载器(Application Class Loader)。当然，我们有时候也会自己定义一些类加载器来满足自身的需要。<br>负责将.class文件加载到内在中，并为之生成对应的Class对象。</p><h5 id="a-Bootstrap-ClassLoader-引导类加载器"><a href="#a-Bootstrap-ClassLoader-引导类加载器" class="headerlink" title="* a. Bootstrap ClassLoader 引导类加载器"></a>* a.<strong> Bootstrap ClassLoader 引导类加载器</strong></h5><ul><li>也被称为<strong>根类加载器</strong>，<strong>负责Java核心类的加载</strong></li><li>比如System,String等。<strong>在JDK中JRE的lib目录下rt.jar文件中</strong><br><strong>引导类加载器</strong>(Bootstrap Class Loader): 该类加载器使JVM使用C/C++底层代码实现的加载器，用以加载JVM运行时所需要的系统类，这些系统类在{JRE_HOME}/lib目录下。<strong>由于类加载器是使用平台相关的底层C/C++语言实现的， 所以该加载器不能被Java代码访问到。但是，我们可以查询某个类是否被引导类加载器加载过</strong>。我们经常使用的系统类如：java.lang.String,java.lang.Object,java.lang*……. 这些都被放在 {JRE_HOME}/lib/rt.jar包内， <strong>当JVM系统启动的时候，引导类加载器会将其加载到 JVM内存的方法区中</strong>。</li></ul><h5 id="b-Extension-ClassLoader-扩展类加载器"><a href="#b-Extension-ClassLoader-扩展类加载器" class="headerlink" title="* b. Extension ClassLoader 扩展类加载器"></a>* b. <strong>Extension ClassLoader 扩展类加载器</strong></h5><ul><li>负责JRE的<strong>扩展目录</strong>中jar包的加载。<br><strong>* 在JRE的lib目录下ext目录</strong><br>拓展类加载器(Extension Class Loader): 该加载器是用于加载 java 的拓展类 ，拓展类一般会放在 {JRE_HOME}/lib/ext/ 目录下，用来提供除了系统类之外的额外功能。<strong>拓展类加载器是是整个JVM加载器的Java代码可以访问到的类加载器的最顶端，即是超级父加载器，拓展类加载器是没有父类加载器的。</strong></li></ul><h5 id="c-Applocatoin-ClassLoader-应用类加载器"><a href="#c-Applocatoin-ClassLoader-应用类加载器" class="headerlink" title="* c. Applocatoin ClassLoader 应用类加载器"></a>* c. <strong>Applocatoin ClassLoader 应用类加载器</strong></h5><p><strong>又称为是System ClassLoader 系统类加载器；</strong></p><ul><li>负责在JVM启动时加载来自java命令的class文件，以及classpath环境变量所指定的jar包和类路径。</li><li>我们用的是System ClassLoader 系统类加载器</li></ul><p>应用类加载器(Applocatoin Class Loader): 该类加载器是用于加载用户代码，是用户代码的入口。我经常执行指令 java   xxx.x.xxx.x.x.XClass , 实际上，JVM就是使用的AppClassLoader加载 xxx.x.xxx.x.x.XClass 类的。<strong>应用类加载器将拓展类加载器当成自己的父类加载器，当其尝试加载类的时候，首先尝试让其父加载器-拓展类加载器加载；如果拓展类加载器加载成功，则直接返回加载结果Class<t> instance;如果加载失败，则会询问是否引导类加载器已经加载了该类；只有没有加载的时候，应用类加载器才会尝试自己加载。由于xxx.x.xxx.x.x.XClass是整个用户代码的入口，在Java虚拟机规范中，称其为 初始类(Initial Class).</t></strong></p><h5 id="d-Customized-ClassLoader-用户自定义类加载器"><a href="#d-Customized-ClassLoader-用户自定义类加载器" class="headerlink" title="* d. Customized ClassLoader 用户自定义类加载器"></a>* d. <strong>Customized ClassLoader 用户自定义类加载器</strong></h5><p>用户自定义类加载器（Customized Class Loader）：用户可以自己定义类加载器来加载类。所有的类加载器都要继承java.lang.ClassLoader类。<br><img src="https://img-blog.csdn.net/20160117130521757" alt=""></p><h3 id="3类加载过程"><a href="#3类加载过程" class="headerlink" title="3类加载过程"></a>3类加载过程</h3><h4 id="1、创建一个引导类加载器实例，初步加载系统类到内存方法区区域中："><a href="#1、创建一个引导类加载器实例，初步加载系统类到内存方法区区域中：" class="headerlink" title="1、创建一个引导类加载器实例，初步加载系统类到内存方法区区域中："></a>1、创建一个引导类加载器实例，初步加载系统类到内存方法区区域中：</h4><p>JVM申请好内存空间后，JVM会创建一个引导类加载器（Bootstrap Classloader）实例，引导类加载器是使用C++语言实现的，负责加载JVM虚拟机运行时所需的基本系统级别的类，如java.lang.String, java.lang.Object等等。<br>引导类加载器(Bootstrap Classloader)会读取 {JRE_HOME}/lib 下的jar包和配置，然后将这些系统类加载到方法区内<br><img src="https://img-blog.csdn.net/20160116204532583" alt=""></p><ol><li>引导类加载器将类信息加载到方法区中，以特定方式组织，对于某一个特定的类而言，在方法区中它应该有 运行时常量池、类型信息、字段信息、方法信息、类加载器的引用，对应class实例的引用等信息。</li></ol><ol start="2"><li>类加载器的引用,由于这些类是由引导类加载器(Bootstrap Classloader)进行加载的，而 引导类加载器是有C++语言实现的，所以是无法访问的，故而该引用为NULL</li></ol><ol start="3"><li>对应class实例的引用， 类加载器在加载类信息放到方法区中后，会创建一个对应的Class 类型的实例放到堆(Heap)中, 作为开发人员访问方法区中类定义的入口和切入点。</li></ol><p>当我们在代码中尝试获取系统类如java.lang.Object的类加载器时，你会始终得到NULL：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(String.class.getClassLoader());<span class="comment">//null</span></span><br><span class="line">System.out.println(Object.class.getClassLoader());<span class="comment">//null</span></span><br><span class="line">System.out.println(Math.class.getClassLoader());<span class="comment">//null</span></span><br><span class="line">System.out.println(System.class.getClassLoader());<span class="comment">//null</span></span><br></pre></td></tr></table></figure><h4 id="2、创建JVM-启动器实例-Launcher-并取得类加载器ClassLoader"><a href="#2、创建JVM-启动器实例-Launcher-并取得类加载器ClassLoader" class="headerlink" title="2、创建JVM 启动器实例 Launcher,并取得类加载器ClassLoader"></a>2、创建JVM 启动器实例 Launcher,并取得类加载器ClassLoader</h4><h5 id="加载过程"><a href="#加载过程" class="headerlink" title="加载过程"></a>加载过程</h5><p>上述步骤完成，JVM基本运行环境就准备就绪了。接着，我们要让JVM工作起来了：运行我们定义的程序 org.luanlouis,jvm.load.Main。</p><p>此时，JVM虚拟机调用已经加载在方法区的类sun.misc.Launcher 的静态方法getLauncher(),  获取sun.misc.Launcher 实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sun.misc.Launcher launcher = sun.misc.Launcher.getLauncher(); <span class="comment">//获取Java启动器</span></span><br><span class="line">ClassLoader classLoader = launcher.getClassLoader();          <span class="comment">//获取类加载器ClassLoader用来加载class到内存来</span></span><br></pre></td></tr></table></figure></p><p>sun.misc.Launcher 使用了单例模式设计，保证一个JVM虚拟机内只有一个sun.misc.Launcher实例。<br>在Launcher的内部，其定义了两个类加载器(ClassLoader),分别是sun.misc.Launcher.ExtClassLoader和sun.misc.Launcher.AppClassLoader，这两个类加载器分别被称为拓展类加载器(Extension ClassLoader) 和 应用类加载器(Application ClassLoader).如下图所示：<br><img src="https://img-blog.csdn.net/20160117105550022" alt=""><br>图例注释：除了引导类加载器(Bootstrap Class Loader )的所有类加载器，都有一个能力，就是判断某一个类是否被引导类加载器加载过，如果加载过，可以直接返回对应的Class<t> instance，如果没有，则返回null.  图上的指向引导类加载器的虚线表示类加载器的这个有限的访问 引导类加载器的功能。</t></p><p>当AppClassLoader加载类时，会首先尝试让父加载器ExtClassLoader进行加载，如果父加载器ExtClassLoader加载成功，则AppClassLoader直接返回父加载器ExtClassLoader加载的结果；如果父加载器ExtClassLoader加载失败，AppClassLoader则会判断该类是否是引导的系统类(即是否是通过Bootstrap类加载器加载，这会调用Native方法进行查找)；若要加载的类不是系统引导类，那么ClassLoader将会尝试自己加载，加载失败将会抛出“ClassNotFoundException”。<br><img src="https://img-blog.csdn.net/20160119193940660" alt=""></p><h5 id="双亲委派模型-parent-delegation-model"><a href="#双亲委派模型-parent-delegation-model" class="headerlink" title="双亲委派模型(parent-delegation model)"></a>双亲委派模型(parent-delegation model)</h5><p>上面讨论的应用类加载器AppClassLoader的加载类的模式就是我们常说的双亲委派模型(parent-delegation model).<br>对于某个特定的类加载器而言，应该为其指定一个父类加载器，当用其进行加载类的时候：</p><ol><li>委托父类加载器帮忙加载；</li><li>父类加载器加载不了，则查询引导类加载器有没有加载过该类；</li><li>如果引导类加载器没有加载过该类，则当前的类加载器应该自己加载该类；</li><li>若加载成功，返回 对应的Class<t> 对象；若失败，抛出异常“ClassNotFoundException”。</t></li></ol><p>请注意：<br>双亲委派模型中的”双亲”并不是指它有两个父类加载器的意思，一个类加载器只应该有一个父加载器。上面的步骤中，有两个角色：</p><ol><li>父类加载器(parent classloader)：它可以替子加载器尝试加载类</li><li>引导类加载器（bootstrap classloader）: 子类加载器只能判断某个类是否被引导类加载器加载过，而不能委托它加载某个类；换句话说，就是子类加载器不能接触到引导类加载器，引导类加载器对其他类加载器而言是透明的。</li></ol><p>一般情况下，双亲加载模型如下所示：<br><img src="https://img-blog.csdn.net/20160117130521757" alt=""></p><h4 id="3使用类加载器ClassLoader加载Main类"><a href="#3使用类加载器ClassLoader加载Main类" class="headerlink" title="3使用类加载器ClassLoader加载Main类"></a>3使用类加载器ClassLoader加载Main类</h4><p>加载顺序：</p><ol><li><p>加载java.lang.Object、java.lang.System、java.io.PrintStream、java,lang.Class</p><p>  AppClassLoader尝试加载这些类的时候，会先委托ExtClassLoader进行加载；而ExtClassLoader发现不是其加载范围，其返回null；AppClassLoader发现父类加载器ExtClassLoader无法加载，则会查询这些类是否已经被BootstrapClassLoader加载过，结果表明这些类已经被BootstrapClassLoader加载过，则无需重复加载，直接返回对应的Class<t>实例；</t></p></li><li><p>加载sun.security.pkcs11.P11Util</p><p> 此在{JRE_HOME}/lib/ext/sunpkcs11.jar包内，属于ExtClassLoader负责加载的范畴。AppClassLoader尝试加载这些类的时候，会先委托ExtClassLoader进行加载；而ExtClassLoader发现其正好属于加载范围，故ExtClassLoader负责将其加载到内存中。ExtClassLoader在加载sun.security.pkcs11.P11Util时也分析这个类内都使用了哪些类，并将这些类先加载内存后，才开始加载sun.security.pkcs11.P11Util，加载成功后直接返回对应的Class&lt;sun.security.pkcs11.P11Util&gt;实例；</p></li><li><p>加载org.luanlouis.jvm.load.Main</p><p>AppClassLoader尝试加载这些类的时候，会先委托ExtClassLoader进行加载；而ExtClassLoader发现不是其加载范围，其返回null；AppClassLoader发现父类加载器ExtClassLoader无法加载，则会查询这些类是否已经被BootstrapClassLoader加载过。而结果表明BootstrapClassLoader 没有加载过它，这时候AppClassLoader只能自己动手负责将其加载到内存中，然后返回对应的Class&lt;org.luanlouis.jvm.load.Main&gt;实例引用；</p></li></ol><p>以上三步骤都成功，才表示classLoader.loadClass(“org.luanlouis.jvm.load.Main”)完成，上述操作完成后，JVM内存方法区的格局会如下所示：<br><img src="https://img-blog.csdn.net/20160117150008559" alt=""></p><h3 id="A-反射定义"><a href="#A-反射定义" class="headerlink" title="*A. 反射定义"></a>*A. 反射定义</h3><ul><li><p>a. JAVA反射机制是在<strong>运行状态</strong>中，<br>  <strong>对于任意一个类，都能够知道这个类的所有属性和方法；<br>  对于任意一个对象，都能够调用它的任意一个方法和属性；</strong><br>这种<strong>动态获取的信息以及动态调用对象的方法</strong>的功能称为<strong>java语言的反射机制。</strong></p></li><li><p>b.反射技术</p></li></ul><p>条件：<strong>处于 运行状态</strong></p><p>已知：<strong>一个类或一个对象(根本是已知.class文件)</strong></p><p>结果：<strong>得到这个类或对象的所有方法和属性</strong></p><p>功能：</p><ol><li>在运行时<strong>判断任意一个对象所属的类</strong>；</li></ol><ol start="2"><li>在运行时<strong>构造</strong> <strong>任意一个类的对象</strong>；</li></ol><ol start="3"><li><p>在运行时<strong>判断任意一个类所具有的成员变量和方法</strong>；</p></li><li><p>在运行时<strong>调用</strong> <strong>任意一个对象的方法</strong>；</p></li><li><p><strong>生成动态代理</strong>。</p></li></ol><ul><li>注: 要想解剖一个类,必须先要获取到该类的字节码文件对象。而解剖使用的就是Class类中的方法.所以先要获取到每一个字节码文件对应的Class类型的对象。</li><li></li></ul><h3 id="B-Class类"><a href="#B-Class类" class="headerlink" title="* B. Class类"></a>* B. Class类</h3><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548300980/samples/java%20files/%E5%9B%BE%E7%89%87df1.png" alt=""></p><h4 id="Class类及Class对象的了解"><a href="#Class类及Class对象的了解" class="headerlink" title="Class类及Class对象的了解"></a>Class类及Class对象的了解</h4><p>要想解剖一个类，必须先了解Class对象。<br>阅读API的Class类得知，Class 没有公共构造方法。Class 对象是在加载类时由 Java 虚拟机以及通过调用类加载器中的 defineClass 方法自动构造的。</p><ul><li>. 得到Class对象</li><li><ol><li>有三个方法 </li></ol></li></ul><ul><li><p><strong>方式一: 通过Object类中的getClass()方法</strong><br>  Person person = new Person();<br>  Class clazz = person.getClass();</p></li><li><p><strong>方式二: 通过 类名.class 获取到字节码文件对象（任意数据类型都具备一个class静态属性,看上去要比第一种方式简单）</strong>。<br>  Class clazz = Person.class;</p></li><li><p><strong>方式三: 通过Class类中的方法（将类名作为字符串传递给Class类中的静态方法forName即可）。</strong><br>  Class c3 = Class.forName(“Person”);</p></li></ul><p>注：第三种和前两种的区别是：<br>前两种你必须明确Person类型.<br>后面是指定这种类型的字符串就行.这种扩展更强.我不需要知道你的类.我只提供字符串,按照配置文件加载就可以了</p><h4 id="2-得到Class对象的三个方法代码演示："><a href="#2-得到Class对象的三个方法代码演示：" class="headerlink" title="2. 得到Class对象的三个方法代码演示："></a>2. 得到Class对象的三个方法代码演示：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">代码演示</span><br><span class="line">*</span><br><span class="line"> * 获取.class字节码文件对象的方式</span><br><span class="line">* <span class="number">1</span>：通过Object类中的getClass()方法</span><br><span class="line">* <span class="number">2</span>: 通过 类名.class 获取到字节码文件对象</span><br><span class="line">* <span class="number">3</span>: 反射中的方法,</span><br><span class="line">* <span class="keyword">public</span> <span class="keyword">static</span> Class&lt;?&gt; forName(String className) <span class="keyword">throws</span> ClassNotFoundException</span><br><span class="line">*    返回与带有给定字符串名的类或接口相关联的 Class 对象 </span><br><span class="line"> *</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line"><span class="string">"// 1： 通过Object类中的getClass()方法"</span></span><br><span class="line"><span class="comment">// Person p1 = new Person();</span></span><br><span class="line"><span class="comment">// Class c1 = p1.getClass();</span></span><br><span class="line"><span class="comment">// System.out.println("c1 = "+ c1);</span></span><br><span class="line"></span><br><span class="line"><span class="string">"// 2: 通过 类名.class 获取到字节码文件对象"</span></span><br><span class="line"><span class="comment">// Class c2 = Person.class;</span></span><br><span class="line"><span class="comment">// System.out.println("c2 = "+ c2);</span></span><br><span class="line">System.out.println(c2==c1);<span class="comment">//true</span></span><br><span class="line">        System.out.println(c2.equals(c1));<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="string">"// 3: 反射中的方法"</span></span><br><span class="line">Class c3 = Class.forName(<span class="string">"cn.itcast_01_Reflect.Person"</span>);<span class="string">"// 包名.类名"</span></span><br><span class="line">System.out.println(<span class="string">"c3 = "</span> + c3);</span><br><span class="line">System.out.println(c3==c1);<span class="comment">//true</span></span><br><span class="line">        System.out.println(c3.equals(c1));<span class="comment">//true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">* 注: Class类型的唯一性</span><br><span class="line"><span class="string">"因为一个.class文件在内存里只生成一个Class对象，</span></span><br><span class="line"><span class="string">所以无论那一种方法得到Class对象，得到的都是同一个对象。"</span></span><br><span class="line"></span><br><span class="line">Person类</span><br><span class="line"><span class="keyword">package</span> cn.itcast_01_Reflect;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"><span class="comment">//成员变量</span></span><br><span class="line"><span class="keyword">public</span> String name;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"空参数构造方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">System.out.println(<span class="string">"带有String的构造方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//私有的构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">System.out.println(<span class="string">"带有String，int的构造方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age, String address)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line"><span class="keyword">this</span>.address = address;</span><br><span class="line">System.out.println(<span class="string">"带有String, int, String的构造方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//成员方法</span></span><br><span class="line"><span class="comment">//没有返回值没有参数的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"没有返回值没有参数的方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//没有返回值，有参数的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"没有返回值，有参数的方法 name= "</span>+ name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有返回值，没有参数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">method3</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"有返回值，没有参数的方法"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有返回值，有参数的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">method4</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"有返回值，有参数的方法"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"哈哈"</span> + name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//私有方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">method5</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"私有方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Person [name="</span> + name + <span class="string">", age="</span> + age + <span class="string">", address="</span> + address+ <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">* 注: Class类型的唯一性</span><br><span class="line">因为一个.class文件在内存里只生成一个Class对象，</span><br><span class="line">所以无论那一种方法得到Class对象，得到的都是同一个对象。</span><br></pre></td></tr></table></figure><h3 id="C-通过反射获取无参构造方法并使用"><a href="#C-通过反射获取无参构造方法并使用" class="headerlink" title="* C.通过反射获取无参构造方法并使用"></a>* C.通过反射获取无参构造方法并使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">在反射机制中，把类中的成员（构造方法、成员方法、成员变量）都封装成了对应的类进行表示。</span><br><span class="line">其中，构造方法使用类Constructor表示。可通过Class类中提供的方法获取构造方法：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>.返回一个构造方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;T&gt; <span class="title">getConstructor</span><span class="params">(Class&lt;?&gt;... parameterTypes)</span> </span></span><br><span class="line"><span class="function">获取<span class="keyword">public</span>修饰, 指定参数类型所对应的构造方法</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;T&gt; <span class="title">getDeclaredConstructor</span><span class="params">(Class&lt;?&gt;... parameterTypes)</span> </span></span><br><span class="line"><span class="function">获取指定参数类型所对应的构造方法<span class="params">(包含私有的)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">2.返回多个构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;?&gt;[] <span class="title">getConstructors</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">获取所有的<span class="keyword">public</span> 修饰的构造方法</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;?&gt;[] <span class="title">getDeclaredConstructors</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 获取所有的构造方法<span class="params">(包含私有的)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">3.运行构造方法创建实例</span></span><br><span class="line"><span class="function"> 通过构造方法类Constructor中的方法，创建对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">(Object... initargs)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">                                                                                             <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">* a. 得到构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;?&gt;[] <span class="title">getConstructors</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">获取所有的<span class="keyword">public</span> 修饰的构造方法。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;T&gt; <span class="title">getConstructor</span><span class="params">(Class&lt;?&gt;... parameterTypes)</span> </span></span><br><span class="line"><span class="function">获取<span class="keyword">public</span>修饰, 指定参数类型所对应的构造方法。</span></span><br><span class="line"><span class="function">不传参数得到无参构造方法。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* b. 运行构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">(Object... initargs)</span> </span></span><br><span class="line"><span class="function">使用此 Constructor 对象表示的构造方法来创建该构造方法的声明类的新实例，</span></span><br><span class="line"><span class="function">并用指定的初始化参数初始化该实例。 </span></span><br><span class="line"><span class="function">因为是无参构造，所以不传参数。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* c. 通过反射获取无参构造方法并使用的代码演示：</span></span><br><span class="line"><span class="function"><span class="keyword">package</span> cn.itcast.demo1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  通过反射获取class文件中的构造方法,运行构造方法</span></span><br><span class="line"><span class="string"> *  运行构造方法,创建对象</span></span><br><span class="line"><span class="string"> *    获取class文件对象</span></span><br><span class="line"><span class="string"> *    从class文件对象中,获取需要的成员</span></span><br><span class="line"><span class="string"> *    </span></span><br><span class="line"><span class="string"> *  Constructor 描述构造方法对象类</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectDemo1</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">Class c = Class.forName(<span class="string">"cn.itcast.demo1.Person"</span>);</span><br><span class="line"><span class="comment">//使用class文件对象,获取类中的构造方法</span></span><br><span class="line"><span class="comment">//  Constructor[]  getConstructors() 获取class文件对象中的所有公共的构造方法</span></span><br><span class="line"><span class="comment">/*Constructor[] cons = c.getConstructors();</span></span><br><span class="line"><span class="comment">for(Constructor con : cons)&#123;</span></span><br><span class="line"><span class="comment">System.out.println(con);</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//获取指定的构造方法,空参数的构造方法</span></span><br><span class="line">Constructor con =  c.getConstructor();</span><br><span class="line"><span class="comment">//运行空参数构造方法,Constructor类方法 newInstance()运行获取到的构造方法</span></span><br><span class="line">Object obj = con.newInstance();</span><br><span class="line">System.out.println(obj.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-通过反射获取有参构造方法并使用"><a href="#D-通过反射获取有参构造方法并使用" class="headerlink" title="* D. 通过反射获取有参构造方法并使用"></a>* D. 通过反射获取有参构造方法并使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">* a. 得到有参的构造方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;T&gt; <span class="title">getConstructor</span><span class="params">(Class&lt;?&gt;... parameterTypes)</span> </span></span><br><span class="line"><span class="function">获取<span class="keyword">public</span>修饰, 指定参数类型所对应的构造方法。</span></span><br><span class="line"><span class="function">传相应的参数类型得到有参构造方法。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* b. 运行构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">(Object... initargs)</span> </span></span><br><span class="line"><span class="function">使用此 Constructor 对象表示的构造方法来创建该构造方法的声明类的新实例，并用指定的初始化参数初始化该实例。 </span></span><br><span class="line"><span class="function">因为是有参构造，所以传相应的参数值。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* c. 通过反射获取有参构造方法并使用的代码演示：</span></span><br><span class="line"><span class="function"><span class="keyword">package</span> cn.itcast.demo1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  通过反射,获取有参数的构造方法并运行</span></span><br><span class="line"><span class="comment"> *  方法getConstructor,传递可以构造方法相对应的参数列表即可</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectDemo2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">Class c = Class.forName(<span class="string">"cn.itcast.demo1.Person"</span>);</span><br><span class="line"><span class="comment">//获取带有,String和int参数的构造方法</span></span><br><span class="line"><span class="comment">//Constructor&lt;T&gt; getConstructor(Class&lt;?&gt;... parameterTypes)  </span></span><br><span class="line"><span class="comment">//Class&lt;?&gt;... parameterTypes 传递要获取的构造方法的参数列表</span></span><br><span class="line">Constructor con = c.getConstructor(String.class,<span class="keyword">int</span>.class);</span><br><span class="line"><span class="comment">//运行构造方法</span></span><br><span class="line"><span class="comment">// T newInstance(Object... initargs)  </span></span><br><span class="line"><span class="comment">//Object... initargs 运行构造方法后,传递的实际参数</span></span><br><span class="line">Object obj = con.newInstance(<span class="string">"张三"</span>,<span class="number">20</span>);</span><br><span class="line">System.out.println(obj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E-通过反射获取有参构造方法并使用快捷方式"><a href="#E-通过反射获取有参构造方法并使用快捷方式" class="headerlink" title="* E. 通过反射获取有参构造方法并使用快捷方式"></a>* E. 通过反射获取有参构造方法并使用快捷方式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">* a. 使用的前提</span><br><span class="line"><span class="string">"类有空参的public构造方法。（如果是同包，默认权限也可以）"</span></span><br><span class="line">* b. 使用的基础</span><br><span class="line">Class类的 <span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">()</span> 方法</span></span><br><span class="line"><span class="function"> 创建此 Class 对象所表示的类的一个新实例。</span></span><br><span class="line"><span class="function">* c. 通过反射获取有参构造方法并使用快捷方式的代码演示：</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function"><span class="keyword">package</span> cn.itcast.demo1</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 反射获取构造方法并运行,有快捷点的方式</span></span><br><span class="line"><span class="comment"> * 有前提:</span></span><br><span class="line"><span class="comment"> *   被反射的类,必须具有空参数构造方法</span></span><br><span class="line"><span class="comment"> *   构造方法权限必须public</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectDemo3</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">Class c = Class.forName(<span class="string">"cn.itcast.demo1.Person"</span>);</span><br><span class="line"><span class="comment">// Class类中定义方法, T newInstance() 直接创建被反射类的对象实例</span></span><br><span class="line">Object obj = c.newInstance();</span><br><span class="line">System.out.println(obj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F-通过反射获取私有构造方法并使用"><a href="#F-通过反射获取私有构造方法并使用" class="headerlink" title="* F. 通过反射获取私有构造方法并使用"></a>* F. 通过反射获取私有构造方法并使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">AccessibleObject 类是 Field、Method 和 Constructor 对象的父类。</span><br><span class="line"><span class="string">"它提供了将反射的对象标记为在使用时取消默认 Java 语言访问控制检查的能力"</span>。</span><br><span class="line">对于公共成员、默认（打包）访问成员、受保护成员和私有成员，</span><br><span class="line">在分别使用<span class="string">" Field "</span>、<span class="string">" Method "</span>或 <span class="string">"Constructor "</span>对象来设置或获取字段、调用方法，</span><br><span class="line">或者创建和初始化类的新实例的时候，<span class="string">"会执行访问检查"</span></span><br><span class="line"></span><br><span class="line">常用方法如下：</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccessible</span><span class="params">(<span class="keyword">boolean</span> flag)</span> <span class="keyword">throws</span> SecurityException </span></span><br><span class="line"><span class="function">参数值为 <span class="keyword">true</span> 则指示反射的对象在使用时应该【取消】 Java 语言访问检查。</span></span><br><span class="line"><span class="function">参数值为 <span class="keyword">false</span> 则指示反射的对象应该实施 Java 语言访问检查。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">获取私有构造方法，步骤如下：</span></span><br><span class="line"><span class="function">1. 获取到Class对象</span></span><br><span class="line"><span class="function">2. 获取指定的构造方法</span></span><br><span class="line"><span class="function">3. 暴力访问, 通过<span class="title">setAccessible</span><span class="params">(<span class="keyword">boolean</span> flag)</span>方法</span></span><br><span class="line"><span class="function">4. 通过构造方法类Constructor中的方法，创建对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">(Object... initargs)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">* a. 得到私有的构造方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;T&gt; <span class="title">getDeclaredConstructor</span><span class="params">(Class&lt;?&gt;... parameterTypes)</span> </span></span><br><span class="line"><span class="function">获取指定参数类型所对应的构造方法<span class="params">(包含私有的)</span>。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;?&gt;[] <span class="title">getDeclaredConstructors</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">获取所有的构造方法<span class="params">(包含私有的)</span>。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* b. 运行私有构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccessible</span><span class="params">(<span class="keyword">boolean</span> flag)</span></span></span><br><span class="line"><span class="function">将此对象的 accessible 标志设置为指示的布尔值。</span></span><br><span class="line"><span class="function">设置为<span class="keyword">true</span>,这个方法保证我们得到的私有构造方法的运行。（取消运行时期的权限检查。）</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">(Object... initargs)</span> </span></span><br><span class="line"><span class="function">使用此 Constructor 对象表示的构造方法来创建该构造方法的声明类的新实例，</span></span><br><span class="line"><span class="function">并用指定的初始化参数初始化该实例。</span></span><br><span class="line"><span class="function"> </span></span><br><span class="line"><span class="function">* c. 通过反射获取私有构造方法并使用的代码演示：</span></span><br><span class="line"><span class="function"><span class="keyword">package</span> cn.itcast.demo1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  反射获取私有的构造方法运行</span></span><br><span class="line"><span class="comment"> *  不推荐,破坏了程序的封装性,安全性</span></span><br><span class="line"><span class="comment"> *  暴力反射</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectDemo4</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">Class c = Class.forName(<span class="string">"cn.itcast.demo1.Person"</span>);</span><br><span class="line"><span class="comment">//Constructor[] getDeclaredConstructors()获取所有的构造方法,包括私有的</span></span><br><span class="line"><span class="comment">/*Constructor[] cons = c.getDeclaredConstructors();</span></span><br><span class="line"><span class="comment">for(Constructor con : cons)&#123;</span></span><br><span class="line"><span class="comment">System.out.println(con);</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//Constructor getDeclaredConstructor(Class...c)获取到指定参数列表的构造方法</span></span><br><span class="line">Constructor con = c.getDeclaredConstructor(<span class="keyword">int</span>.class,String.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Constructor类,父类AccessibleObject,定义方法setAccessible(boolean b)</span></span><br><span class="line">con.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">Object obj = con.newInstance(<span class="number">18</span>,<span class="string">"lisi"</span>);</span><br><span class="line">System.out.println(obj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">* 注：不推荐，破坏了程序的封装性,安全性。</span><br></pre></td></tr></table></figure><h3 id="G-反射获取成员变量并改值"><a href="#G-反射获取成员变量并改值" class="headerlink" title="* G. 反射获取成员变量并改值"></a>* G. 反射获取成员变量并改值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">* a. 获取成员变量</span><br><span class="line">* 得到公共的成员变量</span><br><span class="line"> <span class="function"><span class="keyword">public</span> Field <span class="title">getField</span><span class="params">(String name)</span> </span></span><br><span class="line"><span class="function"> 返回一个 Field 对象，它反映此 Class 对象所表示的类或接口的指定公共成员字段。 </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> <span class="keyword">public</span> Field[] <span class="title">getFields</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"> 返回一个包含某些 Field 对象的数组，这些对象反映此 Class 对象所表示的类或接口的所有可访问公共字段。 </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* 得到所有的成员变量<span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  包括私有的，如果要进行修改私有成员变量，要先进行<span class="keyword">public</span> <span class="keyword">void</span> setAccessible(<span class="keyword">boolean</span> flag)</span> 设置。)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> <span class="keyword">public</span> Field <span class="title">getDeclaredField</span><span class="params">(String name)</span> </span></span><br><span class="line"><span class="function"> 返回一个 Field 对象，该对象反映此 Class 对象所表示的类或接口的指定已声明字段。 </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> <span class="keyword">public</span> Field[] <span class="title">getDeclaredFields</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"> 返回 Field 对象的一个数组，这些对象反映此 Class 对象所表示的类或接口所声明的所有字段。 </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">获取成员变量，步骤如下：</span></span><br><span class="line"><span class="function">1. 获取Class对象</span></span><br><span class="line"><span class="function">2. 获取构造方法</span></span><br><span class="line"><span class="function">3. 通过构造方法，创建对象</span></span><br><span class="line"><span class="function">4. 获取指定的成员变量（私有成员变量，通过<span class="title">setAccessible</span><span class="params">(<span class="keyword">boolean</span> flag)</span>方法暴力访问）</span></span><br><span class="line"><span class="function">5. 通过方法，给指定对象的指定成员变量赋值或者获取值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(Object obj, Object value)</span></span></span><br><span class="line"><span class="function">在指定对象obj中，将此 Field 对象表示的成员变量设置为指定的新值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(Object obj)</span></span></span><br><span class="line"><span class="function">    返回指定对象obj中，此 Field 对象表示的成员变量的值</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* b. 修改成员变量<span class="params">(Field)</span>的值</span></span><br><span class="line"><span class="function">* 修改公共的成员变量</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(Object obj, Object value)</span> </span></span><br><span class="line"><span class="function">将指定对象变量上此 Field 对象表示的字段设置为指定的新值。 </span></span><br><span class="line"><span class="function">obj指的是修改的是那个对象的这个成员变量值。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* c. 反射获取成员变量并改值的代码演示</span></span><br><span class="line"><span class="function"><span class="keyword">package</span> cn.itcast.demo1</span>;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  反射获取成员变量,并修改值</span></span><br><span class="line"><span class="comment"> *  Person类中的成员String name</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectDemo5</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">Class c = Class.forName(<span class="string">"cn.itcast.demo1.Person"</span>);</span><br><span class="line">Object obj = c.newInstance();</span><br><span class="line"><span class="comment">//获取成员变量 Class类的方法 getFields() class文件中的所有公共的成员变量</span></span><br><span class="line"><span class="comment">//返回值是Field[]    Field类描述成员变量对象的类</span></span><br><span class="line">Field[] fields = c.getFields();</span><br><span class="line"><span class="keyword">for</span>(Field f : fields)&#123;</span><br><span class="line">System.out.println(f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取指定的成员变量 String name</span></span><br><span class="line"><span class="comment">//Class类的方法  Field getField(传递字符串类型的变量名) 获取指定的成员变量</span></span><br><span class="line">Field field = c.getField(<span class="string">"name"</span>);</span><br><span class="line">   </span><br><span class="line"><span class="comment">//Field类的方法 void set(Object obj, Object value) ,修改成员变量的值</span></span><br><span class="line"><span class="comment">//Object obj 必须有对象的支持,  Object value 修改后的值</span></span><br><span class="line">field.set(obj,<span class="string">"王五"</span>);</span><br><span class="line">System.out.println(obj);</span><br><span class="line"><span class="comment">//获得指定对象的成员变量的值</span></span><br><span class="line">System.out.println(field.get(obj));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="H-反射获取空参数成员方法并运行"><a href="#H-反射获取空参数成员方法并运行" class="headerlink" title="* H. 反射获取空参数成员方法并运行"></a>* H. 反射获取空参数成员方法并运行</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">在反射机制中，把类中的成员方法使用类Method表示。可通过Class类中提供的方法获取成员方法：</span><br><span class="line">返回获取一个方法：</span><br><span class="line"><span class="function"><span class="keyword">public</span> Method <span class="title">getMethod</span><span class="params">(String name, Class&lt;?&gt;... parameterTypes)</span></span></span><br><span class="line"><span class="function"> 获取<span class="keyword">public</span> 修饰的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method <span class="title">getDeclaredMethod</span><span class="params">(String name, Class&lt;?&gt;... parameterTypes)</span></span></span><br><span class="line"><span class="function"> 获取任意的方法，包含私有的</span></span><br><span class="line"><span class="function">参数1: name 要查找的方法名称； 参数2： parameterTypes 该方法的参数类型</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">返回获取多个方法：</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method[] <span class="title">getMethods</span><span class="params">()</span> 获取本类与父类中所有<span class="keyword">public</span> 修饰的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method[] <span class="title">getDeclaredMethods</span><span class="params">()</span> 获取本类中所有的方法<span class="params">(包含私有的)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">获取成员方法，步骤如下：</span></span><br><span class="line"><span class="function">1. 获取Class对象</span></span><br><span class="line"><span class="function">2. 获取构造方法</span></span><br><span class="line"><span class="function">3. 通过构造方法，创建对象</span></span><br><span class="line"><span class="function"> 4. 获取指定的方法</span></span><br><span class="line"><span class="function"> 5. 执行找到的方法</span></span><br><span class="line"><span class="function">  <span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object obj,  Object... args)</span> </span></span><br><span class="line"><span class="function">执行指定对象obj中，当前Method对象所代表的方法，方法要传入的参数通过args指定。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">.</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">* a. 获取空参数成员方法</span><br><span class="line">* 得到公共的成员方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> Method <span class="title">getMethod</span><span class="params">(String name, Class&lt;?&gt;... parameterTypes)</span> </span></span><br><span class="line"><span class="function">    返回一个 Method 对象，它反映此 Class 对象所表示的类或接口的指定<span class="keyword">public</span>成员方法。 </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method[] <span class="title">getMethods</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    返回一个包含某些 Method 对象的数组，这些对象反映此 Class对象所表示的类或接口</span>;</span><br><span class="line"><span class="string">"（包括那些由该类或接口声明的以及"</span>从超类和超接口继承<span class="string">"的那些的类或接口）"</span>的<span class="keyword">public</span> member 方法。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 得到全部的成员方法</span><br><span class="line">* (包括私有的，如果要使用私有成员方法，要先进行<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccessible</span><span class="params">(<span class="keyword">boolean</span> flag)</span> 设置。)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method <span class="title">getDeclaredMethod</span><span class="params">(String name, Class&lt;?&gt;... parameterTypes)</span> </span></span><br><span class="line"><span class="function">返回一个 Method 对象，该对象反映此 Class 对象所表示的类或接口的指定已声明方法。 </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method[] <span class="title">getDeclaredMethods</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">返回 Method 对象的一个数组，这些对象反映此 Class 对象表示的类或接口声明的所有方法</span>;</span><br><span class="line">包括公共<span class="keyword">public</span>、保护<span class="keyword">protected</span>、默认（包）访问和私有<span class="keyword">private</span>方法，【但<span class="string">"不包括"</span>继承的方法】。</span><br><span class="line"></span><br><span class="line">* b. 使用Method方法对象</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object obj, Object... args)</span> </span></span><br><span class="line"><span class="function">对带有指定参数的指定对象调用由此 Method 对象表示的底层方法。 </span></span><br><span class="line"><span class="function">obj 指的是调这个方法的对象。</span></span><br><span class="line"><span class="function">args 指的是调用这个方法所要用到的参数列表。</span></span><br><span class="line"><span class="function">返回值Object就是方法的返回对象。如果方法没有返回值 ，返回的是<span class="keyword">null</span>.</span></span><br><span class="line"><span class="function">* c. 反射获取空参数成员方法并运行代码演示</span></span><br><span class="line"><span class="function"><span class="keyword">package</span> cn.itcast.demo1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  反射获取成员方法并运行</span></span><br><span class="line"><span class="comment"> *  public void eat()&#123;&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectDemo6</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">Class c = Class.forName(<span class="string">"cn.itcast.demo1.Person"</span>);</span><br><span class="line">Object obj = c.newInstance();</span><br><span class="line"><span class="comment">//获取class对象中的成员方法</span></span><br><span class="line"><span class="string">"// Method[] getMethods()获取的是class文件中的所有公共成员方法,"</span>包括继承的<span class="string">""</span></span><br><span class="line"><span class="comment">// Method类是描述成员方法的对象</span></span><br><span class="line">Method[] methods = c.getMethods();</span><br><span class="line"><span class="keyword">for</span>(Method m : methods)&#123;</span><br><span class="line">System.out.println(m);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取指定的方法eat运行</span></span><br><span class="line"><span class="comment">// Method getMethod(String methodName,Class...c)</span></span><br><span class="line"><span class="comment">// methodName获取的方法名  c 方法的参数列表</span></span><br><span class="line">Method method = c.getMethod(<span class="string">"eat"</span>);</span><br><span class="line"><span class="comment">//使用Method类中的方法,运行获取到的方法eat</span></span><br><span class="line"><span class="comment">//Object invoke(Object obj, Object...o)</span></span><br><span class="line">method.invoke(obj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="I-反射获取有参数成员方法并运行"><a href="#I-反射获取有参数成员方法并运行" class="headerlink" title="* I. 反射获取有参数成员方法并运行"></a>* I. 反射获取有参数成员方法并运行</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">* a. 获取有参数成员方法</span><br><span class="line">* 得到公共的成员方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> Method <span class="title">getMethod</span><span class="params">(String name, Class&lt;?&gt;... parameterTypes)</span> </span></span><br><span class="line"><span class="function">返回一个 Method 对象，它反映此 Class 对象所表示的类或接口的指定公共成员方法。 </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method[] <span class="title">getMethods</span><span class="params">()</span></span></span><br><span class="line"><span class="function">返回一个包含某些 Method 对象的数组，这些对象反映此 Class对象所表示的类或接口（包括那些由该类或接口声明的以及从超类和超接口继承的那些的类或接口）的公共 member 方法。</span></span><br><span class="line"><span class="function">* 得到全部的成员方法<span class="params">(包括私有的，如果要使用私有成员方法，要先进行<span class="keyword">public</span> <span class="keyword">void</span> setAccessible(<span class="keyword">boolean</span> flag)</span> 设置。)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method <span class="title">getDeclaredMethod</span><span class="params">(String name, Class&lt;?&gt;... parameterTypes)</span> </span></span><br><span class="line"><span class="function">返回一个 Method 对象，该对象反映此 Class 对象所表示的类或接口的指定已声明方法。 </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method[] <span class="title">getDeclaredMethods</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">返回 Method 对象的一个数组，这些对象反映此 Class 对象表示的类或接口声明的所有方法，包括公共、保护、默认（包）访问和私有方法，但不包括继承的方法。 </span></span><br><span class="line"><span class="function">* b. 使用Method方法对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object obj, Object... args)</span> </span></span><br><span class="line"><span class="function">对带有指定参数的指定对象调用由此 Method 对象表示的底层方法。 </span></span><br><span class="line"><span class="function">obj 指的是调这个方法的对象。</span></span><br><span class="line"><span class="function">args 指的是调用这个方法所要用到的参数列表。</span></span><br><span class="line"><span class="function">返回值Object就是方法的返回对象。如果方法没有返回值 ，返回的是<span class="keyword">null</span>.</span></span><br><span class="line"><span class="function">* c. 反射获取有参数成员方法并运行代码演示</span></span><br><span class="line"><span class="function"><span class="keyword">package</span> cn.itcast.demo1</span>;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  反射获取有参数的成员方法并执行</span></span><br><span class="line"><span class="comment"> *  public void sleep(String,int,double)&#123;&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectDemo7</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">Class c = Class.forName(<span class="string">"cn.itcast.demo1.Person"</span>);</span><br><span class="line">Object obj = c.newInstance();</span><br><span class="line"><span class="comment">//调用Class类的方法getMethod获取指定的方法sleep</span></span><br><span class="line">Method method = c.getMethod(<span class="string">"sleep"</span>, String.class,<span class="keyword">int</span>.class,<span class="keyword">double</span>.class);</span><br><span class="line"><span class="comment">//调用Method类的方法invoke运行sleep方法</span></span><br><span class="line">method.invoke(obj, <span class="string">"休眠"</span>,<span class="number">100</span>,<span class="number">888.99</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="J-反射与泛型擦除"><a href="#J-反射与泛型擦除" class="headerlink" title="* J. 反射与泛型擦除"></a>* J. 反射与泛型擦除</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">* a. 使用情况</span><br><span class="line">* 我们可以通过<span class="string">"反射技术"</span>，来完成向<span class="string">"有泛型约束"</span>的集合中，添加<span class="string">"任意类型"</span>的元素：</span><br><span class="line">例如：<span class="string">"在泛型为String的集合里，添加Integer的数据"</span></span><br><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">list.add(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">* b. 能用泛型擦除的理论</span><br><span class="line">伪泛型：<span class="string">"在编译后的.class文件"</span>里面是<span class="string">"没有"</span><span class="string">"泛型约束"</span>的，这种现象我们称为<span class="string">"泛型的擦除"</span>。</span><br><span class="line"></span><br><span class="line">ArrayList&lt;T&gt;：ArrayList&lt;String&gt;或者ArrayList&lt;Integer&gt; <span class="string">"擦除后ArrayList的类型变成Object"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="string">"泛型擦除后类型为变为 T 的父类"</span> 。</span><br><span class="line">如：ArrayList&lt;T extends Comaparable&gt; <span class="string">"擦除后ArrayList的类型变成Comaparable"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"用反射的方法绕过编译，得到Class文件对象，直接调用add方法"</span>。</span><br><span class="line">即可向<span class="string">"有泛型约束"</span>的集合中，添加<span class="string">"任意类型"</span>的元素。</span><br><span class="line"></span><br><span class="line">* c. 反射泛型擦除的代码演示</span><br><span class="line"><span class="keyword">package</span> cn.itcast.demo2;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *   定义集合类,泛型String</span></span><br><span class="line"><span class="comment"> *   要求向集合中添加Integer类型</span></span><br><span class="line"><span class="comment"> *   </span></span><br><span class="line"><span class="comment"> *   反射方式,获取出集合ArrayList类的class文件对象</span></span><br><span class="line"><span class="comment"> *   通过class文件对象,调用add方法</span></span><br><span class="line"><span class="comment"> *   </span></span><br><span class="line"><span class="comment"> *   对反射调用方法是否理解</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    ArrayList&lt;String&gt; alist =<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    alist.add(<span class="string">"Hust"</span>);</span><br><span class="line">    alist.add(<span class="string">"哈喽"</span>);</span><br><span class="line">    <span class="comment">//反射方式,获取出集合ArrayList类的class文件对象</span></span><br><span class="line">    Class c=alist.getClass();</span><br><span class="line">    Method method = c.getMethod(<span class="string">"add"</span>, Object.class);</span><br><span class="line">    <span class="comment">//使用invoke运行ArrayList方法add</span></span><br><span class="line">    method.invoke(alist,<span class="number">10909092</span>);</span><br><span class="line">    method.invoke(alist,<span class="keyword">new</span> Person(<span class="string">"李强"</span>,<span class="number">21</span>));</span><br><span class="line">    method.invoke(alist,<span class="number">123.67676</span>);</span><br><span class="line">    System.out.println(alist);</span><br><span class="line">    <span class="comment">//获取alist中的Person对象</span></span><br><span class="line">    Object oj =alist.get(<span class="number">3</span>);</span><br><span class="line">    Person p = (Person) oj;</span><br><span class="line">    System.out.println(p.name +<span class="string">"&gt;&gt;&gt;"</span>+ p.age);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="K-反射通过配置文件来决定运行的步骤"><a href="#K-反射通过配置文件来决定运行的步骤" class="headerlink" title="* K. 反射通过配置文件来决定运行的步骤"></a>* K. 反射通过配置文件来决定运行的步骤</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">* a. 操作依据</span><br><span class="line">通过配置文件得到类名和要运行的方法名,用反射的操作类名得到对象和调用方法</span><br><span class="line">* b. 实现步骤:</span><br><span class="line"> *    <span class="number">1</span>. 准备配置文件,键值对</span><br><span class="line"> *    <span class="number">2</span>. IO流读取配置文件  Reader</span><br><span class="line"> *    <span class="number">3</span>. 文件中的键值对存储到集合中 Properties</span><br><span class="line"> *        集合保存的键值对,就是类名和方法名</span><br><span class="line"> *    <span class="number">4</span>. 反射获取指定类的<span class="class"><span class="keyword">class</span>文件对象</span></span><br><span class="line"><span class="class"> *    5. <span class="title">class</span>文件对象,获取指定的方法</span></span><br><span class="line"><span class="class"> *    6. 运行方法</span></span><br><span class="line"><span class="class">* <span class="title">c</span>. 代码演示</span></span><br><span class="line"><span class="class">代码：</span></span><br><span class="line"><span class="class"><span class="title">package</span> <span class="title">cn</span>.<span class="title">itcast</span>.<span class="title">demo3</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  调用Person方法,调用Student方法,调用Worker方法</span></span><br><span class="line"><span class="string"> *  类不清楚,方法也不清楚</span></span><br><span class="line"><span class="string"> *  通过配置文件实现此功能</span></span><br><span class="line"><span class="string"> *    运行的类名和方法名字,以键值对的形式,写在文本中</span></span><br><span class="line"><span class="string"> *    运行哪个类,读取配置文件即可</span></span><br><span class="line"><span class="string"> *  实现步骤:</span></span><br><span class="line"><span class="string"> *    1. 准备配置文件,键值对</span></span><br><span class="line"><span class="string"> *    2. IO流读取配置文件  Reader</span></span><br><span class="line"><span class="string"> *    3. 文件中的键值对存储到集合中 Properties</span></span><br><span class="line"><span class="string"> *        集合保存的键值对,就是类名和方法名</span></span><br><span class="line"><span class="string"> *    4. 反射获取指定类的class文件对象</span></span><br><span class="line"><span class="string"> *    5. class文件对象,获取指定的方法</span></span><br><span class="line"><span class="string"> *    6. 运行方法</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">//IO流读取配置文件</span></span><br><span class="line">FileReader r = <span class="keyword">new</span> FileReader(<span class="string">"config.properties"</span>);</span><br><span class="line"><span class="comment">//创建集合对象</span></span><br><span class="line">Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line"><span class="comment">//调用集合方法load,传递流对象</span></span><br><span class="line">pro.load(r);</span><br><span class="line">r.close();</span><br><span class="line"><span class="comment">//通过键获取值</span></span><br><span class="line">String className = pro.getProperty(<span class="string">"className"</span>);</span><br><span class="line">String methodName = pro.getProperty(<span class="string">"methodName"</span>);</span><br><span class="line"><span class="comment">//反射获取指定类的class文件对象</span></span><br><span class="line">Class c = Class.forName(className);</span><br><span class="line">Object obj = c.newInstance();</span><br><span class="line"><span class="comment">//获取指定的方法名</span></span><br><span class="line">Method method = c.getMethod(methodName);</span><br><span class="line">method.invoke(obj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">config.properties配置文件：</span><br><span class="line">#className=cn.itcast.demo3.Student</span><br><span class="line">#methodName=study</span><br><span class="line">className=cn.itcast.demo3.Person</span><br><span class="line">methodName=eat</span><br><span class="line">#className=cn.itcast.demo3.Worker</span><br><span class="line">#methodName=job</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">如何获取.Class文件对象</span><br><span class="line"><span class="number">1</span>, 通过<span class="string">"Object类 getClass()方法"</span>获取 Class对象 </span><br><span class="line"><span class="number">2</span>, 通过<span class="string">"类名.class 方式"</span> 获取 Class对象</span><br><span class="line"><span class="number">3</span>, 通过反射的方式, <span class="string">" Class.forName(String classname) 获取Class对象"</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Class&lt;?&gt; forName(String className)<span class="keyword">throws</span> ClassNotFoundException</span><br><span class="line">返回与带有给定字符串名的类或接口相关联的 Class 对象</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">通过反射， 获取类中的构造方法，并完成对象的创建</span><br><span class="line">获取指定的构造方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;T&gt; <span class="title">getConstructor</span><span class="params">(Class&lt;?&gt;... parameterTypes)</span></span></span><br><span class="line"><span class="function">获取指定的<span class="keyword">public</span>修饰的构造方法 </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;T&gt; <span class="title">getDeclaredConstructor</span><span class="params">(Class&lt;?&gt;... parameterTypes)</span></span></span><br><span class="line"><span class="function">获取指定的构造方法，包含私有的</span></span><br><span class="line"><span class="function">获取所有的构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;?&gt;[] <span class="title">getConstructors</span><span class="params">()</span> 获取所有的<span class="keyword">public</span> 修饰的构造方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Constructor&lt;?&gt;[] <span class="title">getDeclaredConstructors</span><span class="params">()</span> 获取所有的构造方法，包含私有的</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">通过反射， 获取类中的构造方法，并完成对象的创建</span></span><br><span class="line"><span class="function">步骤：</span></span><br><span class="line"><span class="function">1，获取字节码文件对象</span></span><br><span class="line"><span class="function">2,通过字节码文件对象 ，获取到指定的构造方法 <span class="title">getConstructor</span><span class="params">(参数)</span></span>;</span><br><span class="line"><span class="number">3</span>,通过构造方法，创建对象 <span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">(Object... initargs)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">私有构造方法，创建对象</span></span><br><span class="line"><span class="function">1，获取字节码文件对象</span></span><br><span class="line"><span class="function">2,通过字节码文件对象 ，获取到指定的构造方法</span></span><br><span class="line"><span class="function"><span class="title">getDeclaredConstructor</span> <span class="params">(参数)</span></span>;</span><br><span class="line"><span class="number">3</span>,暴力访问 </span><br><span class="line">con.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"><span class="number">4</span>,通过构造方法，创建对象</span><br><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">newInstance</span><span class="params">(Object... initargs)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">通过反射，获取Class文件中的方法</span></span><br><span class="line"><span class="function">获取指定的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method <span class="title">getMethod</span><span class="params">(String name, Class&lt;?&gt;... parameterTypes)</span></span></span><br><span class="line"><span class="function">获取指定的<span class="keyword">public</span>方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method <span class="title">getDeclaredMethod</span><span class="params">(String name, Class&lt;?&gt;... parameterTypes)</span></span></span><br><span class="line"><span class="function">获取指定的任意方法，包含私有的</span></span><br><span class="line"><span class="function">获取所有的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method[] <span class="title">getMethods</span><span class="params">()</span> 获取本类与父类中所有<span class="keyword">public</span> 修饰的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method[] <span class="title">getDeclaredMethods</span><span class="params">()</span>获取本类中所有的方法，包含私有的</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">通过反射，调用方法</span></span><br><span class="line"><span class="function">步骤：</span></span><br><span class="line"><span class="function">1，获取Class对象</span></span><br><span class="line"><span class="function">2,获取构造方法，创建对象</span></span><br><span class="line"><span class="function">3,获取指定的<span class="keyword">public</span>方法</span></span><br><span class="line"><span class="function">4,执行方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object obj, Object... args)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">私有方法的调用：</span></span><br><span class="line"><span class="function"> 1，获取Class对象</span></span><br><span class="line"><span class="function"> 2,获取构造方法，创建对象</span></span><br><span class="line"><span class="function"> 3,获取指定的<span class="keyword">private</span>方法</span></span><br><span class="line"><span class="function"> 4,开启暴力访问</span></span><br><span class="line"><span class="function"> m5.<span class="title">setAccessible</span><span class="params">(<span class="keyword">true</span>)</span></span>;</span><br><span class="line"> <span class="number">5</span>,执行方法</span><br><span class="line"> <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object obj, Object... args)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">通过反射，获取成员变量<span class="params">(字段)</span></span></span><br><span class="line"><span class="function">获取指定的成员变量</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Field <span class="title">getField</span><span class="params">(String name)</span> 获取<span class="keyword">public</span>修饰的成员变量</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Field <span class="title">getDeclaredField</span><span class="params">(String name)</span> 获取任意的成员变量，包含私有</span></span><br><span class="line"><span class="function">获取所有的成员变量</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Field[] <span class="title">getFields</span><span class="params">()</span> 获取所有<span class="keyword">public</span>修饰的成员变量</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Field[] <span class="title">getDeclaredFields</span><span class="params">()</span> 获取司所有的成员变量，包含私有</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">通过反射，获取成员 变量，并赋值使用</span></span><br><span class="line"><span class="function">  步骤：</span></span><br><span class="line"><span class="function">  1，获取字节码文件对象</span></span><br><span class="line"><span class="function">  2,获取构造方法，创建对象</span></span><br><span class="line"><span class="function">  3,获取指定的成员变量</span></span><br><span class="line"><span class="function">  4,对成员变量赋值\获取值操作</span></span><br><span class="line"><span class="function">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(Object obj,  Object value)</span> 赋值</span></span><br><span class="line"><span class="function">  <span class="keyword">public</span> Object <span class="title">get</span><span class="params">(Object obj)</span> 获取值</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">私有成员变量的使用</span></span><br><span class="line"><span class="function">   步骤：</span></span><br><span class="line"><span class="function">  1，获取字节码文件对象</span></span><br><span class="line"><span class="function">  2,获取构造方法，创建对象</span></span><br><span class="line"><span class="function">  3,获取指定的成员变量</span></span><br><span class="line"><span class="function">  4,开启暴力访问</span></span><br><span class="line"><span class="function">  5,对成员变量赋值\获取值操作</span></span><br><span class="line"><span class="function">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(Object obj,  Object value)</span> 赋值</span></span><br><span class="line"><span class="function">  <span class="keyword">public</span> Object <span class="title">get</span><span class="params">(Object obj)</span> 获取值</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297948/samples/java%20files/photo-1544728344-7efa025e5603.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;1、类加载器&lt;br&gt;2、反射构造方法&lt;br&gt;3、反射成员变量&lt;br&gt;4、反射成员方法&lt;br&gt;5、反射配置文件运行类中的方法 &lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://leesen998.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="java" scheme="https://leesen998.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记——基础30(网络编程)</title>
    <link href="https://leesen998.github.io/2016/12/01/day32%E7%AC%94%E8%AE%B0%20/"/>
    <id>https://leesen998.github.io/2016/12/01/day32笔记 /</id>
    <published>2016-12-01T11:48:29.000Z</published>
    <updated>2019-01-23T13:55:42.156Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297959/samples/java%20files/photo-1544833021-2f0c8afb7fd6.jpg" alt="" style="width:100%"></p><p>1、网络三要素及传输协议<br>2、实现UDP协议的发送端和接收端<br>3、实现TCP协议的客户端和服务器<br>4、TCP上传文件案例</p><a id="more"></a><h3 id="01网络模型"><a href="#01网络模型" class="headerlink" title="01网络模型"></a>01网络模型</h3><p>*A:网络模型<br> TCP/IP协议中的四层分别是应用层、传输层、网络层和链路层，每层分别负责不同的通信功能，接下来针对这四层进行详细地讲解。<br>   <strong>链路层</strong>：<strong>链路层是用于定义物理传输通道</strong>，通常是对某些网络连接设备的驱动协议，例如针对光纤、网线提供的驱动。<br>   <strong>网络层</strong>：网络层是整个TCP/IP协议的核心，它<strong>主要用于将传输的数据进行分组，将分组数据发送到目标计算机或者网络</strong>。<br>   <strong>传输层</strong>：<strong>主要使网络程序进行通信，在进行网络通信时，可以采用TCP协议，也可以采用UDP协议。</strong><br>   <strong>应用层</strong>：主要<strong>负责应用程序的协议，例如HTTP协议、FTP协议</strong>等。<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548162671/samples/java%20files/TCP_IP.png" alt=""></p><h3 id="02IP地址"><a href="#02IP地址" class="headerlink" title="02IP地址"></a>02IP地址</h3><p>*A:IP地址<br>  在TCP/IP协议中，这个标识号就是IP地址，它可以唯一标识一台计算机，<br>  目前，IP地址广泛使用的版本是IPv4，它是由4个字节大小的二进制数来表示，如：00001010000000000000000000000001。<br>  由于二进制形式表示的IP地址非常不便记忆和处理，因此通常会将IP地址写成十进制的形式，<br>  每个字节用一个十进制数字(0-255)表示，数字间用符号“.”分开，如 “192.168.1.100”<br> <strong> 127.0.0.1 为本地主机地址(本地回环地址)</strong></p><h3 id="03端口号"><a href="#03端口号" class="headerlink" title="03端口号"></a>03端口号</h3><p>*A:端口号<br>通过IP地址可以连接到指定计算机，但如果想访问目标计算机中的某个应用程序，还需要指定端口号。<br>在计算机中，不同的应用程序是通过端口号区分的。<br><strong>端口号是用两个字节（16位的二进制数）表示的，它的取值范围是0~65535，</strong><br>其中，<strong>0~1023之间的端口号用于一些知名的网络服务和应用</strong>，<strong>用户的普通应用程序需要使用1024以上的端口号，从而避免端口号被另外一个应用或服务所占用</strong><br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548163129/samples/java%20files/ip.jpg" alt=""></p><h3 id="04InetAddress类"><a href="#04InetAddress类" class="headerlink" title="04InetAddress类"></a>04InetAddress类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">*A:InetAddress类</span><br><span class="line">   *</span><br><span class="line">    *  表示互联网中的IP地址</span><br><span class="line">    *    java.net.InetAddress</span><br><span class="line">    *  静态方法</span><br><span class="line">    *    <span class="function"><span class="keyword">static</span> InetAddress  <span class="title">getLocalHost</span><span class="params">()</span>   LocalHost"本地主机"</span></span><br><span class="line"><span class="function">    *    返回本地主机,返回值InetAddress对象</span></span><br><span class="line"><span class="function">    *    </span></span><br><span class="line"><span class="function">    *    <span class="keyword">static</span> InetAddress <span class="title">getByName</span><span class="params">(String hostName)</span>传递主机名,获取IP地址对象</span>;</span><br><span class="line">    *    </span><br><span class="line">    *  非静态方法</span><br><span class="line">    *     <span class="function">String <span class="title">getHoustAddress</span><span class="params">()</span>获取主机IP地址</span></span><br><span class="line"><span class="function">    *     String <span class="title">getHoustName</span><span class="params">()</span>获取主机名</span></span><br><span class="line"><span class="function">    *    </span></span><br><span class="line"><span class="function">    *</span></span><br><span class="line"><span class="function">   <span class="keyword">public</span> class InetAddressDemo </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line">      function_1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    *</span><br><span class="line">     * <span class="function"><span class="keyword">static</span> InetAddress <span class="title">getByName</span><span class="params">(String hostName)</span>传递主机名,获取IP地址对象</span></span><br><span class="line"><span class="function">     *</span></span><br><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function_1</span><span class="params">()</span><span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line">      InetAddress inet = InetAddress.getByName(<span class="string">"www.baidu.com"</span>);</span><br><span class="line">      System.out.println(inet);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    *</span><br><span class="line">     *  <span class="function"><span class="keyword">static</span> InetAddress  <span class="title">getLocalHost</span><span class="params">()</span>   LocalHost本地主机</span></span><br><span class="line"><span class="function">     *</span></span><br><span class="line"><span class="function">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function</span><span class="params">()</span> <span class="keyword">throws</span> UnknownHostException</span>&#123;</span><br><span class="line">      InetAddress inet = InetAddress.getLocalHost();</span><br><span class="line">      <span class="comment">//输出结果就是主机名,和 IP地址</span></span><br><span class="line">      System.out.println(inet.toString());</span><br><span class="line">      </span><br><span class="line">      String ip = inet.getHostAddress();</span><br><span class="line">      String name = inet.getHostName();</span><br><span class="line">      System.out.println(ip+<span class="string">"   "</span>+name);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/*String host = inet.toString();</span></span><br><span class="line"><span class="comment">      String[] str = host.split("/");</span></span><br><span class="line"><span class="comment">      for(String s : str)&#123;</span></span><br><span class="line"><span class="comment">        System.out.println(s);</span></span><br><span class="line"><span class="comment">      &#125;*/</span></span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="05UDP协议"><a href="#05UDP协议" class="headerlink" title="05UDP协议"></a>05UDP协议</h3><p>A:UDP协议<br> a:UDP协议概述:<br>  <strong>UDP是无连接通信协议，即在数据传输时，数据的发送端和接收端不建立逻辑连接</strong>。<br>  简单来说，当一台计算机向另外一台计算机发送数据时，<strong>发送端不会确认接收端是否存在，就会发出数据</strong>，<strong>同样接收端在收到数据时，也不会向发送端反馈是否收到数据。</strong><br> b:UDP协议特点:<br>  <strong>由于使用UDP协议消耗资源小，通信效率高，所以通常都会用于音频、视频和普通数据的传输例如视频会议都使用UDP协议</strong>，<br>  因为这种情况即使偶尔丢失一两个数据包，也不会对接收结果产生太大影响。</p><h3 id="06TCP协议"><a href="#06TCP协议" class="headerlink" title="06TCP协议"></a>06TCP协议</h3><p>*A:TCP协议<br><strong>TCP协议是面向连接的通信协议，即在传输数据前先在发送端和接收端建立逻辑连接</strong>，然后再传输数据，它提供了两台计算机之间<strong>可靠无差错的数据传输。</strong><br>在TCP连接中必须要明确客户端与服务器端，<br>  由客户端向服务端发出连接请求，每次连接的创建都需要经过“三次握手”。<br>  <strong>第一次握手，客户端向服务器端发出连接请求，等待服务器确认<br>  第二次握手，服务器端向客户端回送一个响应，通知客户端收到了连接请求<br>  第三次握手，客户端再次向服务器端发送确认信息，确认连接</strong></p><h3 id="07-UDP-数据包和发送对象介绍"><a href="#07-UDP-数据包和发送对象介绍" class="headerlink" title="07 UDP:数据包和发送对象介绍"></a>07 UDP:数据包和发送对象介绍</h3><h4 id="A-数据包和发送对象介绍"><a href="#A-数据包和发送对象介绍" class="headerlink" title="*A:数据包和发送对象介绍:"></a>*A:数据包和发送对象介绍:</h4><p><strong>DatagramPacket数据包的作用就如同是“集装箱”</strong>，<br>   可以<strong>将发送端或者接收端的数据封装</strong>起来。然而运输货物只有“集装箱”是不够的，还需要有码头。<br>   在程序中需要实现通信只有DatagramPacket数据包也同样不行，为此JDK中提供的一个DatagramSocket类。</p><p>   <strong>DatagramSocket类的作用就类似于“码头”</strong>，<strong>使用这个类的实例对象就可以发送和接收DatagramPacket数据包</strong></p><p><strong>DatagramPacket:封装数据</strong></p><p><strong>DatagramSocket:发送DatagramPacket, 即传输数据</strong></p><h4 id="B-DatagramPacket类："><a href="#B-DatagramPacket类：" class="headerlink" title="*B: DatagramPacket类："></a>*B: DatagramPacket类：</h4><p>在创建<strong>发送端和接收端</strong>的DatagramPacket对象时，使用的<strong>构造方法有所不同：</strong></p><p>使用该构造方法在创建DatagramPacket对象时，指定了<strong>封装数据的字节数组和数据的大小，没有指定IP地址和端口号</strong>。很明显，<strong>这样的对象只能用于接收端，不能用于发送端。</strong>因为发送端一定要明确指出数据的目的地(ip地址和端口号)，而接收端不需要明确知道数据的来源，只需要接收到数据即可。<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548209632/samples/java%20files/gh11.png" alt=""> </p><p>———————————————————————————————————————————————————————————</p><p>使用该构造方法在创建DatagramPacket对象时，不仅<strong>指定了封装数据的字节数组和数据的大小，还指定了数据包的目标IP地址（addr）和端口号（port）。该对象通常用于发送端，</strong>因为在发送数据时必须指定接收端的IP地址和端口号，就好像发送货物的集装箱上面必须标明接收人的地址一样。<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548209599/samples/java%20files/22.png" alt=""></p><p>———————————————————————————————————————————————————————————<br>上面我们讲解了DatagramPacket的构造方法，接下来对DatagramPacket类中的常用方法进行详细地讲解，如下表所示。<br> <img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548209599/samples/java%20files/33.png" alt=""></p><h4 id="C-DatagramSocket类："><a href="#C-DatagramSocket类：" class="headerlink" title="*C: DatagramSocket类："></a>*C: DatagramSocket类：</h4><p>DatagramSocket类的作用就<strong>类似于码头</strong>，<strong>使用这个类的实例对象就可以发送和接收DatagramPacket数据包</strong>，发送数据的过程如下图所示。<br> <img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548209599/samples/java%20files/44.jpg" alt=""></p><p>在创建发送端和接收端的DatagramSocket对象时，使用的构造方法也有所不同：</p><p>该构造方法用于<strong>创建发送端</strong>的DatagramSocket对象，在创建DatagramSocket对象时，<strong>并没有指定端口号</strong>，此时，<strong>系统会分配一个没有被其它网络程序所使用的端口号。</strong><br> <img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548209599/samples/java%20files/55.png" alt=""><br>———————————————————————————————————————————————————————————<br>该构造方法<strong>既可用于创建接收端</strong>的DatagramSocket对象，<strong>又可以创建发送端</strong>的DatagramSocket对象，在<strong>创建接收端</strong>的DatagramSocket对象时，<strong>必须要指定一个端口号</strong>，这样就<strong>可以监听指定的端口。</strong><br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548209599/samples/java%20files/66.png" alt=""><br>———————————————————————————————————————————————————————————<br>上面我们讲解了DatagramSocket的构造方法，接下来对DatagramSocket类中的常用方法进行详细地讲解。<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548209599/samples/java%20files/77.png" alt=""></p><h3 id="08UDP发送端"><a href="#08UDP发送端" class="headerlink" title="08UDP发送端"></a>08UDP发送端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">*A:UDP发送端</span><br><span class="line">     *</span><br><span class="line">       *  实现UDP协议的发送端:</span><br><span class="line">       *    实现封装数据的类 <span class="string">"java.net.DatagramPacket "</span> <span class="string">"将你的数据包装"</span></span><br><span class="line">       *    </span><br><span class="line">       *    实现数据传输的类 <span class="string">"java.net.DatagramSocket "</span> <span class="string">"将数据包发出去"</span></span><br><span class="line">       *    </span><br><span class="line">       *  实现步骤:</span><br><span class="line">       *    <span class="number">1</span>. 创建DatagramPacket对象,<span class="string">"封装数据"</span>, <span class="string">"接收的ip地址和端口"</span></span><br><span class="line">       *    <span class="number">2</span>. 创建DatagramSocket</span><br><span class="line">       *    <span class="number">3</span>. 调用DatagramSocket类<span class="string">"方法send"</span>,发送数据包</span><br><span class="line">       *    <span class="number">4</span>. 关闭资源</span><br><span class="line">       *                                                                                     <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">       *    DatagramPacket构造方法:</span></span><br><span class="line"><span class="function">       *      <span class="title">DatagramPacket</span><span class="params">(<span class="keyword">byte</span>[] buf, <span class="keyword">int</span> length, InetAddress address, <span class="keyword">int</span> port)</span> </span></span><br><span class="line"><span class="function">       *      </span></span><br><span class="line"><span class="function">       *    DatagramSocket构造方法:</span></span><br><span class="line"><span class="function">       *      <span class="title">DatagramSocket</span><span class="params">()</span>空参数</span></span><br><span class="line"><span class="function">       *      方法: coid <span class="title">send</span><span class="params">(DatagramPacket d)</span></span></span><br><span class="line"><span class="function">       *      </span></span><br><span class="line"><span class="function">       *</span></span><br><span class="line"><span class="function">      <span class="keyword">public</span> class UDPSend </span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">         <span class="comment">//创建数据包对象,封装要发送的数据,接收端IP,端口</span></span><br><span class="line">         <span class="keyword">byte</span>[] date = <span class="string">"你好UDP"</span>.getBytes();</span><br><span class="line">         <span class="comment">//创建InetAddress对象,封装自己的IP地址</span></span><br><span class="line">         InetAddress inet = InetAddress.getByName(<span class="string">"127.0.0.1"</span>);</span><br><span class="line">         DatagramPacket dp = <span class="keyword">new</span> DatagramPacket(date, date.length, inet,<span class="number">6000</span>);</span><br><span class="line">         <span class="comment">//创建DatagramSocket对象,数据包的发送和接收对象</span></span><br><span class="line">         DatagramSocket ds = <span class="keyword">new</span> DatagramSocket();</span><br><span class="line">         <span class="comment">//调用ds对象的方法send,发送数据包</span></span><br><span class="line">         ds.send(dp);</span><br><span class="line">         <span class="comment">//关闭资源</span></span><br><span class="line">         ds.close();</span><br><span class="line">       &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548209601/samples/java%20files/88.png" alt=""></p><h3 id="09UDP接收端"><a href="#09UDP接收端" class="headerlink" title="09UDP接收端"></a>09UDP接收端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">*A:UDP接收端</span><br><span class="line">       *</span><br><span class="line">        *  实现UDP接收端</span><br><span class="line">        *    实现封装数据包 java.net.DatagramPacket <span class="string">"将数据接收"</span></span><br><span class="line">        *    实现输出传输     java.net.DatagramSocket <span class="string">"接收数据包"</span></span><br><span class="line">        *    </span><br><span class="line">        *  实现步骤:</span><br><span class="line">        *     <span class="number">1</span>. <span class="string">"创建DatagramSocket接收端对象"</span>,<span class="string">"必须绑定端口号"</span></span><br><span class="line">        *         要和发送端端口号一致</span><br><span class="line">        *     <span class="number">2</span>. 创建字节数组,接收发来的数据</span><br><span class="line">        *     <span class="number">3</span>. 创建数据包对象DatagramPacket</span><br><span class="line">        *     <span class="number">4</span>. 调用DatagramSocket对象方法</span><br><span class="line">        *       <span class="function"><span class="keyword">void</span> <span class="title">receive</span><span class="params">(DatagramPacket dp)</span>接收数据,数据放在数据包中</span></span><br><span class="line"><span class="function">        *     5. 拆包</span></span><br><span class="line"><span class="function">        *          a.发送的IP地址</span></span><br><span class="line"><span class="function">        *            数据包对象DatagramPacket方法:</span></span><br><span class="line"><span class="function">        *             InetAddress <span class="title">getAddress</span><span class="params">()</span>获取的是发送端的IP地址对象</span></span><br><span class="line"><span class="function">        *            返回值是InetAddress对象</span></span><br><span class="line"><span class="function">        *            </span></span><br><span class="line"><span class="function">        *          b.接收到的字节个数</span></span><br><span class="line"><span class="function">        *            数据包对象DatagramPacket方法  <span class="keyword">int</span> <span class="title">getLength</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        *            </span></span><br><span class="line"><span class="function">        *          c.发送方的端口号</span></span><br><span class="line"><span class="function">        *            数据包对象DatagramPacket方法 <span class="keyword">int</span> <span class="title">getPort</span><span class="params">()</span>发送端口</span></span><br><span class="line"><span class="function">        *     6. 关闭资源</span></span><br><span class="line"><span class="function">        *</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">       <span class="keyword">public</span> class UDPReceive </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">          <span class="comment">//创建数据包传输对象DatagramSocket 绑定端口号</span></span><br><span class="line">          DatagramSocket ds = <span class="keyword">new</span> DatagramSocket(<span class="number">6000</span>);</span><br><span class="line">          <span class="comment">//创建字节数组</span></span><br><span class="line">          <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">          <span class="comment">//创建数据包对象,传递字节数组</span></span><br><span class="line">          DatagramPacket dp = <span class="keyword">new</span> DatagramPacket(data, data.length);</span><br><span class="line">          <span class="comment">//调用ds对象的方法receive传递数据包</span></span><br><span class="line">          ds.receive(dp);</span><br><span class="line">          </span><br><span class="line">      </span><br><span class="line">        &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="10UDP接收端的拆包"><a href="#10UDP接收端的拆包" class="headerlink" title="10UDP接收端的拆包"></a>10UDP接收端的拆包</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">*A:UDP接收端的拆包 </span><br><span class="line">    </span><br><span class="line">    *</span><br><span class="line">     *  实现UDP接收端</span><br><span class="line">     *    实现封装数据包 java.net.DatagramPacket 将数据接收</span><br><span class="line">     *    实现输出传输     java.net.DatagramSocket 接收数据包</span><br><span class="line">     *    </span><br><span class="line">     *  实现步骤:</span><br><span class="line">     *     <span class="number">1</span>. 创建DatagramSocket对象,绑定端口号</span><br><span class="line">     *         要和发送端端口号一致</span><br><span class="line">     *     <span class="number">2</span>. 创建字节数组,接收发来的数据</span><br><span class="line">     *     <span class="number">3</span>. 创建数据包对象DatagramPacket</span><br><span class="line">     *     <span class="number">4</span>. 调用DatagramSocket对象方法</span><br><span class="line">     *        <span class="function"><span class="keyword">void</span> <span class="title">receive</span><span class="params">(DatagramPacket dp)</span>接收数据,数据放在数据包中</span></span><br><span class="line"><span class="function">     *     5. 拆包</span></span><br><span class="line"><span class="function">     *          发送的IP地址</span></span><br><span class="line"><span class="function">     *            数据包对象DatagramPacket方法<span class="title">getAddress</span><span class="params">()</span>获取的是发送端的IP地址对象</span></span><br><span class="line"><span class="function">     *            返回值是InetAddress对象</span></span><br><span class="line"><span class="function">     *          接收到的字节个数</span></span><br><span class="line"><span class="function">     *            数据包对象DatagramPacket方法 <span class="title">getLength</span><span class="params">()</span></span></span><br><span class="line"><span class="function">     *          发送方的端口号</span></span><br><span class="line"><span class="function">     *            数据包对象DatagramPacket方法 <span class="title">getPort</span><span class="params">()</span>发送端口</span></span><br><span class="line"><span class="function">     *     6. 关闭资源</span></span><br><span class="line"><span class="function">     *</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    <span class="keyword">public</span> class UDPReceive </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建数据包传输对象DatagramSocket 绑定端口号</span></span><br><span class="line">        DatagramSocket ds = <span class="keyword">new</span> DatagramSocket(<span class="number">6000</span>);</span><br><span class="line">        <span class="comment">//创建字节数组</span></span><br><span class="line">        <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="comment">//创建数据包对象,传递字节数组</span></span><br><span class="line">        DatagramPacket dp = <span class="keyword">new</span> DatagramPacket(data, data.length);</span><br><span class="line">        <span class="comment">//调用ds对象的方法receive传递数据包</span></span><br><span class="line">        ds.receive(dp);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取发送端的IP地址对象</span></span><br><span class="line">        String ip=dp.getAddress().getHostAddress();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取发送的端口号</span></span><br><span class="line">        <span class="keyword">int</span> port = dp.getPort();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取接收到的字节个数</span></span><br><span class="line">        <span class="keyword">int</span> length = dp.getLength();</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(data,<span class="number">0</span>,length)+<span class="string">"..."</span>+ip+<span class="string">":"</span>+port);</span><br><span class="line">        ds.close();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="11键盘输入的聊天"><a href="#11键盘输入的聊天" class="headerlink" title="11键盘输入的聊天"></a>11键盘输入的聊天</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">*A:键盘输入的聊天</span><br><span class="line">    *a:发送端:</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">       * 实现UDP发送,键盘输入的形式</span></span><br><span class="line"><span class="comment">       * 输入完毕,发送给接收端      </span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPSend</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">          Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">          DatagramSocket ds = <span class="keyword">new</span> DatagramSocket();</span><br><span class="line">          InetAddress inet = InetAddress.getByName(<span class="string">"127.0.0.1"</span>);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">          String message = sc.nextLine();</span><br><span class="line">         <span class="keyword">if</span>(messege.equals(<span class="string">"bye"</span>))&#123;</span><br><span class="line">                System.out.println(<span class="string">"Bye!!!"</span>);</span><br><span class="line">                ds.close();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          <span class="keyword">byte</span>[] date = message.getBytes();</span><br><span class="line">          DatagramPacket dp = <span class="keyword">new</span> DatagramPacket(date, date.length, inet,<span class="number">6000</span>);</span><br><span class="line">          ds.send(dp);</span><br><span class="line">          &#125;</span><br><span class="line">      </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">       <span class="comment">/*</span></span><br><span class="line"><span class="comment">        *  实现UDP接收端</span></span><br><span class="line"><span class="comment">        *  永不停歇的接收端</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPReceive</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">          <span class="comment">//创建数据包传输对象DatagramSocket 绑定端口号</span></span><br><span class="line">          DatagramSocket ds = <span class="keyword">new</span> DatagramSocket(<span class="number">6000</span>);</span><br><span class="line">          <span class="comment">//创建字节数组</span></span><br><span class="line">          <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">          <span class="comment">//创建数据包对象,传递字节数组</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">          DatagramPacket dp = <span class="keyword">new</span> DatagramPacket(data, data.length);</span><br><span class="line">          <span class="comment">//调用ds对象的方法receive传递数据包</span></span><br><span class="line">          ds.receive(dp);</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//获取发送端的IP地址对象</span></span><br><span class="line">          String ip=dp.getAddress().getHostAddress();</span><br><span class="line">          </span><br><span class="line">          <span class="comment">//获取发送的端口号</span></span><br><span class="line">          <span class="keyword">int</span> port = dp.getPort();</span><br><span class="line">   <span class="comment">//获取接收到的字节个数</span></span><br><span class="line">          <span class="keyword">int</span> length = dp.getLength();</span><br><span class="line">  String rsmessege = <span class="keyword">new</span> String(data,<span class="number">0</span>,length);</span><br><span class="line">          <span class="keyword">if</span>(rsmessege.equals(<span class="string">"bye"</span>))&#123;</span><br><span class="line">                System.out.println(<span class="string">"Bye!!!"</span>);</span><br><span class="line">                ds.close();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          </span><br><span class="line">          System.out.println(rsmessege+<span class="string">"..."</span>+ip+<span class="string">":"</span>+port);</span><br><span class="line">          &#125;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="12TCP的客户端和服务器"><a href="#12TCP的客户端和服务器" class="headerlink" title="12TCP的客户端和服务器"></a>12TCP的客户端和服务器</h3><p>*A:TCP的客户端和服务器<br>TCP通信同UDP通信一样，都能实现两台计算机之间的通信，通信的两端都需要创建socket对象。<br>区别在于，UDP中只有发送端和接收端，不区分客户端与服务器端，计算机之间可以任意地发送数据。<br>而<strong>TCP通信是严格区分客户端与服务器端</strong>的，在通信时，<strong>必须先由客户端去连接服务器端才能实现通信，<br>服务器端不可以主动连接客户端，并且服务器端程序需要事先启动，等待客户端的连接。</strong></p><p>在JDK中提供了两个类用于实现TCP程序，<strong>一个是ServerSocket类，用于表示服务器端，一个是Socket类，用于表示客户端</strong>。</p><p>通信时，首<strong>先创建代表服务器端的ServerSocket对象</strong>，该对象相当于开启一个服务，并等待客户端的连接，<strong>然后创建代表客户端的Socket对象向服务器端发出连接请求</strong>，服务器端响应请求，两者建立连接开始通信。<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548227383/samples/java%20files/%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8.jpg" alt=""></p><h4 id="ServerSocket的构造方法"><a href="#ServerSocket的构造方法" class="headerlink" title="ServerSocket的构造方法"></a>ServerSocket的构造方法</h4><p>1、使用该构造方法在创建ServerSocket对象时，就可以<strong>将其绑定到一个指定的端口号上（参数port就是端口号）。</strong><br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548228122/samples/java%20files/s1.png" alt=""><br>———————————————————————————————————————————————————————————<br>2、ServerSocket的常用方法，如表所示。<br> <img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548228122/samples/java%20files/s2.png" alt=""><br>ServerSocket对象<strong>负责监听某台计算机的某个端口号</strong>，在创建ServerSocket对象后，<strong>需要继续调用该对象的accept()方法，接收来自客户端的请求</strong>。<br><strong>当执行了accept()方法之后，服务器端程序会发生【阻塞】，直到客户端发出连接请求</strong>，<strong>accept()方法才会返回一个Scoket对象用于和客户端实现通信</strong>，程序才能继续向下执行。</p><h4 id="Socket的常用构造方法"><a href="#Socket的常用构造方法" class="headerlink" title="Socket的常用构造方法"></a>Socket的常用构造方法</h4><p>1、使用该构造方法在创建Socket对象时，会根据参数<strong>去连接在指定地址和端口上运行的服务器程序</strong>，其中<strong>参数host接收的是一个字符串类型的IP地址。</strong><br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548228122/samples/java%20files/s3.png" alt=""></p><p>———————————————————————————————————————————————————————————<br>2、该方法在使用上与第二个构造方法类似，<strong>参数address用于接收一个InetAddress类型的对象，该对象用于封装一个IP地址</strong>。<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548228122/samples/java%20files/s4.png" alt=""><br>在以上Socket的构造方法中，<strong>最常用的是第一个构造方法</strong>。<br>———————————————————————————————————————————————————————————<br>3、在Socket类的常用方法中，getInputStream()和getOutStream()方法分别用于获取输入流和输出流。<strong>当客户端和服务端建立连接后，数据是以IO流的形式进行交互的，从而实现通信</strong>。<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548228123/samples/java%20files/rr.jpg" alt=""></p><p>接下来通过一张图来描述<strong>服务器端和客户端的数据传输</strong>，如下图所示。<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548228382/samples/java%20files/99.png" alt=""></p><h3 id="13TCP的客户端程序"><a href="#13TCP的客户端程序" class="headerlink" title="13TCP的客户端程序"></a>13TCP的客户端程序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">*A:TCP的客户端程序</span><br><span class="line">   *</span><br><span class="line">    *  实现TCP客户端,连接到服务器</span><br><span class="line">    *  和服务器实现数据交换</span><br><span class="line">    *  实现TCP客户端程序的类 java.net.Socket</span><br><span class="line">    *                                                                                         <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    *  构造方法:</span></span><br><span class="line"><span class="function">    *      <span class="title">Socket</span><span class="params">(String host, <span class="keyword">int</span> port)</span>  传递服务器IP和端口号</span></span><br><span class="line"><span class="function">    *      注意:构造方法只要运行,就会和服务器进行连接,连接失败,抛出异常</span></span><br><span class="line"><span class="function">    *      </span></span><br><span class="line"><span class="function">    *    OutputStream  <span class="title">getOutputStream</span><span class="params">()</span> 返回套接字的输出流</span></span><br><span class="line"><span class="function">    *      作用: 将数据输出,输出到服务器</span></span><br><span class="line"><span class="function">    *      </span></span><br><span class="line"><span class="function">    *    InputStream <span class="title">getInputStream</span><span class="params">()</span> 返回套接字的输入流</span></span><br><span class="line"><span class="function">    *      作用: 从服务器端读取数据</span></span><br><span class="line"><span class="function">    *      </span></span><br><span class="line"><span class="function">    *    客户端服务器数据交换,必须使用套接字对象Socket中的获取的IO流,自己new流,不行</span></span><br><span class="line"><span class="function">    *</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">   <span class="keyword">public</span> class TCPClient </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      <span class="comment">//创建Socket对象,连接服务器</span></span><br><span class="line">      Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>);</span><br><span class="line">      <span class="comment">//通过客户端的套接字对象Socket方法,获取字节输出流,将数据写向服务器</span></span><br><span class="line">      OutputStream out = socket.getOutputStream();</span><br><span class="line">      out.write(<span class="string">"服务器OK"</span>.getBytes()); </span><br><span class="line">      socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="14TCP的服务器程序以及accept方法"><a href="#14TCP的服务器程序以及accept方法" class="headerlink" title="14TCP的服务器程序以及accept方法"></a>14TCP的服务器程序以及accept方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">A:TCP的服务器程序accept方法</span><br><span class="line">    *</span><br><span class="line">     *  实现TCP服务器程序</span><br><span class="line">     *  表示服务器程序的类 java.net.ServerSocket</span><br><span class="line">     *  构造方法:</span><br><span class="line">     *    ServerSocket(<span class="keyword">int</span> port) 传递端口号</span><br><span class="line">     *  </span><br><span class="line">     *  <span class="string">"很重要的事情: 必须要获得客户端的套接字对象Socket"</span></span><br><span class="line">     *    <span class="function">Socket  <span class="title">accept</span><span class="params">()</span></span></span><br><span class="line"><span class="function">     *</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    <span class="keyword">public</span> class TCPServer </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">       ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">       <span class="comment">//调用服务器套接字对象中的方法accept() 获取客户端套接字对象</span></span><br><span class="line">       Socket socket = server.accept();</span><br><span class="line">       <span class="comment">//通过客户端套接字对象,socket获取字节输入流,读取的是客户端发送来的数据</span></span><br><span class="line">       InputStream in = socket.getInputStream();</span><br><span class="line">       <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">       <span class="keyword">int</span> len = in.read(data);</span><br><span class="line">       System.out.println(<span class="keyword">new</span> String(data,<span class="number">0</span>,len));  </span><br><span class="line">       socket.close();</span><br><span class="line">       server.close();</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="15TCP的服务器程序读取客户端数据"><a href="#15TCP的服务器程序读取客户端数据" class="headerlink" title="15TCP的服务器程序读取客户端数据"></a>15TCP的服务器程序读取客户端数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">A:TCP的服务器程序读取客户端数据</span><br><span class="line">     </span><br><span class="line">    *</span><br><span class="line">      *  实现TCP客户端,连接到服务器</span><br><span class="line">      *  和服务器实现数据交换</span><br><span class="line">      *  实现TCP客户端程序的类 java.net.Socket</span><br><span class="line">      *  </span><br><span class="line">      *  构造方法:</span><br><span class="line">      *      Socket(String host, <span class="keyword">int</span> port)  传递服务器IP和端口号</span><br><span class="line">      *      注意:构造方法只要运行,就会和服务器进行连接,连接失败,抛出异常</span><br><span class="line">      *      </span><br><span class="line">      *    <span class="function">OutputStream  <span class="title">getOutputStream</span><span class="params">()</span> 返回套接字的输出流</span></span><br><span class="line"><span class="function">      *      作用: 将数据输出,输出到服务器</span></span><br><span class="line"><span class="function">      *      </span></span><br><span class="line"><span class="function">      *    InputStream <span class="title">getInputStream</span><span class="params">()</span> 返回套接字的输入流</span></span><br><span class="line"><span class="function">      *      作用: 从服务器端读取数据</span></span><br><span class="line"><span class="function">      *      </span></span><br><span class="line"><span class="function">      *    客户端服务器数据交换,必须使用套接字对象Socket中的获取的IO流,自己new流,不行</span></span><br><span class="line"><span class="function">      *</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">     <span class="keyword">public</span> class TCPClient </span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">         <span class="comment">//创建Socket对象,连接服务器</span></span><br><span class="line">         Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>);</span><br><span class="line">         <span class="comment">//通过客户端的套接字对象Socket方法,获取字节输出流,将数据写向服务器</span></span><br><span class="line">         OutputStream out = socket.getOutputStream();</span><br><span class="line">         out.write(<span class="string">"服务器OK"</span>.getBytes());</span><br><span class="line">         socket.close();</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     *</span><br><span class="line">      *  实现TCP服务器程序</span><br><span class="line">      *  表示服务器程序的类 java.net.ServerSocket</span><br><span class="line">      *  构造方法:</span><br><span class="line">      *    ServerSocket(<span class="keyword">int</span> port) 传递端口号</span><br><span class="line">      *  </span><br><span class="line">      *  很重要的事情: 必须要获得客户端的套接字对象Socket</span><br><span class="line">      *    <span class="function">Socket  <span class="title">accept</span><span class="params">()</span></span></span><br><span class="line"><span class="function">      *</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">     <span class="keyword">public</span> class TCPServer </span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">         ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">         <span class="comment">//调用服务器套接字对象中的方法accept() 获取客户端套接字对象</span></span><br><span class="line">         Socket socket = server.accept();</span><br><span class="line">         <span class="comment">//通过客户端套接字对象,socket获取字节输入流,读取的是客户端发送来的数据</span></span><br><span class="line">         InputStream in = socket.getInputStream();</span><br><span class="line">         <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">         <span class="keyword">int</span> len = in.read(data);</span><br><span class="line">         System.out.println(<span class="keyword">new</span> String(data,<span class="number">0</span>,len));</span><br><span class="line">  socket.close();</span><br><span class="line">         server.close();</span><br><span class="line">       </span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h3 id="16TCP的服务器和客户端的数据交换"><a href="#16TCP的服务器和客户端的数据交换" class="headerlink" title="16TCP的服务器和客户端的数据交换"></a>16TCP的服务器和客户端的数据交换</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">A:TCP的服务器和客户端的数据交换</span><br><span class="line">     *</span><br><span class="line">      *  实现TCP客户端,连接到服务器</span><br><span class="line">      *  和服务器实现数据交换</span><br><span class="line">      *  实现TCP客户端程序的类 java.net.Socket</span><br><span class="line">      *                                                                                        <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">      *  构造方法:</span></span><br><span class="line"><span class="function">      *      <span class="title">Socket</span><span class="params">(String host, <span class="keyword">int</span> port)</span>  传递服务器IP和端口号</span></span><br><span class="line"><span class="function">      *      注意:构造方法只要运行,就会和服务器进行连接,连接失败,抛出异常</span></span><br><span class="line"><span class="function">      *      </span></span><br><span class="line"><span class="function">      *    OutputStream  <span class="title">getOutputStream</span><span class="params">()</span> 返回套接字的输出流</span></span><br><span class="line"><span class="function">      *      作用: 将数据输出,输出到服务器</span></span><br><span class="line"><span class="function">      *      </span></span><br><span class="line"><span class="function">      *    InputStream <span class="title">getInputStream</span><span class="params">()</span> 返回套接字的输入流</span></span><br><span class="line"><span class="function">      *      作用: 从服务器端读取数据</span></span><br><span class="line"><span class="function">      *      </span></span><br><span class="line"><span class="function">      *    客户端服务器数据交换,必须使用套接字对象Socket中的获取的IO流,自己new流,不行</span></span><br><span class="line"><span class="function">      *</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">     <span class="keyword">public</span> class TCPClient </span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">         <span class="comment">//创建Socket对象,连接服务器</span></span><br><span class="line">         Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>);</span><br><span class="line">         <span class="comment">//通过客户端的套接字对象Socket方法,获取字节输出流,将数据写向服务器</span></span><br><span class="line">         OutputStream out = socket.getOutputStream();</span><br><span class="line">         out.write(<span class="string">"服务器OK"</span>.getBytes());</span><br><span class="line">         </span><br><span class="line">         <span class="comment">//读取服务器发回的数据,使用socket套接字对象中的字节输入流</span></span><br><span class="line">         InputStream in = socket.getInputStream();</span><br><span class="line">         <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">         <span class="keyword">int</span> len = in.read(data);</span><br><span class="line">         System.out.println(<span class="keyword">new</span> String(data,<span class="number">0</span>,len));</span><br><span class="line">         </span><br><span class="line">         socket.close();</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/*</span></span><br><span class="line"><span class="comment">      *  实现TCP服务器程序</span></span><br><span class="line"><span class="comment">      *  表示服务器程序的类 java.net.ServerSocket</span></span><br><span class="line"><span class="comment">      *  构造方法:</span></span><br><span class="line"><span class="comment">      *    ServerSocket(int port) 传递端口号</span></span><br><span class="line"><span class="comment">      *  </span></span><br><span class="line"><span class="comment">      *  很重要的事情: 必须要获得客户端的套接字对象Socket</span></span><br><span class="line"><span class="comment">      *    Socket  accept()</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCPServer</span> </span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">         ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">         <span class="comment">//调用服务器套接字对象中的方法accept() 获取客户端套接字对象</span></span><br><span class="line">         Socket socket = server.accept();</span><br><span class="line">         <span class="comment">//通过客户端套接字对象,socket获取字节输入流,读取的是客户端发送来的数据</span></span><br><span class="line">         InputStream in = socket.getInputStream();</span><br><span class="line">         <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">         <span class="keyword">int</span> len = in.read(data);</span><br><span class="line">         System.out.println(<span class="keyword">new</span> String(data,<span class="number">0</span>,len));</span><br><span class="line">         </span><br><span class="line">         <span class="comment">//服务器向客户端回数据,字节输出流,通过客户端套接字对象获取字节输出流</span></span><br><span class="line">         OutputStream out = socket.getOutputStream();</span><br><span class="line">         out.write(<span class="string">"收到,谢谢"</span>.getBytes());</span><br><span class="line">         </span><br><span class="line">         socket.close();</span><br><span class="line">         server.close();</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h3 id="17TCP的中的流对象"><a href="#17TCP的中的流对象" class="headerlink" title="17TCP的中的流对象"></a>17TCP的中的流对象</h3><p>*A:TCP的中的流对象<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548228382/samples/java%20files/99.png" alt="">      </p><h3 id="18TCP文件上传–案例分析"><a href="#18TCP文件上传–案例分析" class="headerlink" title="18TCP文件上传–案例分析"></a>18TCP文件上传–案例分析</h3><p>*A:图片上传案例分析<br> <img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548232440/samples/java%20files/%E5%9B%BE%E7%89%871etf.png" alt=""><br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548250135/samples/java%20files/upload11.png" alt="">    </p><h3 id="19TCP文件上传–客户端"><a href="#19TCP文件上传–客户端" class="headerlink" title="19TCP文件上传–客户端"></a>19TCP文件上传–客户端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">*A TCP上传客户端</span><br><span class="line">   <span class="string">"/*</span></span><br><span class="line"><span class="string">    *  实现TCP图片上传客户端</span></span><br><span class="line"><span class="string">    *  实现步骤:</span></span><br><span class="line"><span class="string">    *    1. Socket套接字连接服务器</span></span><br><span class="line"><span class="string">    *    2. 通过Socket获取字节输出流,写图片</span></span><br><span class="line"><span class="string">    *    3. 使用自己的流对象,读取图片数据源</span></span><br><span class="line"><span class="string">    *         FileInputStream</span></span><br><span class="line"><span class="string">    *    4. 读取图片,使用字节输出流,将图片写到服务器</span></span><br><span class="line"><span class="string">    *       采用字节数组进行缓冲</span></span><br><span class="line"><span class="string">    *    5. 通过Socket套接字获取字节输入流</span></span><br><span class="line"><span class="string">    *       读取服务器发回来的上传成功</span></span><br><span class="line"><span class="string">    *    6. 关闭资源</span></span><br><span class="line"><span class="string">    */"</span></span><br><span class="line">   <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCPClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">      Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8000</span>);</span><br><span class="line">      <span class="comment">//获取字节输出流,图片写到服务器</span></span><br><span class="line">      OutputStream out = socket.getOutputStream();</span><br><span class="line">      <span class="comment">//创建字节输入流,读取本机上的数据源图片</span></span><br><span class="line">      FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"c:\\t.jpg"</span>);</span><br><span class="line">      <span class="comment">//开始读写字节数组</span></span><br><span class="line">      <span class="keyword">int</span> len = <span class="number">0</span> ;</span><br><span class="line">      <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">      <span class="keyword">while</span>((len = fis.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">        out.write(bytes, <span class="number">0</span>, len);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//给服务器写终止序列</span></span><br><span class="line">      <span class="comment">//socket.shutdownOutput();</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment">//获取字节输入流,读取服务器的上传成功</span></span><br><span class="line">      InputStream in = socket.getInputStream();</span><br><span class="line"></span><br><span class="line">      len = in.read(bytes);</span><br><span class="line">      System.out.println(<span class="keyword">new</span> String(bytes,<span class="number">0</span>,len));</span><br><span class="line">      </span><br><span class="line">      fis.close();</span><br><span class="line">      socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="20TCP文件上传–服务器"><a href="#20TCP文件上传–服务器" class="headerlink" title="20TCP文件上传–服务器"></a>20TCP文件上传–服务器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">A:TCP上传服务器</span><br><span class="line">  <span class="string">"/*</span></span><br><span class="line"><span class="string">   *  TCP图片上传服务器</span></span><br><span class="line"><span class="string">   *   1. ServerSocket套接字对象,监听端口8000</span></span><br><span class="line"><span class="string">   *   2. 方法accept()获取客户端的连接对象</span></span><br><span class="line"><span class="string">   *   3. 客户端连接对象获取字节输入流,读取客户端发送图片</span></span><br><span class="line"><span class="string">   *   4. 创建File对象,绑定上传文件夹</span></span><br><span class="line"><span class="string">   *       判断文件夹存在, 不存,在创建文件夹</span></span><br><span class="line"><span class="string">   *   5. 创建字节输出流,数据目的File对象所在文件夹</span></span><br><span class="line"><span class="string">   *   6. 字节流读取图片,字节流将图片写入到目的文件夹中</span></span><br><span class="line"><span class="string">   *   7. 将上传成功会写客户端</span></span><br><span class="line"><span class="string">   *   8. 关闭资源</span></span><br><span class="line"><span class="string">   *       </span></span><br><span class="line"><span class="string">   */"</span></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCPServer</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">     ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">8000</span>);</span><br><span class="line">     Socket socket = server.accept();</span><br><span class="line">     <span class="comment">//通过客户端连接对象,获取字节输入流,读取客户端图片</span></span><br><span class="line">     InputStream in = socket.getInputStream();</span><br><span class="line">     <span class="comment">//将目的文件夹封装到File对象</span></span><br><span class="line">     File upload = <span class="keyword">new</span> File(<span class="string">"d:\\upload"</span>);</span><br><span class="line">     <span class="keyword">if</span>(!upload.exists())</span><br><span class="line">       upload.mkdirs();</span><br><span class="line">      </span><br><span class="line">     <span class="comment">//创建字节输出流,将图片写入到目的文件夹中                         </span></span><br><span class="line">     FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(upload+<span class="string">"t.jpg"</span>);</span><br><span class="line">     <span class="comment">//读写字节数组</span></span><br><span class="line">     <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">     <span class="keyword">int</span> len = <span class="number">0</span> ;</span><br><span class="line">     <span class="keyword">while</span>((len = in.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">       fos.write(bytes, <span class="number">0</span>, len);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">//通过客户端连接对象获取字节输出流</span></span><br><span class="line">     <span class="comment">//上传成功写回客户端</span></span><br><span class="line">     socket.getOutputStream().write(<span class="string">"上传成功"</span>.getBytes());</span><br><span class="line">     </span><br><span class="line">     fos.close();</span><br><span class="line">     socket.close();</span><br><span class="line">     server.close();</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="21TCP文件上传–问题解决"><a href="#21TCP文件上传–问题解决" class="headerlink" title="21TCP文件上传–问题解决"></a>21TCP文件上传–问题解决</h3><p>上面的代码能实现文件的正确上传，但是不能实现服务器将“上传成功”信息返回给客户端,并且服务器和客户端的运行界面都不能终止：<br>问题在于：<br>read()方法遇到阻塞<br><strong>客户端的read()方法读取的是文件，遇到文件末尾， read()方法会返回-1</strong></p><p><strong>服务器端的read()方法读取的是客户端的字节数组，返回的是字节数组的长度&gt;=0；不会返回-1</strong></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548249677/samples/java%20files/%E5%9B%BE%E7%89%87dfg1.png" alt="">问题解决：<br><strong>给服务器写终止序列<br>socket.shutdownOutput();//向服务器端写入一个结束标志</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  实现TCP图片上传客户端</span></span><br><span class="line"><span class="string"> *  实现步骤:</span></span><br><span class="line"><span class="string"> *    1. Socket套接字连接服务器</span></span><br><span class="line"><span class="string"> *    2. 通过Socket获取字节输出流,写图片</span></span><br><span class="line"><span class="string"> *    3. 使用自己的流对象,读取图片数据源</span></span><br><span class="line"><span class="string"> *         FileInputStream</span></span><br><span class="line"><span class="string"> *    4. 读取图片,使用字节输出流,将图片写到服务器</span></span><br><span class="line"><span class="string"> *       采用字节数组进行缓冲</span></span><br><span class="line"><span class="string"> *    5. 通过Socket套接字获取字节输入流</span></span><br><span class="line"><span class="string"> *       读取服务器发回来的上传成功</span></span><br><span class="line"><span class="string"> *    6. 关闭资源</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCPClient</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">    Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8000</span>);</span><br><span class="line">    <span class="comment">//获取字节输出流,图片写到服务器</span></span><br><span class="line">    OutputStream out = socket.getOutputStream();</span><br><span class="line">    <span class="comment">//创建字节输入流,读取本机上的数据源图片</span></span><br><span class="line">    FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"c:\\t.jpg"</span>);</span><br><span class="line">    <span class="comment">//开始读写字节数组</span></span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">while</span>((len = fis.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">      out.write(bytes, <span class="number">0</span>, len);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//给服务器写终止序列</span></span><br><span class="line">    socket.shutdownOutput();<span class="comment">//想服务器端写入一个结束标志</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//获取字节输入流,读取服务器的上传成功</span></span><br><span class="line">    InputStream in = socket.getInputStream();</span><br><span class="line"></span><br><span class="line">    len = in.read(bytes);</span><br><span class="line">    System.out.println(<span class="keyword">new</span> String(bytes,<span class="number">0</span>,len));</span><br><span class="line">    </span><br><span class="line">    fis.close();</span><br><span class="line">    socket.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TCP上传文件名"><a href="#TCP上传文件名" class="headerlink" title="TCP上传文件名"></a>TCP上传文件名</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">*A:TCP上传文件名</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">   *  TCP图片上传服务器</span></span><br><span class="line"><span class="comment">   *   1. ServerSocket套接字对象,监听端口8000</span></span><br><span class="line"><span class="comment">   *   2. 方法accept()获取客户端的连接对象</span></span><br><span class="line"><span class="comment">   *   3. 客户端连接对象获取字节输入流,读取客户端发送图片</span></span><br><span class="line"><span class="comment">   *   4. 创建File对象,绑定上传文件夹</span></span><br><span class="line"><span class="comment">   *       判断文件夹存在, 不存,在创建文件夹</span></span><br><span class="line"><span class="comment">   *   5. 创建字节输出流,数据目的File对象所在文件夹</span></span><br><span class="line"><span class="comment">   *   6. 字节流读取图片,字节流将图片写入到目的文件夹中</span></span><br><span class="line"><span class="comment">   *   7. 将上传成功会写客户端</span></span><br><span class="line"><span class="comment">   *   8. 关闭资源</span></span><br><span class="line"><span class="comment">   *       </span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCPServer</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">     ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">8000</span>);</span><br><span class="line">     Socket socket = server.accept();</span><br><span class="line">     <span class="comment">//通过客户端连接对象,获取字节输入流,读取客户端图片</span></span><br><span class="line">     InputStream in = socket.getInputStream();</span><br><span class="line">     <span class="comment">//将目的文件夹封装到File对象</span></span><br><span class="line">     File upload = <span class="keyword">new</span> File(<span class="string">"d:\\upload"</span>);</span><br><span class="line">     <span class="keyword">if</span>(!upload.exists())</span><br><span class="line">       upload.mkdirs();</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//防止文件同名被覆盖,从新定义文件名字</span></span><br><span class="line">     <span class="comment">//规则:  域名+毫秒值+6位随机数</span></span><br><span class="line">     String filename=<span class="string">"itcast"</span>+System.currentTimeMillis()+<span class="keyword">new</span> Random().nextInt(<span class="number">999999</span>)+<span class="string">".jpg"</span>;</span><br><span class="line">     <span class="comment">//创建字节输出流,将图片写入到目的文件夹中                         </span></span><br><span class="line">     FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(upload+File.separator+filename);</span><br><span class="line">     <span class="comment">//读写字节数组</span></span><br><span class="line">     <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">     <span class="keyword">int</span> len = <span class="number">0</span> ;</span><br><span class="line">     <span class="keyword">while</span>((len = in.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">       fos.write(bytes, <span class="number">0</span>, len);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">//通过客户端连接对象获取字节输出流</span></span><br><span class="line">     <span class="comment">//上传成功写回客户端</span></span><br><span class="line">     socket.getOutputStream().write(<span class="string">"上传成功"</span>.getBytes());</span><br><span class="line">     </span><br><span class="line">     fos.close();</span><br><span class="line">     socket.close();</span><br><span class="line">     server.close();</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="多线程上传案例"><a href="#多线程上传案例" class="headerlink" title="多线程上传案例"></a>多线程上传案例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">*A:多线程上传案例</span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCPThreadServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">8000</span>);</span><br><span class="line">      <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="comment">// 获取到一个客户端,必须开启新线程,为这个客户端服务</span></span><br><span class="line">        Socket socket = server.accept(); </span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Upload(socket)).start();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Upload</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Socket socket;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Upload</span><span class="params">(Socket socket)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.socket = socket;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 通过客户端连接对象,获取字节输入流,读取客户端图片</span></span><br><span class="line">        InputStream in = socket.getInputStream();</span><br><span class="line">        <span class="comment">// 将目的文件夹封装到File对象</span></span><br><span class="line">        File upload = <span class="keyword">new</span> File(<span class="string">"d:\\upload"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!upload.exists())</span><br><span class="line">          upload.mkdirs();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 防止文件同名被覆盖,从新定义文件名字</span></span><br><span class="line">        <span class="comment">// 规则: 域名+毫秒值+6位随机数</span></span><br><span class="line">        String filename = <span class="string">"itcast"</span> + System.currentTimeMillis() + <span class="keyword">new</span> Random().nextInt(<span class="number">999999</span>) + <span class="string">".jpg"</span>;</span><br><span class="line">        <span class="comment">// 创建字节输出流,将图片写入到目的文件夹中</span></span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(upload + File.separator + filename);</span><br><span class="line">        <span class="comment">// 读写字节数组</span></span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = in.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">          fos.write(bytes, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 通过客户端连接对象获取字节输出流</span></span><br><span class="line">        <span class="comment">// 上传成功写回客户端</span></span><br><span class="line">        socket.getOutputStream().write(<span class="string">"上传成功"</span>.getBytes());</span><br><span class="line"></span><br><span class="line">        fos.close();</span><br><span class="line">        socket.close();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>    IP地址：用来唯一表示我们自己的电脑的，是一个网络标示<br>    端口号： 用来区别当前电脑中的应用程序的<br>    UDP: 传送速度快，但是容易丢数据，如视频聊天，语音聊天<br>    TCP: 传送稳定，不会丢失数据，如文件的上传、下载</p><h4 id="UDP程序交互的流程"><a href="#UDP程序交互的流程" class="headerlink" title="UDP程序交互的流程"></a>UDP程序交互的流程</h4><p>    发送端<br>1,创建DatagramSocket对象<br>2，创建DatagramPacket对象，并封装数据<br>3，发送数据<br>4，释放流资源<br>    接收端<br>1,创建DatagramSocket对象<br>2,创建DatagramPacket对象<br>3,接收数据存储到DatagramPacket对象中<br>4,获取DatagramPacket对象的内容<br> 5,释放流资源</p><h4 id="TCP程序交互的流程"><a href="#TCP程序交互的流程" class="headerlink" title="TCP程序交互的流程"></a>TCP程序交互的流程</h4><p>    客户端<br>1,创建客户端的Socket对象<br>2,获取Socket的输出流对象<br>3,写数据给服务器<br>4,获取Socket的输入流对象<br>5，使用输入流，读反馈信息<br>6,关闭流资源<br>    服务器端<br>1，创建服务器端ServerSocket对象，指定服务器端端口号<br>2，开启服务器，等待着客户端Socket对象的连接，如有客户端连接，返回客户端的Socket对象<br>3,通过客户端的Socket对象，获取客户端的输入流，为了实现获取客户端发来的数据<br>4,通过客户端的输入流，获取流中的数据<br>5,通过客户端的Socket对象，获取客户端的输出流，为了实现给客户端反馈信息<br>6,通过客户端的输出流，写数据到流中<br>7,关闭流资源</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297959/samples/java%20files/photo-1544833021-2f0c8afb7fd6.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;1、网络三要素及传输协议&lt;br&gt;2、实现UDP协议的发送端和接收端&lt;br&gt;3、实现TCP协议的客户端和服务器&lt;br&gt;4、TCP上传文件案例&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://leesen998.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="java" scheme="https://leesen998.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记——基础29(数据库表项目基础练习)</title>
    <link href="https://leesen998.github.io/2016/11/30/day31%E7%AC%94%E8%AE%B0/"/>
    <id>https://leesen998.github.io/2016/11/30/day31笔记/</id>
    <published>2016-11-30T11:48:29.000Z</published>
    <updated>2019-01-22T12:43:32.985Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297638/samples/java%20files/photo-1546398770-b134faf3de65.jpg" alt="" style="width:100%"></p><p>1、管家婆家庭记账项目<br>2、熟练View层、Service层、Dao层之间的方法相互调用操作<br>3、熟练dbutils操作数据库表完成增删改查</p><a id="more"></a><h3 id="01项目训练目标"><a href="#01项目训练目标" class="headerlink" title="01项目训练目标"></a>01项目训练目标</h3><ul><li>A: 项目训练目标</li><li>a: 项目目标</li><li>综合运用前面所学习的知识点</li><li>熟练View层、Service层、Dao层之间的方法相互调用操作、</li><li>熟练dbutils操作数据库表完成增删改查</li><li>了解公司项目开发的流程，充分的掌握项目需求分析、设计与功能的代码实现。提高同学们独立分析需求与功能实现的能力。            </li></ul><h3 id="02项目中的功能模块"><a href="#02项目中的功能模块" class="headerlink" title="02项目中的功能模块"></a>02项目中的功能模块</h3><ul><li>A: 项目中的功能模块    </li><li>a: 五大模块</li><li>查询账务</li><li>多条件组合查询账务</li><li>添加账务</li><li>编辑账务</li><li>删除账务<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548075788/samples/java%20files/%E5%9B%BE%E7%A4%BA.png" alt=""><h3 id="03技术的选择和相关jar包"><a href="#03技术的选择和相关jar包" class="headerlink" title="03技术的选择和相关jar包"></a>03技术的选择和相关jar包</h3></li><li>A: 技术的选择和相关jar包</li><li>a: apache的commons组件：<br>….. <em> commons-dbutils-1.4.jar：封装并简化了JDBC；<br>….. </em> commons-dbcp-1.4.jar：apache commons提供的数据库连接池组件，命名为DBCP；</li><li>b:<br>…..<em> commons.pool-1.3.jar：DBCP连接池依赖该jar包；<br>…..</em> mysql-connector-java-5.1.28-bin.jar：MySQL的JDBC驱动包，用JDBC连接MySQL数据库必须使用该JAR包。</li></ul><h3 id="04项目中的工具类"><a href="#04项目中的工具类" class="headerlink" title="04项目中的工具类"></a>04项目中的工具类</h3><ul><li>A: 项目中的工具类</li><li>a: 工具类的介绍    </li><li>每个项目中都会有很多个工具类，不要求每个工具类对能独立写出来，但是要会使用工具类</li><li>JDBCUtils：用来创建数据库连接池对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BasicDataSource datasource  =<span class="keyword">new</span> BasicDataSource();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//1.注册驱动, 将驱动类加入到内容</span></span><br><span class="line">        String drivername=<span class="string">"com.mysql.jdbc.Driver"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.获得数据库连接  DriverManager类中静态方法</span></span><br><span class="line">        <span class="comment">//static Connection getConnection(String url, String user, String password)</span></span><br><span class="line">        <span class="comment">//返回值是Connection接口的实现类,在mysql驱动程序</span></span><br><span class="line">        <span class="comment">//url: 数据库地址  jdbc:mysql://连接主机IP:端口号/数据库名字</span></span><br><span class="line">        String url=<span class="string">"jdbc:mysql://localhost:3306/qjunbase"</span>;</span><br><span class="line">        String username = <span class="string">"root"</span>;</span><br><span class="line">        String password = <span class="string">"root"</span>;</span><br><span class="line">        datasource.setDriverClassName(drivername);</span><br><span class="line">        datasource.setUrl(url);</span><br><span class="line">        datasource.setUsername(username);</span><br><span class="line">        datasource.setPassword(password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对象连接池中的连接数量配置,可选的</span></span><br><span class="line">        datasource.setInitialSize(<span class="number">10</span>);</span><br><span class="line">        datasource.setMaxActive(<span class="number">8</span>);</span><br><span class="line">        datasource.setMaxIdle(<span class="number">5</span>);</span><br><span class="line">        datasource.setMinIdle(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> datasource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="05数据表的设计"><a href="#05数据表的设计" class="headerlink" title="05数据表的设计"></a>05数据表的设计</h3><ul><li>A: 数据表的设计</li><li>a: 数据表的设计</li><li>表与表之间是有关系的</li><li>主表和从表的关系</li><li>主表中的主键作为从表中的外键<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548076968/samples/java%20files/%E8%A1%A8%E5%85%B3%E7%B3%BB.jpg" alt=""></li></ul><h3 id="06创建数据库数据表写入测试数据"><a href="#06创建数据库数据表写入测试数据" class="headerlink" title="06创建数据库数据表写入测试数据"></a>06创建数据库数据表写入测试数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">* A: 创建数据库数据表写入测试数据</span><br><span class="line">* a: 创建数据库数据表</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">创建管家婆的数据库</span></span><br><span class="line"><span class="comment">名字 gjp</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">CREATE DATABASE gjp;</span><br><span class="line"></span><br><span class="line">USE gjp;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">创建数据表,表名账务</span></span><br><span class="line"><span class="comment">字段,列</span></span><br><span class="line"><span class="comment">主键</span></span><br><span class="line"><span class="comment">分类名称  可变字符</span></span><br><span class="line"><span class="comment">金额  double</span></span><br><span class="line"><span class="comment">账户  可变字符 (支付,收入方法)</span></span><br><span class="line"><span class="comment">创建日期 date</span></span><br><span class="line"><span class="comment">账务描述 可变字符</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">CREATE TABLE <span class="title">gjp_zhangwu</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">-- 主键</span></span></span><br><span class="line"><span class="function"><span class="params">zwid INT PRIMARY KEY AUTO_INCREMENT,</span></span></span><br><span class="line"><span class="function"><span class="params">-- 分类名称   </span></span></span><br><span class="line"><span class="function"><span class="params">flname VARCHAR(<span class="number">200</span>)</span>,</span></span><br><span class="line"><span class="function">-- 金额</span></span><br><span class="line"><span class="function">money DOUBLE,</span></span><br><span class="line"><span class="function">-- 账户</span></span><br><span class="line"><span class="function">zhanghu <span class="title">VARCHAR</span><span class="params">(<span class="number">100</span>)</span>,</span></span><br><span class="line"><span class="function">-- 创建日期</span></span><br><span class="line"><span class="function">createtime DATE,</span></span><br><span class="line"><span class="function">-- 账务描述</span></span><br><span class="line"><span class="function">description  <span class="title">VARCHAR</span><span class="params">(<span class="number">1000</span>)</span></span></span><br><span class="line"><span class="function">)</span>;</span><br><span class="line">SELECT * FROM gjp_zhangwu;</span><br><span class="line">* b: 写入数据</span><br><span class="line">-- 写入测试的数据</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">1</span>,<span class="string">'吃饭支出'</span>,<span class="number">247</span>,<span class="string">'交通银行'</span>,<span class="string">'2016-03-02'</span>,<span class="string">'家庭聚餐'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">2</span>,<span class="string">'工资收入'</span>,<span class="number">12345</span>,<span class="string">'现金'</span>,<span class="string">'2016-03-15'</span>,<span class="string">'开工资了'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">3</span>,<span class="string">'服装支出'</span>,<span class="number">1998</span>,<span class="string">'现金'</span>,<span class="string">'2016-04-02'</span>,<span class="string">'买衣服'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">4</span>,<span class="string">'吃饭支出'</span>,<span class="number">325</span>,<span class="string">'现金'</span>,<span class="string">'2016-06-18'</span>,<span class="string">'朋友聚餐'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">5</span>,<span class="string">'股票收入'</span>,<span class="number">8000</span>,<span class="string">'工商银行'</span>,<span class="string">'2016-10-28'</span>,<span class="string">'股票大涨'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">6</span>,<span class="string">'股票收入'</span>,<span class="number">5000</span>,<span class="string">'工商银行'</span>,<span class="string">'2016-10-28'</span>,<span class="string">'股票又大涨'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">7</span>,<span class="string">'工资收入'</span>,<span class="number">5000</span>,<span class="string">'交通银行'</span>,<span class="string">'2016-10-28'</span>,<span class="string">'又开工资了'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">8</span>,<span class="string">'礼金支出'</span>,<span class="number">5000</span>,<span class="string">'现金'</span>,<span class="string">'2016-10-28'</span>,<span class="string">'朋友结婚'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">9</span>,<span class="string">'其他支出'</span>,<span class="number">1560</span>,<span class="string">'现金'</span>,<span class="string">'2016-10-29'</span>,<span class="string">'丢钱了'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">10</span>,<span class="string">'交通支出'</span>,<span class="number">2300</span>,<span class="string">'交通银行'</span>,<span class="string">'2016-10-29'</span>,<span class="string">'油价还在涨啊'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">11</span>,<span class="string">'吃饭支出'</span>,<span class="number">1000</span>,<span class="string">'工商银行'</span>,<span class="string">'2016-10-29'</span>,<span class="string">'又吃饭'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">12</span>,<span class="string">'工资收入'</span>,<span class="number">1000</span>,<span class="string">'现金'</span>,<span class="string">'2016-10-30'</span>,<span class="string">'开资'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">13</span>,<span class="string">'交通支出'</span>,<span class="number">2000</span>,<span class="string">'现金'</span>,<span class="string">'2016-10-30'</span>,<span class="string">'机票好贵'</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">gjp_zhangwu</span><span class="params">(zwid,flname,money,zhangHu,createtime,description)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">14</span>,<span class="string">'工资收入'</span>,<span class="number">5000</span>,<span class="string">'现金'</span>,<span class="string">'2016-10-30'</span>,<span class="string">'又开资'</span>)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="07项目中的分层设计"><a href="#07项目中的分层设计" class="headerlink" title="07项目中的分层设计"></a>07项目中的分层设计</h3><ul><li>A: 项目中的分层设计</li><li>a: 各层功能介绍<br>….. <em> <strong> view层作用: 视图层,即项目中的界面</strong><br>….. </em> <strong>controller层作用: 控制层, 获取界面上的数据,为界面设置数据; 将要实现的功能交给业务层处理</strong><br>….. <em> <strong> service层作用: 业务层, 功能的实现, 与controller控制层和数据访问层DAO交互, 将对数据库的操作交给DAO数据访问层来处理</strong><br>….. </em> <strong> dao层作用: 数据访问层, 用来操作数据库表的数据</strong></li></ul><p>……. <em> database数据库: 这里指MySQL<br>……. </em> <strong> domain 实体包: 存放JavaBean</strong><br>……. <em> tools工具包:存放项目中使用到的工具类<br>……. </em> test 测试包: 存放项目功能测试的代码</p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548079693/samples/java%20files/%E5%B1%82%E6%AC%A1.png" alt=""></p><h3 id="08创建项目-分层-导入jar包"><a href="#08创建项目-分层-导入jar包" class="headerlink" title="08创建项目_分层_导入jar包"></a>08创建项目_分层_导入jar包</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">* A: 创建项目_分层_导入jar包</span><br><span class="line">* a: 创建工程包</span><br><span class="line">* cn.itcast.gjp.app: 存放main方法类；</span><br><span class="line">* cn.itcast.gjp.domain: 存放JavaBean；</span><br><span class="line">* cn.itcast.gjp.view: 存放界面，及表现层类；</span><br><span class="line">* cn.itcast.gjp.service: 存放业务层类；</span><br><span class="line">* cn.itcast.gjp.dao: 存放数据访问层类;</span><br><span class="line">* cn.itcast.gjp.tools:存放工具类</span><br><span class="line">* b: 导入jar包</span><br><span class="line">* 在项目根路径下建立文件夹lib</span><br><span class="line">* 导入以下jar包</span><br><span class="line">* mysql-connector-java-<span class="number">5.1</span>.37-bin.jar：数据库驱动</span><br><span class="line">* commons-dbutils-<span class="number">1.6</span>.jar：提供QueryRunner类方便进行增删改查操作</span><br><span class="line">* commons-dbcp-<span class="number">1.4</span>.jar：</span><br><span class="line">* commons-pool-<span class="number">1.5</span>.6.jar：提供高效的数据库连接池技术</span><br><span class="line">* 拷贝以上jar包，选定拷贝的jar包/右键/Build Path/Add to Build Path</span><br></pre></td></tr></table></figure><p><strong>首先，完成本项目中类的创建</strong>:</p><ol><li>复制已编写好的工具类JDBCUtils.java 到 tools包中；</li><li>复制jar包mysql-connector-java-5.1.28-bin.jar、commons-dbutils-1.4.jar、commons-dbcp-1.4.jar、commons-pool-1.3.jar，到lib文件夹中，通过Build Path操作，添加到classPath路径中，提供给JDBCUtils使用;</li><li>在app包中，创建类MainApp.java，编写main主方法，用来完成本项目的启动</li><li>在domain包中，创建类ZhangWu.java，它是用来封装账务信息的JavaBean。</li><li>在dao包中，创建类ZhangWuDao.java，给ZhangWuDao类添加一个成员变量QueryRunner对象，因为我们使用dbutils来操作数据库。</li><li>在service包中，创建类ZhangWuService.java，给ZhangWuService类添加一个类型为ZhangWuDao的成员变量，因为service依赖dao。</li><li>在view包中，创建类MainView.java，给MainView类添加一个类型为ZhangWuService的成员变量，因为本项目中view依赖service。</li></ol><h3 id="09创建domain包中的类"><a href="#09创建domain包中的类" class="headerlink" title="09创建domain包中的类"></a>09创建domain包中的类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">* A: 创建domain包中的类</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWu</span> </span>&#123;</span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">int</span>  zwid;</span><br><span class="line">  </span><br><span class="line"> <span class="keyword">private</span> String flname; </span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">double</span>  money; </span><br><span class="line">  </span><br><span class="line"> <span class="keyword">private</span> String zhanghu;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> String createtime; </span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> String description;</span><br><span class="line"> <span class="comment">//注意生成空参构造、有参构造、set和get方法、toString方法等</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10创建JDBCUtils工具类"><a href="#10创建JDBCUtils工具类" class="headerlink" title="10创建JDBCUtils工具类"></a>10创建JDBCUtils工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">* A：创建JDBCUtils工具类</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span></span>&#123;</span><br><span class="line"><span class="comment">//创建BasicDataSource对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> BasicDataSource datasource = <span class="keyword">new</span> BasicDataSource();</span><br><span class="line"><span class="comment">//静态代码块,实现必要参数设置</span></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">datasource.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">datasource.setUrl(<span class="string">"jdbc:mysql://localhost:3306/gjp"</span>);</span><br><span class="line">datasource.setUsername(<span class="string">"root"</span>);</span><br><span class="line">datasource.setPassword(<span class="string">"123"</span>);</span><br><span class="line">datasource.setMaxActive(<span class="number">10</span>);</span><br><span class="line">datasource.setMaxIdle(<span class="number">5</span>);</span><br><span class="line">datasource.setMinIdle(<span class="number">2</span>);</span><br><span class="line">datasource.setInitialSize(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> datasource;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11创建其他包中的类"><a href="#11创建其他包中的类" class="headerlink" title="11创建其他包中的类"></a>11创建其他包中的类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">* A: 创建其他包中的类</span><br><span class="line">* a: cn.itcast.gjp.dao包中<span class="string">"创建ZhangWuDao类"</span></span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string">*  实现对数据表 gjp_zhangwu 数据增删改查操作</span></span><br><span class="line"><span class="string">*  dbuils工具类完成,类成员创建QueryRunner对象,指定数据源</span></span><br><span class="line"><span class="string">*/"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuDao</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtils.getDataSource());</span><br><span class="line">&#125;</span><br><span class="line">——————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* b: cn.itcast.gjp.service包中<span class="string">"创建ZhangWuService类"</span></span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string">*  业务层类</span></span><br><span class="line"><span class="string">*  接收上一层,控制层controller的数据</span></span><br><span class="line"><span class="string">*  经过计算,传递给dao层,操作数据库</span></span><br><span class="line"><span class="string">*  调用dao层中的类,类成员位置,创建Dao类的对象</span></span><br><span class="line"><span class="string">*/"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuService</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ZhangWuDao dao = <span class="keyword">new</span> ZhangWuDao();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">——————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* c: cn.itcast.gjp.controller包中<span class="string">"建立ZhangWuController类"</span></span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string">*  控制器层</span></span><br><span class="line"><span class="string">*  接收视图层的数据,数据传递给service层</span></span><br><span class="line"><span class="string">*  成员位置,创建service对象</span></span><br><span class="line"><span class="string">*/"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuController</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ZhangWuService service = <span class="keyword">new</span> ZhangWuService();</span><br><span class="line">&#125;</span><br><span class="line">——————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* d: cn.itcast.gjp.view包中<span class="string">"建立MainView类"</span></span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string">*  试图层,用户看到和操作的界面</span></span><br><span class="line"><span class="string">*  数据传递给controller层实现</span></span><br><span class="line"><span class="string">*  成员位置,创建controller对象</span></span><br><span class="line"><span class="string">*/"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainView</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ZhangWuController controller = <span class="keyword">new</span> ZhangWuController();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">——————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* e: cn.itcast.gjp.app包中<span class="string">"建立MainApp类"</span></span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string">*  主程序类,作用,开启软件程序</span></span><br><span class="line"><span class="string">*/"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApp</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> MainView().run();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12实现用户的界面菜单"><a href="#12实现用户的界面菜单" class="headerlink" title="12实现用户的界面菜单"></a>12实现用户的界面菜单</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现用户的界面菜单</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类中添加run方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*  实现界面效果</span></span><br><span class="line"><span class="comment">*  接收用户的输入</span></span><br><span class="line"><span class="comment">*  根据数据,调用不同的功能方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//创建Scanner类对象,反复键盘输入</span></span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">"---------------管家婆家庭记账软件---------------"</span>);</span><br><span class="line">System.out.println(<span class="string">"1.添加账务　2.编辑账务　3.删除账务　4.查询账务　5.退出系统"</span>);</span><br><span class="line">System.out.println(<span class="string">"请输入要操作的功能序号[1-5]:"</span>);</span><br><span class="line"><span class="comment">//接收用户的菜单选择</span></span><br><span class="line"><span class="keyword">int</span> choose = sc.nextInt();</span><br><span class="line"><span class="comment">//对选择的菜单判断,调用不同的功能</span></span><br><span class="line"><span class="keyword">switch</span>(choose)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">   <span class="comment">// 选择添加账务,调用添加账务的方法</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="comment">// 选择的编辑账务,调用编辑账务方法</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="comment">// 选择的删除账务,调用删除账务方法</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="comment">// 选择的是查询账务,调用查询方法</span></span><br><span class="line"><span class="comment">//selectZhangWu();</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13实现查询的界面菜单"><a href="#13实现查询的界面菜单" class="headerlink" title="13实现查询的界面菜单"></a>13实现查询的界面菜单</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现查询的界面菜单</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">*  cn.itcast.gjp.view包中建立MainView类中添加selectZhangWu方法、selectAll方法、select方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法 selectZhangWu()</span></span><br><span class="line"><span class="comment"> * 显示查询的方式 1 所有查询   2 条件查询</span></span><br><span class="line"><span class="comment"> * 接收用户的选择</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectZhangWu</span><span class="params">()</span></span>&#123;</span><br><span class="line"> System.out.println(<span class="string">"1. 查询所有    2. 条件查询"</span>);</span><br><span class="line"> Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"> <span class="keyword">int</span> selectChooser = sc.nextInt();</span><br><span class="line"> <span class="comment">//判断根据用户的选择,调用不同的功能</span></span><br><span class="line"> <span class="keyword">switch</span>(selectChooser)&#123;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"> <span class="comment">//选择的查询所有,调用查询所有的方法</span></span><br><span class="line"> selectAll();</span><br><span class="line"> <span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"> <span class="comment">//选的条件查询,调用带有查询条件的方法</span></span><br><span class="line"> select();</span><br><span class="line"> <span class="keyword">break</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">  * 定义方法,实现查询所有的账务数据</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectAll</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">  * 定义方法,实现条件查询账务数据</span></span><br><span class="line"><span class="comment">  * 提供用户的输入日期,开始日期结束日期</span></span><br><span class="line"><span class="comment">  * 就2个日期,传递到controller层</span></span><br><span class="line"><span class="comment">  * 调用controller的方法,传递2个日期参数</span></span><br><span class="line"><span class="comment">  * 获取到controller查询的结果集,打印出来</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="14实现查询所有账务的控制-业务层的实现"><a href="#14实现查询所有账务的控制-业务层的实现" class="headerlink" title="14实现查询所有账务的控制,业务层的实现"></a>14实现查询所有账务的控制,业务层的实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现查询所有账务的控制,业务层的实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* a: cn.itcast.gjp.dao包中创建ZhangWuDao类</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*  实现对数据表 gjp_zhangwu 数据增删改查操作</span></span><br><span class="line"><span class="comment">*  dbuils工具类完成,类成员创建QueryRunner对象,指定数据源</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuDao</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtils.getDataSource());</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法,查询数据库,获取所有的账务数据</span></span><br><span class="line"><span class="comment"> * 方法,由业务层调用</span></span><br><span class="line"><span class="comment"> * 结果集,将所有的账务数据,存储到Bean对象中,存储到集合中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ZhangWu&gt; <span class="title">selectAll</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* b: cn.itcast.gjp.service包中创建ZhangWuService类</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  业务层类</span></span><br><span class="line"><span class="comment"> *  接收上一层,控制层controller的数据</span></span><br><span class="line"><span class="comment"> *  经过计算,传递给dao层,操作数据库</span></span><br><span class="line"><span class="comment"> *  调用dao层中的类,类成员位置,创建Dao类的对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuService</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ZhangWuDao dao = <span class="keyword">new</span> ZhangWuDao();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  定义方法,实现查询所有的账务数据</span></span><br><span class="line"><span class="comment"> *  此方法,由控制层调用, 去调用dao层的方法</span></span><br><span class="line"><span class="comment"> *  返回存储ZhangWu对象的List集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ZhangWu&gt; <span class="title">selectAll</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> dao.selectAll();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* c: cn.itcast.gjp.controller包中建立ZhangWuController类</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  控制器层</span></span><br><span class="line"><span class="comment"> *  接收视图层的数据,数据传递给service层</span></span><br><span class="line"><span class="comment"> *  成员位置,创建service对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuController</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ZhangWuService service = <span class="keyword">new</span> ZhangWuService();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 控制层类定义方法,实现查询所有的账务数据</span></span><br><span class="line"><span class="comment"> * 本方法由视图层调用,本方法调用service层</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ZhangWu&gt; <span class="title">selectAll</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> service.selectAll();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15实现查询所有账务的dao层的实现"><a href="#15实现查询所有账务的dao层的实现" class="headerlink" title="15实现查询所有账务的dao层的实现"></a>15实现查询所有账务的dao层的实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现查询所有账务的dao层的实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* a: cn.itcast.gjp.dao包中创建ZhangWuDao类selectAll方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*  实现对数据表 gjp_zhangwu 数据增删改查操作</span></span><br><span class="line"><span class="comment">*  dbuils工具类完成,类成员创建QueryRunner对象,指定数据源</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuDao</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtils.getDataSource());</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法,查询数据库,获取所有的账务数据</span></span><br><span class="line"><span class="comment"> * 方法,由业务层调用</span></span><br><span class="line"><span class="comment"> * 结果集,将所有的账务数据,存储到Bean对象中,存储到集合中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ZhangWu&gt; <span class="title">selectAll</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//查询账务数据的SQL语句</span></span><br><span class="line">String sql = <span class="string">"SELECT * FROM gjp_zhangwu"</span>;</span><br><span class="line"><span class="comment">//调用qr对象的方法,query方法,结果集BeanListHandler</span></span><br><span class="line">List&lt;ZhangWu&gt; list = qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(ZhangWu.class));</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException ex)&#123;</span><br><span class="line">System.out.println(ex);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"查询所有账务失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="16实现查询所有账务的view层的实现"><a href="#16实现查询所有账务的view层的实现" class="headerlink" title="16实现查询所有账务的view层的实现"></a>16实现查询所有账务的view层的实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现查询所有账务的view层的实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类selectAll方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 定义方法,实现查询所有的账务数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectAll</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="comment">//调用控制层中的方法,查询所有的账务数据</span></span><br><span class="line"> List&lt;ZhangWu&gt; list = controller.selectAll();</span><br><span class="line"><span class="comment">//输出表头</span></span><br><span class="line"> System.out.println(<span class="string">"ID\t\t类别\t\t账户\t\t金额\t\t时间\t\t说明"</span>);</span><br><span class="line"> <span class="comment">//遍历集合,结果输出控制台</span></span><br><span class="line"> <span class="keyword">for</span>(ZhangWu zw : list)&#123;</span><br><span class="line"> System.out.println(zw.getZwid()+<span class="string">"\t\t"</span>+zw.getFlname()+<span class="string">"\t\t"</span>+zw.getZhanghu()+<span class="string">"\t\t"</span>+</span><br><span class="line"> zw.getMoney()+<span class="string">"\t\t"</span>+zw.getCreatetime()+<span class="string">"\t"</span>+zw.getDescription());</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="17实现条件查询账务的菜单实现"><a href="#17实现条件查询账务的菜单实现" class="headerlink" title="17实现条件查询账务的菜单实现"></a>17实现条件查询账务的菜单实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现条件查询账务的菜单实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类select方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 定义方法,实现条件查询账务数据</span></span><br><span class="line"><span class="comment">* 提供用户的输入日期,开始日期结束日期</span></span><br><span class="line"><span class="comment">* 就2个日期,传递到controller层</span></span><br><span class="line"><span class="comment">* 调用controller的方法,传递2个日期参数</span></span><br><span class="line"><span class="comment">* 获取到controller查询的结果集,打印出来</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span></span>&#123;</span><br><span class="line"> System.out.println(<span class="string">"选择条件查询,输入日期格式XXXX-XX-XX"</span>);</span><br><span class="line"> Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"> System.out.print(<span class="string">"请输入开始日期:"</span>);</span><br><span class="line"> String startDate = sc.nextLine();</span><br><span class="line"> System.out.print(<span class="string">"请输入结果日期:"</span>);</span><br><span class="line"> String endDate = sc.nextLine();</span><br><span class="line"> <span class="comment">//调用controller层的方法,传递日期,获取查询结果集</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="18实现条件查询账务的控制层-业务层实现"><a href="#18实现条件查询账务的控制层-业务层实现" class="headerlink" title="18实现条件查询账务的控制层,业务层实现"></a>18实现条件查询账务的控制层,业务层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现条件查询账务的控制层,业务层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* a: cn.itcast.gjp.dao包中创建ZhangWuDao类</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  实现对数据表 gjp_zhangwu 数据增删改查操作</span></span><br><span class="line"><span class="comment"> *  dbuils工具类完成,类成员创建QueryRunner对象,指定数据源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuDao</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtils.getDataSource());</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法,查询数据库,带有条件去查询账务表</span></span><br><span class="line"><span class="comment"> * 由业务层调用,查询结果集存储到Bean对象,存储到List集合</span></span><br><span class="line"><span class="comment"> * 调用者传递2个日期字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ZhangWu&gt; <span class="title">select</span><span class="params">(String startDate,String endDate)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* b: cn.itcast.gjp.service包中创建ZhangWuService类</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  业务层类</span></span><br><span class="line"><span class="comment"> *  接收上一层,控制层controller的数据</span></span><br><span class="line"><span class="comment"> *  经过计算,传递给dao层,操作数据库</span></span><br><span class="line"><span class="comment"> *  调用dao层中的类,类成员位置,创建Dao类的对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuService</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ZhangWuDao dao = <span class="keyword">new</span> ZhangWuDao();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法,实现条件查询账务</span></span><br><span class="line"><span class="comment"> * 方法由控制层调用,传递2个日期字符串</span></span><br><span class="line"><span class="comment"> * 调用dao层的方法,传递2个日期字符串</span></span><br><span class="line"><span class="comment"> * 获取到查询结果集</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ZhangWu&gt; <span class="title">select</span><span class="params">(String startDate,String endDate)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> dao.select(startDate, endDate);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* c: cn.itcast.gjp.controller包中建立ZhangWuController类</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  控制器层</span></span><br><span class="line"><span class="comment"> *  接收视图层的数据,数据传递给service层</span></span><br><span class="line"><span class="comment"> *  成员位置,创建service对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuController</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ZhangWuService service = <span class="keyword">new</span> ZhangWuService();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法,实现条件查询账务</span></span><br><span class="line"><span class="comment"> * 方法由试图层调用,传递两个日期的字符串</span></span><br><span class="line"><span class="comment"> * 调用service层的方法,传递两个日期字符串,获取结果集</span></span><br><span class="line"><span class="comment"> * 结果集返回给试图</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ZhangWu&gt; <span class="title">select</span><span class="params">(String startDate,String endDate)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> service.select(startDate, endDate);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="19实现条件查询账务的dao层实现"><a href="#19实现条件查询账务的dao层实现" class="headerlink" title="19实现条件查询账务的dao层实现"></a>19实现条件查询账务的dao层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现条件查询账务的dao层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* a: cn.itcast.gjp.dao包中创建ZhangWuDao类select方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  实现对数据表 gjp_zhangwu 数据增删改查操作</span></span><br><span class="line"><span class="comment"> *  dbuils工具类完成,类成员创建QueryRunner对象,指定数据源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWuDao</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtils.getDataSource());</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法,查询数据库,带有条件去查询账务表</span></span><br><span class="line"><span class="comment"> * 由业务层调用,查询结果集存储到Bean对象,存储到List集合</span></span><br><span class="line"><span class="comment"> * 调用者传递2个日期字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;ZhangWu&gt; <span class="title">select</span><span class="params">(String startDate,String endDate)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//拼写条件查询的SQL语句</span></span><br><span class="line">String sql = <span class="string">"SELECT * FROM gjp_zhangwu WHERE createtime BETWEEN ? AND ?"</span>;</span><br><span class="line"><span class="comment">//定义对象数组,存储?占位符</span></span><br><span class="line">Object[] params = &#123;startDate,endDate&#125;;</span><br><span class="line"><span class="comment">//调用qr对象的方法query查询数据表,获取结果集</span></span><br><span class="line"><span class="keyword">return</span> qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(ZhangWu.class),params);</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException ex)&#123;</span><br><span class="line">System.out.println(ex);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"条件查询失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="20实现条件查询账务的view层实现"><a href="#20实现条件查询账务的view层实现" class="headerlink" title="20实现条件查询账务的view层实现"></a>20实现条件查询账务的view层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现条件查询账务的view层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类selectAll方法优化、抽取print方法、select方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 定义方法,实现查询所有的账务数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectAll</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="comment">//调用控制层中的方法,查询所有的账务数据</span></span><br><span class="line"> List&lt;ZhangWu&gt; list = controller.selectAll();</span><br><span class="line"> <span class="keyword">if</span>(list.size()!=<span class="number">0</span>)</span><br><span class="line"> print(list);</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> System.out.println(<span class="string">"没有查询到数据"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 定义方法,实现条件查询账务数据</span></span><br><span class="line"><span class="comment">* 提供用户的输入日期,开始日期结束日期</span></span><br><span class="line"><span class="comment">* 就2个日期,传递到controller层</span></span><br><span class="line"><span class="comment">* 调用controller的方法,传递2个日期参数</span></span><br><span class="line"><span class="comment">* 获取到controller查询的结果集,打印出来</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span></span>&#123;</span><br><span class="line"> System.out.println(<span class="string">"选择条件查询,输入日期格式XXXX-XX-XX"</span>);</span><br><span class="line"> Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"> System.out.print(<span class="string">"请输入开始日期:"</span>);</span><br><span class="line"> String startDate = sc.nextLine();</span><br><span class="line"> System.out.print(<span class="string">"请输入结果日期:"</span>);</span><br><span class="line"> String endDate = sc.nextLine();</span><br><span class="line"> <span class="comment">//调用controller层的方法,传递日期,获取查询结果集</span></span><br><span class="line"> List&lt;ZhangWu&gt; list = controller.select(startDate, endDate);</span><br><span class="line"> <span class="keyword">if</span>(list.size()!=<span class="number">0</span>)</span><br><span class="line"> print(list);</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> System.out.println(<span class="string">"没有查询到数据"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出账务数据方法,接收List集合,遍历集合,输出表格</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(List&lt;ZhangWu&gt; list)</span> </span>&#123;</span><br><span class="line"><span class="comment">//输出表头</span></span><br><span class="line"> System.out.println(<span class="string">"ID\t\t类别\t\t账户\t\t金额\t\t时间\t\t说明"</span>);</span><br><span class="line"> <span class="comment">//遍历集合,结果输出控制台</span></span><br><span class="line"> <span class="keyword">for</span>(ZhangWu zw : list)&#123;</span><br><span class="line"> System.out.println(zw.getZwid()+<span class="string">"\t\t"</span>+zw.getFlname()+<span class="string">"\t\t"</span>+zw.getZhanghu()+<span class="string">"\t\t"</span>+</span><br><span class="line"> zw.getMoney()+<span class="string">"\t\t"</span>+zw.getCreatetime()+<span class="string">"\t"</span>+zw.getDescription());</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="21添加账务功能分析"><a href="#21添加账务功能分析" class="headerlink" title="21添加账务功能分析"></a>21添加账务功能分析</h3><ul><li>A: 添加账务功能分析</li><li>a: 编写MainView类中addZhangWu方法<br>…..<em> 键盘输入新添加的账务信息<br>…..</em> 调用ZhangWuService类中addZhangWu方法，用来指定账务的添加<br>…..* 添加完毕后，使用输出语句，提示“添加账务成功！”</li><li>b: 编写ZhangWuService类中addZhangWu方法<br>…..* 调用ZhangWuDao类中addZhangWu方法，用来指定账务的添加</li><li>c: 编写ZhangWuDao类中addZhangWu方法<br>…..* 通过QueryRunner对象，调用update方法更新数据库表gjp_zhangwu，完成指定账务添加到数据库表中</li></ul><h3 id="22添加账务功能菜单和输入功能实现"><a href="#22添加账务功能菜单和输入功能实现" class="headerlink" title="22添加账务功能菜单和输入功能实现"></a>22添加账务功能菜单和输入功能实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">* A: 添加账务功能菜单和输入功能实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类addZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 定义方法addZhangWu</span></span><br><span class="line"><span class="comment">* 添加账务的方法，用户在界面中选择菜单1的时候调用、</span></span><br><span class="line"><span class="comment">* 实现思想：</span></span><br><span class="line"><span class="comment">*   接收键盘输入，5项输入，调用controller层方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addZhangWu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"选择的添加账务功能，请输入以下内容"</span>);</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"输入分类名称"</span>);</span><br><span class="line">String flname = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入金额"</span>);</span><br><span class="line"><span class="keyword">double</span> money = sc.nextDouble();</span><br><span class="line">System.out.println(<span class="string">"输入账户"</span>);</span><br><span class="line">String zhanghu = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入日期：格式XXXX-XX-xx"</span>);</span><br><span class="line">String createtime = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入具体描述"</span>);</span><br><span class="line">String description = sc.next();</span><br><span class="line"><span class="comment">//将接收到的数据，调用controller层的方法，传递参数，实现数据添加</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="23添加账务功能控制层-业务层实现"><a href="#23添加账务功能控制层-业务层实现" class="headerlink" title="23添加账务功能控制层,业务层实现"></a>23添加账务功能控制层,业务层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">* A: 添加账务功能控制层,业务层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.controller包中的ZhangWuController类addZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现账务添加功能</span></span><br><span class="line"><span class="comment"> * 由视图层调用，传递参数(传递过来的参数不能是5个数据，传递的是一个ZhangWu类型的对象)</span></span><br><span class="line"><span class="comment"> * 本方法调用service层的方法，传递ZhangWu对象，获取到添加后的结果集(添加成功影响的行数，int)</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addZhangWu</span><span class="params">(ZhangWu zw)</span> </span>&#123;</span><br><span class="line">service.addZhangWu(zw);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">——————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* cn.itcast.gjp.service包中的ZhangWuService类addZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现添加账务</span></span><br><span class="line"><span class="comment"> * 是由控制层调用，传递ZhangWu对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addZhangWu</span><span class="params">(ZhangWu zw)</span> </span>&#123;</span><br><span class="line">dao.addZhangWu(zw);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">——————————————————————————————————————————————————————————————————————————————————————</span><br><span class="line">* cn.itcast.gjp.dao包中的ZhangWuDao类addZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现添加账务功能</span></span><br><span class="line"><span class="comment"> * 由业务层调用，传递ZhangWu对象</span></span><br><span class="line"><span class="comment"> * 将ZhangWu对象中的数据，添加到数据库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addZhangWu</span><span class="params">(ZhangWu zw)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="24添加账务功能dao层实现"><a href="#24添加账务功能dao层实现" class="headerlink" title="24添加账务功能dao层实现"></a>24添加账务功能dao层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">* A: 添加账务功能dao层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.dao包中的ZhangWuDao类的addZhangWu方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addZhangWu</span><span class="params">(ZhangWu zw)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"> <span class="comment">//拼接添加数据的sql</span></span><br><span class="line">String sql = <span class="string">"INSERT INTO gjp_zhangwu (flname,money,zhanghu,createtime,description) VALUES(?,?,?,?,?)"</span>;</span><br><span class="line"><span class="comment">//创建对象数组，处处5个占位符的实际参数</span></span><br><span class="line"><span class="comment">//实际参数来源是传递过来的对象ZhangWu</span></span><br><span class="line">Object[] params = &#123;zw.getFlname(),zw.getMoney(),zw.getZhanghu(),zw.getCreatetime(),zw.getDescription()&#125;;</span><br><span class="line"><span class="comment">//调用qr对象中的方法update执行添加</span></span><br><span class="line">qr.update(sql, params);</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException ex) &#123;</span><br><span class="line">System.out.println(ex);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"账务添加失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="25添加账务功能view层实现"><a href="#25添加账务功能view层实现" class="headerlink" title="25添加账务功能view层实现"></a>25添加账务功能view层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">* A: 添加账务功能view层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类addZhangWu方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addZhangWu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"选择的添加账务功能，请输入以下内容"</span>);</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"输入分类名称"</span>);</span><br><span class="line">String flname = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入金额"</span>);</span><br><span class="line"><span class="keyword">double</span> money = sc.nextDouble();</span><br><span class="line">System.out.println(<span class="string">"输入账户"</span>);</span><br><span class="line">String zhanghu = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入日期：格式XXXX-XX-xx"</span>);</span><br><span class="line">String createtime = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入具体描述"</span>);</span><br><span class="line">String description = sc.next();</span><br><span class="line"><span class="comment">//将接收到的数据，调用controller层的方法，传递参数，实现数据添加</span></span><br><span class="line"><span class="comment">//将用户输入的所有参数，封装成ZhangWu对象</span></span><br><span class="line">ZhangWu zw = <span class="keyword">new</span> ZhangWu(<span class="number">0</span>, flname, money, zhanghu, createtime, description);</span><br><span class="line">controller.addZhangWu(zw);</span><br><span class="line">System.out.println(<span class="string">"恭喜添加账务成功"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="26编辑账务功能分析"><a href="#26编辑账务功能分析" class="headerlink" title="26编辑账务功能分析"></a>26编辑账务功能分析</h3><ul><li>A: 编辑账务功能分析</li><li>a: 编写MainView类中editZhangWu方法<br>…..<em> 键盘输入要编辑的账务信息ID号<br>…..</em> 键盘输入要修改的账务信息内容<br>…..<em> 调用ZhangWuService类中editZhangWu方法，用来将指定的账务信息进行更新<br>…..</em> 更新完毕后，使用输出语句，提示 “编辑账务成功！”</li><li>b: 编写ZhangWuService类中editZhangWu方法<br>…..* 调用ZhangWuDao类中editZhangWu方法，用来将指定的账务信息进行更新</li><li>c: 编写ZhangWuDao类中editZhangWu方法<br>…..* 通过QueryRunner对象，调用update方法更新数据库表gjp_zhangwu，完成数据库表中指定账务更新操作</li></ul><h3 id="27编辑账务功能功能之前实现查询所有"><a href="#27编辑账务功能功能之前实现查询所有" class="headerlink" title="27编辑账务功能功能之前实现查询所有"></a>27编辑账务功能功能之前实现查询所有</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* A: 编辑账务功能功能之前实现查询所有</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类editZhangWu方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editZhangWu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//调用查询所有账务数据的功能，显示出来</span></span><br><span class="line"><span class="comment">//看到所有数据，从中选择一项，进行修改</span></span><br><span class="line">selectAll();</span><br><span class="line">System.out.println(<span class="string">"选择的是编辑功能，请输入数据"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="28编辑账务功能菜单实现"><a href="#28编辑账务功能菜单实现" class="headerlink" title="28编辑账务功能菜单实现"></a>28编辑账务功能菜单实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">* A: 编辑账务功能菜单实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类editZhangWu方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editZhangWu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//调用查询所有账务数据的功能，显示出来</span></span><br><span class="line"><span class="comment">//看到所有数据，从中选择一项，进行修改</span></span><br><span class="line">selectAll();</span><br><span class="line">System.out.println(<span class="string">"选择的是编辑功能，请输入数据"</span>);</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.print(<span class="string">"请输入ID"</span>);</span><br><span class="line"><span class="keyword">int</span> zwid = sc.nextInt();</span><br><span class="line">System.out.println(<span class="string">"输入分类名称"</span>);</span><br><span class="line">String flname = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入金额"</span>);</span><br><span class="line"><span class="keyword">double</span> money = sc.nextDouble();</span><br><span class="line">System.out.println(<span class="string">"输入账户"</span>);</span><br><span class="line">String zhanghu = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入日期：格式XXXX-XX-xx"</span>);</span><br><span class="line">String createtime = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入具体描述"</span>);</span><br><span class="line">String description = sc.next();</span><br><span class="line"><span class="comment">//将用户输入的数据，封装到ZhangWu对象中</span></span><br><span class="line"><span class="comment">//用户输入的ID，必须封装到到对象中</span></span><br><span class="line">ZhangWu zw = <span class="keyword">new</span> ZhangWu(zwid, flname, money, zhanghu, createtime, description);</span><br><span class="line"><span class="comment">//调用controller层中的方法，实现编辑账务</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="29编辑账务功能控制层-业务层实现"><a href="#29编辑账务功能控制层-业务层实现" class="headerlink" title="29编辑账务功能控制层,业务层实现"></a>29编辑账务功能控制层,业务层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">* A: 编辑账务功能控制层,业务层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.controller包中的ZhangWuController类editZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现编辑账务功能</span></span><br><span class="line"><span class="comment"> * 由视图层调用，传递参数，也是ZhangWu对象</span></span><br><span class="line"><span class="comment"> * 调用service层的方法，也是ZhangWu对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editZhangWu</span><span class="params">(ZhangWu zw)</span> </span>&#123;</span><br><span class="line">service.editZhangWu(zw);</span><br><span class="line">&#125;</span><br><span class="line">* cn.itcast.gjp.service包中的ZhangWuService类editZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现编辑账务</span></span><br><span class="line"><span class="comment"> * 由控制层调用，传递ZhangWu对象</span></span><br><span class="line"><span class="comment"> * 调用dao层的方法，传递ZhangWu对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editZhangWu</span><span class="params">(ZhangWu zw)</span> </span>&#123;</span><br><span class="line">dao.editZhangWu(zw);</span><br><span class="line">&#125;</span><br><span class="line">* cn.itcast.gjp.dao包中的ZhangWuDao类editZhangWu方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editZhangWu</span><span class="params">(ZhangWu zw)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="30编辑账务功能dao层实现"><a href="#30编辑账务功能dao层实现" class="headerlink" title="30编辑账务功能dao层实现"></a>30编辑账务功能dao层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">* A：编辑账务功能dao层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.dao包中的ZhangWuDao类editZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现编辑功能</span></span><br><span class="line"><span class="comment"> * 由业务层调用，传递ZhangWu对象</span></span><br><span class="line"><span class="comment"> * 将对象中的数据，更新到数据表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editZhangWu</span><span class="params">(ZhangWu zw)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//更新数据的SQL</span></span><br><span class="line">String sql = <span class="string">"UPDATE zhangwu SET flname=?,money=?,zhanghu=?,createtime=?,description=? WHERE zwid=?"</span>;</span><br><span class="line"><span class="comment">//定义对象数组，封装所有数据</span></span><br><span class="line">Object[] params = &#123;zw.getFlname(),zw.getMoney(),zw.getZhanghu(),zw.getCreatetime(),zw.getDescription(),zw.getZwid()&#125;;</span><br><span class="line"><span class="comment">//调用qr对象方法update执行更新</span></span><br><span class="line">qr.update(sql, params);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">System.out.println(ex);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"编辑账务失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="31编辑账务功能view层实现"><a href="#31编辑账务功能view层实现" class="headerlink" title="31编辑账务功能view层实现"></a>31编辑账务功能view层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">* A: 编辑账务功能view层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类editZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现对账务的编辑功能</span></span><br><span class="line"><span class="comment"> * 实现思想：</span></span><br><span class="line"><span class="comment"> * 接收用户的输入的信息</span></span><br><span class="line"><span class="comment"> *  封装成ZhangWu对象</span></span><br><span class="line"><span class="comment"> *  调用控制层的方法，传递ZhangWu对象，实现编辑</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">editZhangWu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//调用查询所有账务数据的功能，显示出来</span></span><br><span class="line"><span class="comment">//看到所有数据，从中选择一项，进行修改</span></span><br><span class="line">selectAll();</span><br><span class="line">System.out.println(<span class="string">"选择的是编辑功能，请输入数据"</span>);</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.print(<span class="string">"请输入ID"</span>);</span><br><span class="line"><span class="keyword">int</span> zwid = sc.nextInt();</span><br><span class="line">System.out.println(<span class="string">"输入分类名称"</span>);</span><br><span class="line">String flname = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入金额"</span>);</span><br><span class="line"><span class="keyword">double</span> money = sc.nextDouble();</span><br><span class="line">System.out.println(<span class="string">"输入账户"</span>);</span><br><span class="line">String zhanghu = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入日期：格式XXXX-XX-xx"</span>);</span><br><span class="line">String createtime = sc.next();</span><br><span class="line">System.out.println(<span class="string">"输入具体描述"</span>);</span><br><span class="line">String description = sc.next();</span><br><span class="line"><span class="comment">//将用户输入的数据，封装到ZhangWu对象中</span></span><br><span class="line"><span class="comment">//用户输入的ID，必须封装到到对象中</span></span><br><span class="line">ZhangWu zw = <span class="keyword">new</span> ZhangWu(zwid, flname, money, zhanghu, createtime, description);</span><br><span class="line"><span class="comment">//调用controller层中的方法，实现编辑账务</span></span><br><span class="line">controller.editZhangWu(zw);</span><br><span class="line">System.out.println(<span class="string">"账务编辑成功"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="32删除账务功能分析"><a href="#32删除账务功能分析" class="headerlink" title="32删除账务功能分析"></a>32删除账务功能分析</h3><ul><li>A: 删除账务功能分析</li><li>a: 编写MainView类中deleteZhangWu方法<br>…..<em> 键盘输入要删除的账务信息ID号<br>…..</em> 调用ZhangWuService类中deleteZhangWu方法，用来将指定的账务信息删除<br>…..* 删除完毕后，使用输出语句，提示 “删除账务成功！”</li><li>b: 编写ZhangWuService类中deleteZhangWu方法<br>…..* 调用ZhangWuDao类中deleteZhangWu方法，用来将指定的账务信息删除</li><li>c: 编写ZhangWuDao类中deleteZhangWu方法<br>…..* 通过QueryRunner对象，调用update方法更新数据库表gjp_zhangwu，完成数据库表中指定账务删除操作</li></ul><h3 id="33删除账务功能菜单实现"><a href="#33删除账务功能菜单实现" class="headerlink" title="33删除账务功能菜单实现"></a>33删除账务功能菜单实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">* A: 删除账务功能菜单实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类deleteZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现账务删除</span></span><br><span class="line"><span class="comment"> * 实现思想：</span></span><br><span class="line"><span class="comment"> * 接收用户的输入，输入一个主键数据</span></span><br><span class="line"><span class="comment"> *  调用控制层方法，传递一个主键</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteZhangWu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//调用查询所有账务数据的功能，显示出来</span></span><br><span class="line"><span class="comment">//看到所有数据，从中选择一项，进行修改</span></span><br><span class="line">selectAll();</span><br><span class="line">System.out.println(<span class="string">"选择的是删除功能，请输入序号即可"</span>);</span><br><span class="line"><span class="keyword">int</span> zwid = <span class="keyword">new</span> Scanner(System.in).nextInt();</span><br><span class="line"><span class="comment">//调用控制层方法，传递主键id即可</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="34删除账务功能控制层-业务层实现"><a href="#34删除账务功能控制层-业务层实现" class="headerlink" title="34删除账务功能控制层,业务层实现"></a>34删除账务功能控制层,业务层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">* A: 删除账务功能控制层,业务层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.controller包中的ZhangWuController类deleteZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现删除功能</span></span><br><span class="line"><span class="comment"> * 视图层调用，传递int类型主键</span></span><br><span class="line"><span class="comment"> * 调用service层方法，传递int主键</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteZhangWu</span><span class="params">(<span class="keyword">int</span> zwid)</span> </span>&#123;</span><br><span class="line">service.deleteZhangWu(zwid);</span><br><span class="line">&#125;</span><br><span class="line">* cn.itcast.gjp.service包中的ZhangWuService类deleteZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现删除账务功能</span></span><br><span class="line"><span class="comment"> * 由控制层调用，传递主键id</span></span><br><span class="line"><span class="comment"> * 调用dao层方法，传递主键id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteZhangWu</span><span class="params">(<span class="keyword">int</span> zwid)</span> </span>&#123;</span><br><span class="line">dao.deleteZhangWu(zwid);</span><br><span class="line">&#125;</span><br><span class="line">* cn.itcast.gjp.dao包中的ZhangWuDao类deleteZhangWu方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteZhangWu</span><span class="params">(<span class="keyword">int</span> zwid)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="35删除账务功能dao实现"><a href="#35删除账务功能dao实现" class="headerlink" title="35删除账务功能dao实现"></a>35删除账务功能dao实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">* A: 删除账务功能dao实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.dao包中的ZhangWuDao类deleteZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现删除业务</span></span><br><span class="line"><span class="comment"> * 业务层调用，传递主键id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteZhangWu</span><span class="params">(<span class="keyword">int</span> zwid)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//拼写删除数据SQL</span></span><br><span class="line">String sql = <span class="string">"DELETE FROM gjp_zhangwu WHERE zwid=?"</span>;</span><br><span class="line">qr.update(sql, zwid);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">System.out.println(ex);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"删除账务失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="36删除账务功能view层实现"><a href="#36删除账务功能view层实现" class="headerlink" title="36删除账务功能view层实现"></a>36删除账务功能view层实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">* A: 删除账务功能view层实现</span><br><span class="line">* a: 案例核心代码</span><br><span class="line">* cn.itcast.gjp.view包中建立MainView类editZhangWu方法</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法，实现账务删除</span></span><br><span class="line"><span class="comment"> * 实现思想：</span></span><br><span class="line"><span class="comment"> * 接收用户的输入，输入一个主键数据</span></span><br><span class="line"><span class="comment"> *  调用控制层方法，传递一个主键</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteZhangWu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//调用查询所有账务数据的功能，显示出来</span></span><br><span class="line"><span class="comment">//看到所有数据，从中选择一项，进行修改</span></span><br><span class="line">selectAll();</span><br><span class="line">System.out.println(<span class="string">"选择的是删除功能，请输入序号即可"</span>);</span><br><span class="line"><span class="keyword">int</span> zwid = <span class="keyword">new</span> Scanner(System.in).nextInt();</span><br><span class="line"><span class="comment">//调用控制层方法，传递主键id即可</span></span><br><span class="line">controller.deleteZhangWu(zwid);</span><br><span class="line">System.out.println(<span class="string">"删除账务成功"</span>);</span><br></pre></td></tr></table></figure><h3 id="37总结"><a href="#37总结" class="headerlink" title="37总结"></a>37总结</h3><p>…..<strong>view层的作用是“界面”，用来完成数据显示给用户</strong>。当前项目view层中，包含了Controller层代码。<br>…..<strong>Controller层的作用是“调度”，调度的是表现层view和业务层Service</strong>，主要功能分为：<strong>一是把表现层的数据交给业务层处理；二是把业务层返回的数据交给表现层显示</strong>。</p><p>…..<strong>Service层的作用是“业务”，我们也可以把“业务”当成是“功能”</strong>。今后要写<strong>的大型项目代码量最大的就是Service层</strong>。<br>…..<strong>DAO层是操作数据库</strong>，现在我们使用的是commons-dbutils工具来简化JDBC，所以我们发现代码不多，比较简单。最后我们还会学习其他DAO层的工具，例如：<strong>hibernate和mybatis，他们都是JDBC的封装</strong>，用来简化JDBC。</p>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297638/samples/java%20files/photo-1546398770-b134faf3de65.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;1、管家婆家庭记账项目&lt;br&gt;2、熟练View层、Service层、Dao层之间的方法相互调用操作&lt;br&gt;3、熟练dbutils操作数据库表完成增删改查&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://leesen998.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="java" scheme="https://leesen998.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记——基础28(DBUtils, DBCP连接池)</title>
    <link href="https://leesen998.github.io/2016/11/29/day30%E7%AC%94%E8%AE%B0/"/>
    <id>https://leesen998.github.io/2016/11/29/day30笔记/</id>
    <published>2016-11-29T11:48:29.000Z</published>
    <updated>2019-01-21T12:44:12.565Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297590/samples/java%20files/photo-1545382142-c3d9b8168eeb.jpg" alt="" style="width:100%"></p><p>1、DBUtils<br>2、DBCP连接池</p><a id="more"></a>    <h3 id="01DButils工具类的介绍个三个核心类"><a href="#01DButils工具类的介绍个三个核心类" class="headerlink" title="01DButils工具类的介绍个三个核心类"></a>01DButils工具类的介绍个三个核心类</h3><ul><li>A: DButils工具类的介绍个<strong>三个核心类</strong></li><li>a: 概述</li><li>DBUtils是java编程中的数据库操作实用工具，小巧简单实用。</li><li>DBUtils封装了对JDBC的操作，简化了JDBC操作，可以少写代码。</li><li>DBUtils就是JDBC的简化开发工具包。需要项目导入commons-dbutils-1.6.jar才能够正常使用DBUtils工具。</li><li>b: Dbutils三个核心功能介绍</li><li><strong>QueryRunner中提供对sql语句操作的API.</strong><br>…..      <em> update(Connection conn, String sql, Object… params) ，用来完成表数据的增加、删除、更新操作<br>…..      </em> query(Connection conn, String sql, ResultSetHandler<t> rsh, Object… params) ，用来完成表数据的查询操作</t></li><li><strong>ResultSetHandler接口，用于定义select操作后，怎样封装结果集</strong>.</li><li><strong>DbUtils类，它就是一个工具类,定义了关闭资源与事务处理的方法</strong></li></ul><h3 id="02事务的简单介绍-此知识点后续详细介绍"><a href="#02事务的简单介绍-此知识点后续详细介绍" class="headerlink" title="02事务的简单介绍(此知识点后续详细介绍)"></a>02事务的简单介绍(此知识点后续详细介绍)</h3><ul><li>A: 事务的简单介绍<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548037667/samples/java%20files/%E4%BA%8B%E5%8A%A1.jpg" alt=""></li></ul><h3 id="03QueryRunner类的update方法介绍"><a href="#03QueryRunner类的update方法介绍" class="headerlink" title="03QueryRunner类的update方法介绍"></a>03QueryRunner类的update方法介绍</h3><ul><li>A：QueryRunner类的update方法介绍</li><li>a: 方法介绍</li><li>update(Connection conn, String sql, Object… params) ，用来完成表数据的增加、删除、更新操作</li><li>使用QueryRunner类,实现对数据表的insert delete update</li><li><strong>调用QueryRunner类的方法 update (Connection con,String sql,Object…param)</strong><ul><li><strong> Object…param 可变参数,Object类型,SQL语句会出现?占位符</strong></li><li>数据库连接对象,自定义的工具类传递</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(Connection conn, String sql, Object... params)</span> ，</span></span><br><span class="line"><span class="function">用来完成表数据的增加、删除、更新操作</span></span><br><span class="line"><span class="function">返回：成功操作的行数：The number of rows updated.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> &lt;T&gt; T <span class="title">query</span><span class="params">(Connection conn, String sql, ResultSetHandler&lt;T&gt; rsh, Object... params)</span> ，</span></span><br><span class="line"><span class="function">用来完成表数据的查询操作</span></span><br></pre></td></tr></table></figure><h3 id="04QueryRunner类实现insert添加数据"><a href="#04QueryRunner类实现insert添加数据" class="headerlink" title="04QueryRunner类实现insert添加数据"></a>04QueryRunner类实现insert添加数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">* A: QueryRunner类实现insert添加数据</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">insert();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义方法,使用QueryRunner类的方法update向数据表中,添加数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"><span class="comment">//创建QueryRunner类对象</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">String sql = <span class="string">"INSERT INTO sort (sname,sprice,sdesc)VALUES(?,?,?)"</span>;</span><br><span class="line"><span class="comment">//将三个?占位符的实际参数,写在数组中</span></span><br><span class="line">Object[] params = &#123;<span class="string">"体育用品"</span>,<span class="number">289.32</span>,<span class="string">"购买体育用品"</span>&#125;;</span><br><span class="line"><span class="comment">//调用QueryRunner类的方法update执行SQL语句</span></span><br><span class="line"><span class="keyword">int</span> row = qr.update(con, sql, params);</span><br><span class="line">System.out.println(row);</span><br><span class="line">DbUtils.closeQuietly(con);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="05QueryRunner类实现update修改数据"><a href="#05QueryRunner类实现update修改数据" class="headerlink" title="05QueryRunner类实现update修改数据"></a>05QueryRunner类实现update修改数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">* A: QueryRunner类实现update修改数据</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">update();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  定义方法,使用QueryRunner类的方法update将数据表的数据修改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"><span class="comment">//创建QueryRunner类对象</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line"><span class="comment">//写修改数据的SQL语句</span></span><br><span class="line">String sql = <span class="string">"UPDATE sort SET sname=?,sprice=?,sdesc=? WHERE sid=?"</span>;</span><br><span class="line"><span class="comment">//定义Object数组,存储?中的参数</span></span><br><span class="line">Object[] params = &#123;<span class="string">"花卉"</span>,<span class="number">100.88</span>,<span class="string">"情人节玫瑰花"</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="comment">//调用QueryRunner方法update</span></span><br><span class="line"><span class="keyword">int</span> row = qr.update(con, sql, params);</span><br><span class="line">System.out.println(row);</span><br><span class="line">DbUtils.closeQuietly(con);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="06QueryRunner类实现delete删除数据"><a href="#06QueryRunner类实现delete删除数据" class="headerlink" title="06QueryRunner类实现delete删除数据"></a>06QueryRunner类实现delete删除数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* A: QueryRunner类实现delete删除数据</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">delete();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  定义方法,使用QueryRunner类的方法delete将数据表的数据删除</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"><span class="comment">//创建QueryRunner类对象</span></span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line"><span class="comment">//写删除的SQL语句</span></span><br><span class="line">String sql = <span class="string">"DELETE FROM sort WHERE sid=?"</span>;</span><br><span class="line"><span class="comment">//调用QueryRunner方法update</span></span><br><span class="line"><span class="keyword">int</span> row = qr.update(con, sql, <span class="number">8</span>);</span><br><span class="line">System.out.println(row);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  判断insert,update,delete执行是否成功</span></span><br><span class="line"><span class="comment"> *  对返回值row判断</span></span><br><span class="line"><span class="comment"> *  if(row&gt;0) 执行成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">DbUtils.closeQuietly(con);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="07JavaBean类"><a href="#07JavaBean类" class="headerlink" title="07JavaBean类"></a>07JavaBean类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">* A: JavaBean类</span><br><span class="line">* a: 概念</span><br><span class="line">* JavaBean就是一个类，在开发中常用封装数据。具有如下特性</span><br><span class="line"><span class="number">1</span>.<span class="string">"需要实现接口：java.io.Serializable ，通常实现接口这步骤省略了，不会影响程序。"</span></span><br><span class="line"><span class="number">2</span>.提供私有字段：<span class="keyword">private</span> 类型 <span class="string">"字段名"</span>;</span><br><span class="line"><span class="number">3</span>.<span class="string">"提供getter/setter方法："</span></span><br><span class="line"><span class="number">4</span>.<span class="string">"提供无参构造"</span></span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 账务类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZhangWu</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line"><span class="keyword">private</span> String parent;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ZhangWu</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> money;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(<span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.money = money;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getParent</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> parent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParent</span><span class="params">(String parent)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.parent = parent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123; <span class="comment">//该方法可以省略</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"ZhangWu [id="</span> + id + <span class="string">", name="</span> + name + <span class="string">", money="</span> + money + <span class="string">", parent="</span> + parent + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="08DBUtils工具类结果集处理的方式"><a href="#08DBUtils工具类结果集处理的方式" class="headerlink" title="08DBUtils工具类结果集处理的方式"></a>08DBUtils工具类结果集处理的方式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">* A: DBUtils工具类结果集处理的方式</span><br><span class="line">* </span><br><span class="line">* a: QueryRunner实现查询操作</span><br><span class="line">* &lt;T&gt; <span class="function">T <span class="title">query</span><span class="params">(Connection conn, String sql, ResultSetHandler&lt;T&gt; rsh, Object... params)</span> ，</span></span><br><span class="line"><span class="function">* 用来完成表数据的查询操作</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">* b: ResultSetHandler结果集处理类</span></span><br><span class="line"><span class="function">* ArrayHandler</span></span><br><span class="line"><span class="function">* 将结果集中的第一条记录封装到一个Object[]数组中，数组中的每一个元素就是这条记录中的每一个字段的值</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* ArrayListHandler</span></span><br><span class="line"><span class="function">* 将结果集中的每一条记录都封装到一个Object[]数组中，将这些数组在封装到List集合中。</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* BeanHandler</span></span><br><span class="line"><span class="function">* 将结果集中第一条记录封装到一个指定的javaBean中。</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* BeanListHandler</span></span><br><span class="line"><span class="function">* 将结果集中每一条记录封装到指定的javaBean中，将这些javaBean在封装到List集合中</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* ColumnListHandler</span></span><br><span class="line"><span class="function">* 将结果集中指定的列的字段值，封装到一个List集合中</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* ScalarHandler</span></span><br><span class="line"><span class="function">* 它是用于单数据。例如select <span class="title">count</span><span class="params">(*)</span> from 表操作。</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* MapHandler</span></span><br><span class="line"><span class="function">* 将结果集第一行封装到Map集合中,Key 列名, Value 该列数据</span></span><br><span class="line"><span class="function">* </span></span><br><span class="line"><span class="function">* MapListHandler</span></span><br><span class="line"><span class="function">* 将结果集第一行封装到Map集合中,Key 列名, Value 该列数据,Map集合存储到List集合</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548040769/samples/java%20files/%E7%BB%93%E6%9E%9C%E9%9B%86.jpg" alt=""></p><h3 id="09QueryRunner类的方法query"><a href="#09QueryRunner类的方法query" class="headerlink" title="09QueryRunner类的方法query"></a>09QueryRunner类的方法query</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* A: QueryRunner类的方法query</span><br><span class="line">* a: QueryRunner数据查询操作</span><br><span class="line">* 调用QueryRunner类方法：</span><br><span class="line">* &lt;T&gt; <span class="function">T <span class="title">query</span><span class="params">(Connection con,String sql,ResultSetHandler r, Object..params)</span></span></span><br><span class="line"><span class="function">*  ResultSetHandler r 结果集的处理方式,传递ResultSetHandler接口实现类</span></span><br><span class="line"><span class="function">*  Object..params SQL语句中的?占位符</span></span><br><span class="line"><span class="function">*  注意: query方法返回值,返回的是T 泛型, 具体返回值类型,跟随结果集处理方式变化</span>;</span><br><span class="line">* b: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo1</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10结果集处理ArrayHandler"><a href="#10结果集处理ArrayHandler" class="headerlink" title="10结果集处理ArrayHandler"></a>10结果集处理ArrayHandler</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">* A: 结果集处理ArrayHandler</span><br><span class="line">* 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo1</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">arrayHandler();</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  结果集第一种处理方法, ArrayHandler</span></span><br><span class="line"><span class="string"> *  将结果集的第一行存储到对象数组中  Object[]</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arrayHandler</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">String sql = <span class="string">"SELECT * FROM sort"</span>;</span><br><span class="line"><span class="comment">//调用方法query执行查询,传递连接对象,SQL语句,结果集处理方式的实现类</span></span><br><span class="line"><span class="comment">//返回对象数组</span></span><br><span class="line">Object[] result = qr.query(con, sql, <span class="keyword">new</span> ArrayHandler());</span><br><span class="line"><span class="keyword">for</span>(Object obj : result)&#123;</span><br><span class="line">System.out.print(obj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11结果集处理ArrayListHandler"><a href="#11结果集处理ArrayListHandler" class="headerlink" title="11结果集处理ArrayListHandler"></a>11结果集处理ArrayListHandler</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">* A: 结果集处理ArrayListHandler</span><br><span class="line">* </span><br><span class="line">*  <span class="string">"qr.query(con, sql, new ArrayListHandler());返回的是： "</span>List&lt;Object[]&gt;<span class="string">" "</span></span><br><span class="line">*  </span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo1</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">arrayListHandler();</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  结果集第二种处理方法,ArrayListHandler</span></span><br><span class="line"><span class="string"> *  将结果集的"</span>每一行<span class="string">",封装到对象数组中, 出现很多对象数组</span></span><br><span class="line"><span class="string"> *  对象数组存储到List集合： "</span>List&lt;Object[]&gt;<span class="string">"</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arrayListHandler</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">String sql = <span class="string">"SELECT * FROM sort"</span>;</span><br><span class="line"><span class="comment">//调用query方法,结果集处理的参数上,传递实现类ArrayListHandler</span></span><br><span class="line"><span class="comment">//方法返回值 每行是一个对象数组,存储到List</span></span><br><span class="line">List&lt;Object[]&gt; result=  qr.query(con, sql, <span class="keyword">new</span> ArrayListHandler());</span><br><span class="line"></span><br><span class="line"><span class="comment">//集合的遍历</span></span><br><span class="line"><span class="keyword">for</span>( Object[] objs  : result)&#123;</span><br><span class="line"><span class="comment">//遍历对象数组</span></span><br><span class="line"><span class="keyword">for</span>(Object obj : objs)&#123;</span><br><span class="line">System.out.print(obj+<span class="string">"  "</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12结果集处理BeanHandler"><a href="#12结果集处理BeanHandler" class="headerlink" title="12结果集处理BeanHandler"></a>12结果集处理BeanHandler</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">* A: 结果集处理BeanHandler</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo1</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">beanHandler();</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  结果集第三种处理方法,BeanHandler</span></span><br><span class="line"><span class="string"> *  将结果集的"</span>一行数据<span class="string">"(默认第一行),封装成JavaBean对象</span></span><br><span class="line"><span class="string"> *  注意: 被封装成数据到JavaBean对象, Sort类"</span>必须<span class="string">"有"</span>空参数构造<span class="string">"</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">beanHandler</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">String sql = <span class="string">"SELECT * FROM sort "</span>;</span><br><span class="line"><span class="comment">//调用方法,传递结果集实现类BeanHandler</span></span><br><span class="line"><span class="comment">//BeanHandler(Class&lt;T&gt; type) </span></span><br><span class="line">Sort s = qr.query(con, sql, <span class="keyword">new</span> BeanHandler&lt;Sort&gt;(Sort.class));</span><br><span class="line">System.out.println(s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13结果集处理BeanListHandler"><a href="#13结果集处理BeanListHandler" class="headerlink" title="13结果集处理BeanListHandler"></a>13结果集处理BeanListHandler</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">* A: 结果集处理BeanListHandler</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo1</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">beanListHander();</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  结果集第四种处理方法, BeanListHandler</span></span><br><span class="line"><span class="string"> *  结果集每一行数据,封装JavaBean对象</span></span><br><span class="line"><span class="string"> *  多个JavaBean对象,存储到List集合</span></span><br><span class="line"><span class="string"> *  返回的是：</span></span><br><span class="line"><span class="string"> *  "</span>List&lt;T&gt;<span class="string">","</span>具体而言是：List&lt;JavaBean类&gt;<span class="string">"</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">beanListHander</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">String sql = <span class="string">"SELECT * FROM sort "</span>;</span><br><span class="line"><span class="comment">//调用方法query,传递结果集处理实现类BeanListHandler</span></span><br><span class="line">List&lt;Sort&gt; list = qr.query(con, sql, <span class="keyword">new</span> BeanListHandler&lt;Sort&gt;(Sort.class));</span><br><span class="line"><span class="keyword">for</span>(Sort s : list)&#123;</span><br><span class="line">System.out.println(s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14结果集处理ColumnListHandler"><a href="#14结果集处理ColumnListHandler" class="headerlink" title="14结果集处理ColumnListHandler"></a>14结果集处理ColumnListHandler</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">* A: 结果集处理ColumnListHandler</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo1</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">columnListHandler();</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  结果集第五种处理方法,ColumnListHandler</span></span><br><span class="line"><span class="string"> *  结果集,指定列的数据,存储到List集合</span></span><br><span class="line"><span class="string"> *  返回的是：</span></span><br><span class="line"><span class="string"> List&lt;Object&gt; 每个列数据类型不同</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">columnListHandler</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">String sql = <span class="string">"SELECT * FROM sort "</span>;</span><br><span class="line"><span class="comment">//调用方法 query,传递结果集实现类ColumnListHandler</span></span><br><span class="line"><span class="comment">//实现类构造方法中,使用字符串的列名</span></span><br><span class="line">List&lt;Object&gt; list = qr.query(con, sql, <span class="keyword">new</span> ColumnListHandler&lt;Object&gt;(<span class="string">"sname"</span>));</span><br><span class="line"><span class="keyword">for</span>(Object obj : list)&#123;</span><br><span class="line">System.out.println(obj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15结果集处理ScalarHandler"><a href="#15结果集处理ScalarHandler" class="headerlink" title="15结果集处理ScalarHandler"></a>15结果集处理ScalarHandler</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">* A: 结果集处理ScalarHandler</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo1</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">scalarHandler();</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  结果集第六种处理方法,ScalarHandler</span></span><br><span class="line"><span class="string"> *  对于查询后,只有1个结果</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">scalarHandler</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">String sql = <span class="string">"SELECT COUNT(*) FROM sort"</span>;</span><br><span class="line"><span class="comment">//调用方法query,传递结果集处理实现类ScalarHandler</span></span><br><span class="line"><span class="keyword">long</span> count = qr.query(con, sql, <span class="keyword">new</span> ScalarHandler&lt;Long&gt;());</span><br><span class="line">System.out.println(count);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="16结果集处理MapHandler"><a href="#16结果集处理MapHandler" class="headerlink" title="16结果集处理MapHandler"></a>16结果集处理MapHandler</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">* A: 结果集处理MapHandler</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo1</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">mapHandler();</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  结果集第七种处理方法,MapHandler</span></span><br><span class="line"><span class="string"> *  将结果集第一行数据,封装到Map集合中</span></span><br><span class="line"><span class="string"> *  Map&lt;键,值&gt; 键:列名  值:这列的数据</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mapHandler</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">String sql = <span class="string">"SELECT  * FROM sort"</span>;</span><br><span class="line"><span class="comment">//调用方法query,传递结果集实现类MapHandler</span></span><br><span class="line"><span class="comment">//返回值: Map集合,Map接口实现类, 泛型</span></span><br><span class="line">Map&lt;String,Object&gt; map = qr.query(con, sql, <span class="keyword">new</span> MapHandler());</span><br><span class="line"><span class="comment">//遍历Map集合</span></span><br><span class="line"><span class="keyword">for</span>(String key : map.keySet())&#123;</span><br><span class="line">System.out.println(key+<span class="string">".."</span>+map.get(key));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="17结果集处理MapListHandler"><a href="#17结果集处理MapListHandler" class="headerlink" title="17结果集处理MapListHandler"></a>17结果集处理MapListHandler</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">* A: 结果集处理MapListHandlerr</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo1</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">mapListHandler();</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">"/*</span></span><br><span class="line"><span class="string"> *  结果集第八种处理方法,MapListHandler</span></span><br><span class="line"><span class="string"> *  将结果集每一行存储到Map集合,键:列名,值:数据</span></span><br><span class="line"><span class="string"> *  Map集合过多,存储到List集合</span></span><br><span class="line"><span class="string"> */"</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mapListHandler</span><span class="params">()</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">QueryRunner qr = <span class="keyword">new</span> QueryRunner();</span><br><span class="line">String sql = <span class="string">"SELECT  * FROM sort"</span>;</span><br><span class="line"><span class="comment">//调用方法query,传递结果集实现类MapListHandler</span></span><br><span class="line"><span class="comment">//返回值List集合, 存储的是Map集合</span></span><br><span class="line">List&lt;Map&lt;String,Object&gt;&gt; list = qr.query(con, sql, <span class="keyword">new</span> MapListHandler());</span><br><span class="line"><span class="comment">//遍历集合list</span></span><br><span class="line"><span class="keyword">for</span>( Map&lt;String,Object&gt; map : list )&#123;</span><br><span class="line"><span class="keyword">for</span>(String key : map.keySet())&#123;</span><br><span class="line">System.out.print(key+<span class="string">"..."</span>+map.get(key));</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="18连接池介绍"><a href="#18连接池介绍" class="headerlink" title="18连接池介绍"></a>18连接池介绍</h3><ul><li>A: 连接池介绍</li><li>a: 连接池介绍<br><strong>* 实际上就是存放连接的池子(容器)</strong></li><li>在开发中“获得连接”或“释放资源”是非常消耗系统资源的两个过程</li><li>为了解决此类性能问题，通常情况我们采用连接池技术，来共享连接Connection。</li><li>这样我们就不需要每次都创建连接、释放连接了，这些操作都交给了连接池<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548057751/samples/java%20files/%E8%BF%9E%E6%8E%A5%E6%B1%A0.png" alt=""></li></ul><h3 id="19连接池概念规范和DataSource接口"><a href="#19连接池概念规范和DataSource接口" class="headerlink" title="19连接池概念规范和DataSource接口"></a>19连接池概念规范和DataSource接口</h3><ul><li>A: 连接池概念规范和DataSource接口    </li><li>a: 连接池概念规范</li><li><strong>用池来管理Connection，这样可以重复使用Connection。</strong></li><li>不用自己来创建Connection，而是通过池来获取Connection对象<br><strong>* 使用完Connection后，调用Connection的close()方法也不会真的关闭Connection，而是把Connection“归还”给池</strong></li><li>连接池技术可以完成Connection对象的再次利用</li><li>b: DataSource接口</li><li><strong>Java为数据库连接池提供了公共的接口：javax.sql.DataSource</strong></li><li>各个厂商需要让自己的连接池实现这个接口。这样应用程序可以方便的切换不同厂商的连接池</li><li><strong>常见的连接池：DBCP、C3P0</strong></li></ul><h3 id="20DBCP连接池介绍"><a href="#20DBCP连接池介绍" class="headerlink" title="20DBCP连接池介绍"></a>20DBCP连接池介绍</h3><ul><li>A: DBCP连接池介绍</li><li>a: DBCP连接池介绍</li><li><strong>DBCP也是一个开源的连接池</strong>，是<strong>Apache Common成员之一</strong>，在企业开发中也比较常见，<strong>tomcat内置的连接池</strong></li><li>tomcat服务器简单介绍</li></ul><h3 id="21导入jar包"><a href="#21导入jar包" class="headerlink" title="21导入jar包"></a>21导入jar包</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* A: 导入jar包</span><br><span class="line">* a: jar包介绍</span><br><span class="line">* mysql-connector-java-<span class="number">5.1</span>.37-bin.jar：数据库驱动</span><br><span class="line">* commons-dbutils-<span class="number">1.6</span>.jar：提供QueryRunner类方便进行增删改查操作</span><br><span class="line">* commons-dbcp-<span class="number">1.4</span>.jar：</span><br><span class="line">* commons-pool-<span class="number">1.5</span>.6.jar：提供高效的数据库连接池技术</span><br><span class="line">* b: 导入jar包</span><br><span class="line">* 在项目根路径下建立文件夹lib</span><br><span class="line">* 拷贝以上jar包，选定拷贝的jar包/右键/Build Path/Add to Build Path</span><br></pre></td></tr></table></figure><h3 id="22BasicDataSource类的使用"><a href="#22BasicDataSource类的使用" class="headerlink" title="22BasicDataSource类的使用"></a>22BasicDataSource类的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">* A: BasicDataSource类的使用</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  连接池jar包中,定义好一个类 BasicDataSource</span></span><br><span class="line"><span class="comment"> *  实现类数据源的规范接口 javax.sql.DataSource</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSoruceDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//创建DataSource接口的实现类对象</span></span><br><span class="line"><span class="comment">//实现类, org.apache.commons.dbcp</span></span><br><span class="line">BasicDataSource dataSource = <span class="keyword">new</span> BasicDataSource();</span><br><span class="line"><span class="comment">//连接数据库的4个最基本信息,通过对象方法setXXX设置进来</span></span><br><span class="line">dataSource.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">dataSource.setUrl(<span class="string">"jdbc:mysql://localhost:3306/mybase"</span>);</span><br><span class="line">dataSource.setUsername(<span class="string">"root"</span>);</span><br><span class="line">dataSource.setPassword(<span class="string">"123"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//调用对象方法getConnection获取数据库的连接</span></span><br><span class="line">Connection con = dataSource.getConnection();</span><br><span class="line">System.out.println(con);</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException ex)&#123;</span><br><span class="line"><span class="comment">//System.out.println(ex);</span></span><br><span class="line">ex.printStackTrace();</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"数据库连接失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="23BasicDataSource类的常见配置"><a href="#23BasicDataSource类的常见配置" class="headerlink" title="23BasicDataSource类的常见配置"></a>23BasicDataSource类的常见配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">* A: BasicDataSource类的常见配置</span><br><span class="line">* a: 常见配置</span><br><span class="line">分类属性描述</span><br><span class="line">必须项</span><br><span class="line">driverClassName数据库驱动名称</span><br><span class="line">url数据库的地址</span><br><span class="line">username用户名</span><br><span class="line">password密码</span><br><span class="line">基本项（扩展）</span><br><span class="line">maxActive最大连接数量</span><br><span class="line">minIdle最小空闲连接</span><br><span class="line">maxIdle 最大空闲连接</span><br><span class="line">initialSize初始化连接</span><br><span class="line"></span><br><span class="line">参考文档：http:<span class="comment">//commons.apache.org/proper/commons-dbcp/configuration.html</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1548059740/samples/java%20files/%E5%B8%B8%E8%A7%81%E9%85%8D%E7%BD%AE.jpg" alt=""></p><h3 id="24实现数据库连接池工具类"><a href="#24实现数据库连接池工具类" class="headerlink" title="24实现数据库连接池工具类"></a>24实现数据库连接池工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">* A: 实现数据库连接池工具类</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  使用DBCP实现数据库的连接池</span></span><br><span class="line"><span class="comment"> *  连接池配置,自定义类,</span></span><br><span class="line"><span class="comment"> *  最基本四项完整</span></span><br><span class="line"><span class="comment"> *  对于数据库连接池其他配置,自定义</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp.BasicDataSource;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span></span>&#123;</span><br><span class="line"><span class="comment">//创建出BasicDataSource类对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> BasicDataSource datasource = <span class="keyword">new</span> BasicDataSource();</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态代码块,对象BasicDataSource对象中的配置,自定义</span></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"><span class="comment">//数据库连接信息,必须的</span></span><br><span class="line">datasource.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">datasource.setUrl(<span class="string">"jdbc:mysql://localhost:3306/day33_user"</span>);</span><br><span class="line">datasource.setUsername(<span class="string">"root"</span>);</span><br><span class="line">datasource.setPassword(<span class="string">"123"</span>);</span><br><span class="line"><span class="comment">//对象连接池中的连接数量配置,可选的</span></span><br><span class="line">datasource.setInitialSize(<span class="number">10</span>);<span class="comment">//初始化的连接数</span></span><br><span class="line">datasource.setMaxActive(<span class="number">8</span>);<span class="comment">//最大连接数量</span></span><br><span class="line">datasource.setMaxIdle(<span class="number">5</span>);<span class="comment">//最大空闲数</span></span><br><span class="line">datasource.setMinIdle(<span class="number">1</span>);<span class="comment">//最小空闲</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义静态方法,返回BasicDataSource类的对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> datasource;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="25工具类的测试"><a href="#25工具类的测试" class="headerlink" title="25工具类的测试"></a>25工具类的测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">* A: 工具类的测试</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  测试写好的工具类,</span></span><br><span class="line"><span class="comment"> *  提供的是一个DataSource接口的数据源</span></span><br><span class="line"><span class="comment"> *  QueryRunner类构造方法,接收DataSource接口的实现类</span></span><br><span class="line"><span class="comment"> *  后面,调用方法update,query,无需传递他们Connection连接对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.ArrayListHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.jdbcutils.JDBCUtils;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryRunnerDemo</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">select();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义2个方法,实现数据表的添加,数据表查询</span></span><br><span class="line"><span class="comment">//QueryRunner类对象,写在类成员位置</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> QueryRunner qr = <span class="keyword">new</span> QueryRunner(JDBCUtils.getDataSource()); </span><br><span class="line"></span><br><span class="line"><span class="comment">//数据表查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span></span>&#123;</span><br><span class="line">String sql = <span class="string">"SELECT * FROM sort"</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">List&lt;Object[]&gt; list = qr.query(sql, <span class="keyword">new</span> ArrayListHandler());</span><br><span class="line"><span class="keyword">for</span>(Object[] objs : list)&#123;</span><br><span class="line"><span class="keyword">for</span>(Object obj : objs)&#123;</span><br><span class="line">System.out.print(obj+<span class="string">"\t"</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException ex)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"数据查询失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数据表添加数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span></span>&#123;</span><br><span class="line">String sql = <span class="string">"INSERT INTO sort (sname,sprice,sdesc)VALUES(?,?,?)"</span>;</span><br><span class="line">Object[] params = &#123;<span class="string">"坚果"</span>,<span class="number">100.12</span>,<span class="string">"刚刚上市的核桃"</span>&#125;;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">int</span> row = qr.update(sql, params);</span><br><span class="line">System.out.println(row);</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException ex)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"数据添加失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="26总结"><a href="#26总结" class="headerlink" title="26总结"></a>26总结</h3><ul><li>把今天的知识点总结一遍。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297590/samples/java%20files/photo-1545382142-c3d9b8168eeb.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;1、DBUtils&lt;br&gt;2、DBCP连接池&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://leesen998.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="java" scheme="https://leesen998.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记——基础27(JDBC,DBUtils)</title>
    <link href="https://leesen998.github.io/2016/11/28/day29%E7%AC%94%E8%AE%B0/"/>
    <id>https://leesen998.github.io/2016/11/28/day29笔记/</id>
    <published>2016-11-28T11:48:29.000Z</published>
    <updated>2019-01-20T14:27:57.913Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297625/samples/java%20files/photo-1546868871-08b8ebc35c09.jpg" alt="" style="width:100%"></p><p>1、JDBC<br>2、DBUtils</p><a id="more"></a>    <h3 id="01JDBC概念和数据库驱动程序"><a href="#01JDBC概念和数据库驱动程序" class="headerlink" title="01JDBC概念和数据库驱动程序"></a>01JDBC概念和数据库驱动程序</h3><ul><li>A: JDBC概念和数据库驱动程序</li><li>a: JDBC概述        <ul><li><strong>JDBC（Java Data Base Connectivity,java数据库连接）是一种用于执行SQL语句的Java API</strong>，<br>可以为多种关系数据库提供统一访问，<strong>它由一组用Java语言编写的类和接口组成。是Java访问数据库的标准规范</strong></li><li>JDBC提供了一种基准,据此可以构建更高级的工具和接口，使数据库开发人员能够编写数据库应用程序。</li><li>JDBC需要连接驱动，驱动是两个设备要进行通信，满足一定通信数据格式，数据格式由设备提供商规定，<br>设备提供商为设备提供驱动软件，通过软件可以与该设备进行通信。</li><li><strong>我们使用的是mysql的驱动mysql-connector-java-5.1.39-bin.jar</strong></li></ul></li><li>b: 总结<ul><li><strong>JDBC是java提供给开发人员的一套操作数据库的接口</strong></li><li><strong>数据库驱动就是实现该接口的实现类</strong></li></ul></li></ul><h3 id="02JDBC原理"><a href="#02JDBC原理" class="headerlink" title="02JDBC原理"></a>02JDBC原理</h3><ul><li>A: JDBC原理</li><li>a: 描述</li><li>Java提供访问数据库规范称为JDBC，而生产厂商提供规范的实现类称为驱动</li><li>DBC是接口，驱动是接口的实现，没有驱动将无法完成数据库连接，从而不能操作数据库！<br>每个数据库厂商都需要提供自己的驱动，用来连接自己公司的数据库，也就是说驱动一般都由数据库生成厂商提供。<br><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547951375/samples/java%20files/01201.png" alt=""></li></ul><h3 id="03准备数据"><a href="#03准备数据" class="headerlink" title="03准备数据"></a>03准备数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">* A: 准备数据</span><br><span class="line">* a: 创建数据库和表结构</span><br><span class="line">#创建数据库</span><br><span class="line">create database mybase;</span><br><span class="line">#使用数据库</span><br><span class="line">use mybase;</span><br><span class="line">###创建分类表</span><br><span class="line"><span class="function">create table <span class="title">sort</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  sid <span class="keyword">int</span> PRIMARY KEY AUTO_INCREMENT,</span></span></span><br><span class="line"><span class="function"><span class="params">  sname varchar(<span class="number">100</span>)</span>,</span></span><br><span class="line"><span class="function">  sprice DOUBLE,</span></span><br><span class="line"><span class="function">  sdesc <span class="title">VARCHAR</span><span class="params">(<span class="number">500</span>)</span></span></span><br><span class="line"><span class="function">)</span>;</span><br><span class="line"></span><br><span class="line">* b: 向表中插入数据</span><br><span class="line">#初始化数据</span><br><span class="line"><span class="function">insert into <span class="title">sort</span><span class="params">(sname,sprice,sdesc)</span> <span class="title">values</span><span class="params">(<span class="string">'家电'</span>,<span class="number">2000</span>, <span class="string">'优惠的促销'</span>)</span></span>;</span><br><span class="line"><span class="function">insert into <span class="title">sort</span><span class="params">(sname,sprice,sdesc)</span> <span class="title">values</span><span class="params">(<span class="string">'家具'</span>,<span class="number">8900</span>, <span class="string">'家具价格上调,原材料涨价'</span>)</span></span>;</span><br><span class="line"><span class="function">insert into <span class="title">sort</span><span class="params">(sname,sprice,sdesc)</span> <span class="title">values</span><span class="params">(<span class="string">'儿童玩具'</span>,<span class="number">290</span>, <span class="string">'赚家长的钱'</span>)</span></span>;</span><br><span class="line"><span class="function">insert into <span class="title">sort</span><span class="params">(sname,sprice,sdesc)</span> <span class="title">values</span><span class="params">(<span class="string">'生鲜'</span>,<span class="number">500.99</span>, <span class="string">'生鲜商品'</span>)</span></span>;</span><br><span class="line"><span class="function">insert into <span class="title">sort</span><span class="params">(sname,sprice,sdesc)</span> <span class="title">values</span><span class="params">(<span class="string">'服装'</span>,<span class="number">24000</span>, <span class="string">'换季销售'</span>)</span></span>;</span><br><span class="line"><span class="function">insert into <span class="title">sort</span><span class="params">(sname,sprice,sdesc)</span> <span class="title">values</span><span class="params">(<span class="string">'洗涤'</span>,<span class="number">50</span>, <span class="string">'洗发水促销'</span>)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="04JDBC的开发步骤"><a href="#04JDBC的开发步骤" class="headerlink" title="04JDBC的开发步骤"></a>04JDBC的开发步骤</h3><ul><li>A: JDBC的开发步骤</li><li>a: 步骤介绍<br>1.注册驱动<br>告知JVM使用的是哪一个数据库的驱动<br>2.获得连接<br>使用JDBC中的类,完成对MySQL数据库的连接<br>3.获得语句执行平台<br>通过连接对象获取对SQL语句的执行者对象<br>4.执行sql语句<br>使用执行者对象,向数据库执行SQL语句<br>获取到数据库的执行后的结果<br>5.处理结果<br>6.释放资源  一堆close()</li></ul><h3 id="05导入mysql数据库驱动程序jar包"><a href="#05导入mysql数据库驱动程序jar包" class="headerlink" title="05导入mysql数据库驱动程序jar包"></a>05导入mysql数据库驱动程序jar包</h3><ul><li>A: 导入mysql数据库驱动程序jar包</li><li>a: 步骤</li><li>创建lib目录，用于存放当前项目需要的所有jar包</li><li>选择jar包，右键执行build path / Add to Build Path</li></ul><h3 id="06注册数据库驱动程序"><a href="#06注册数据库驱动程序" class="headerlink" title="06注册数据库驱动程序"></a>06注册数据库驱动程序</h3><p><strong>代码：Class.forName(“com.mysql.jdbc.Driver”);</strong><br><strong>JDBC规范定义驱动接口：java.sql.Driver，<br>MySql驱动包提供了实现类：com.mysql.jdbc.Driver</strong><br><strong>DriverManager工具类</strong>，提供注册驱动的方法 registerDriver()，方法的参数是java.sql.Driver，所以我们可以通过如下语句进行注册:<br>DriverManager.registerDriver(new com.mysql.jdbc.Driver());<br>以上代码<strong>不推荐使用</strong>，存在两方面不足<br><strong>1.    硬编码，后期不易于程序扩展和维护</strong><br><strong>2.    驱动被注册两次。</strong></p><p><strong>通常开发我们使用Class.forName() 加载一个使用字符串描述的驱动类</strong>。<br>如果使用Class.forName()将类加载到内存，该类的静态代码将自动执行。<br>通过查询com.mysql.jdbc.Driver源码，我们发现Driver类“主动”将自己进行注册</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* A: 注册数据库驱动程序</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> ClassNotFoundException,SQLException</span>&#123;</span><br><span class="line"><span class="string">"//1.注册驱动 反射技术,将驱动类加入到内容"</span></span><br><span class="line"><span class="comment">// 使用java.sql.DriverManager类静态方法 registerDriver(Driver driver)</span></span><br><span class="line"><span class="comment">// Diver是一个接口,参数传递,MySQL驱动程序中的实现类</span></span><br><span class="line"><span class="comment">//DriverManager.registerDriver(new Driver());</span></span><br><span class="line"><span class="comment">//驱动类源代码,注册2次驱动程序</span></span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="07获取数据库的连接对象"><a href="#07获取数据库的连接对象" class="headerlink" title="07获取数据库的连接对象"></a>07获取数据库的连接对象</h3><p><strong>代码：Connection con = DriverManager.getConnection(“jdbc:mysql://localhost:3306/mydatabase”, ”root”, ”root”);</strong></p><p><strong>获取连接需要方法 DriverManager.getConnection(url,username,password)，三个参数分别表示，url 需要连接数据库的位置（网址） user用户名  password 密码</strong></p><p>url比较复杂，下面是<strong>mysql</strong>的url：<br><strong>jdbc:mysql://localhost:3306/mydatabase</strong></p><p><strong>JDBC规定url的格式由三部分组成，每个部分中间使用冒号分隔。<br>    第一部分是jdbc，这是固定的；<br>    第二部分是数据库名称，那么连接mysql数据库，第二部分当然是mysql了；<br>    第三部分是由数据库厂商规定的，我们需要了解每个数据库厂商的要求，mysql的第三部分分别由数据库服务器的IP地址（localhost）、端口号（3306），以及DATABASE名称(mydatabase)组成。</strong><br>url: 数据库地址  &gt;&gt;&gt;&gt;&gt;  <strong>jdbc:mysql://连接主机IP:端口号/数据库名字</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">* A：获取数据库的连接对象</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> ClassNotFoundException,SQLException</span>&#123;</span><br><span class="line"><span class="comment">//1.注册驱动 反射技术,将驱动类加入到内容</span></span><br><span class="line"><span class="comment">// 使用java.sql.DriverManager类静态方法 registerDriver(Driver driver)</span></span><br><span class="line"><span class="comment">// Diver是一个接口,参数传递,MySQL驱动程序中的实现类</span></span><br><span class="line"><span class="comment">//DriverManager.registerDriver(new Driver());</span></span><br><span class="line"><span class="comment">//驱动类源代码,注册2次驱动程序</span></span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.获得数据库连接  DriverManager类中静态方法</span></span><br><span class="line"><span class="string">"//static Connection getConnection(String url, String user, String password) "</span> </span><br><span class="line"><span class="comment">//返回值是Connection接口的实现类,在mysql驱动程序</span></span><br><span class="line"><span class="string">"//url: 数据库地址  jdbc:mysql://连接主机IP:端口号/数据库名字"</span></span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3296/mybase"</span>;</span><br><span class="line"><span class="comment">//用户名和密码用自己的</span></span><br><span class="line">String username=<span class="string">"root"</span>;</span><br><span class="line">String password=<span class="string">"123"</span>;</span><br><span class="line"><span class="string">"//Connection 接口在java.sql中"</span></span><br><span class="line">Connection con = DriverManager.getConnection(url, username, password);</span><br><span class="line"><span class="string">"//返回值是 Connection 接口的实现类对象,在mysql驱动程序中：com.mysql.jdbc.JDBC4Connection"</span></span><br><span class="line">System.out.println(con);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="08获取SQL语句的执行对象对象"><a href="#08获取SQL语句的执行对象对象" class="headerlink" title="08获取SQL语句的执行对象对象"></a>08获取SQL语句的执行对象对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">* A: 获取SQL语句的执行对象对象</span><br><span class="line">* String sql = <span class="string">"某SQL语句"</span>;</span><br><span class="line"><span class="string">"获取Statement语句执行平台：Statement stmt = con.createStatement();"</span></span><br><span class="line"></span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> ClassNotFoundException,SQLException</span>&#123;</span><br><span class="line"><span class="comment">//1.注册驱动 反射技术,将驱动类加入到内容</span></span><br><span class="line"><span class="comment">// 使用java.sql.DriverManager类静态方法 registerDriver(Driver driver)</span></span><br><span class="line"><span class="comment">// Diver是一个接口,参数传递,MySQL驱动程序中的实现类</span></span><br><span class="line"><span class="comment">//DriverManager.registerDriver(new Driver());</span></span><br><span class="line"><span class="comment">//驱动类源代码,注册2次驱动程序</span></span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.获得数据库连接  DriverManager类中静态方法</span></span><br><span class="line"><span class="comment">//static Connection getConnection(String url, String user, String password)  </span></span><br><span class="line"><span class="comment">//返回值是Connection接口的实现类,在mysql驱动程序</span></span><br><span class="line"><span class="comment">//url: 数据库地址  jdbc:mysql://连接主机IP:端口号//数据库名字</span></span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3296/mybase"</span>;</span><br><span class="line">String username=<span class="string">"root"</span>;</span><br><span class="line">String password=<span class="string">"123"</span>;</span><br><span class="line">Connection con = DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.获得语句执行平台, 通过数据库连接对象,获取到SQL语句的执行者对象</span></span><br><span class="line"><span class="string">"// con对象调用方法   Statement createStatement() 获取Statement对象,将SQL语句发送到数据库</span></span><br><span class="line"><span class="string">// 返回值是 Statement接口的实现类对象,,在mysql驱动程序中：com.mysql.jdbc.StatementImpl"</span></span><br><span class="line">Statement stat = con.createStatement();</span><br><span class="line">System.out.println(stat);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="09执行insert语句获取结果集"><a href="#09执行insert语句获取结果集" class="headerlink" title="09执行insert语句获取结果集"></a>09执行insert语句获取结果集</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"某SQL语句"</span>;</span><br><span class="line">获取Statement语句执行平台：Statement stmt = con.createStatement();</span><br><span class="line">常用方法：</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">(String sql)</span>  --执行insert update delete语句.</span></span><br><span class="line"><span class="function">参数：</span></span><br><span class="line"><span class="function">sql - SQL 数据操作语言（Data Manipulation Language，DML）语句，如 INSERT、UPDATE 或 DELETE；</span></span><br><span class="line"><span class="function">或者不返回任何内容的 SQL 语句，如 DDL 语句。 </span></span><br><span class="line"><span class="function">返回：</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">1</span>)</span> 对于 SQL 数据操作语言 <span class="params">(DML)</span> 语句，返回【行计数】:操作成功的数据表有多少行，</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">2</span>)</span> 对于什么都不返回的 SQL 语句，返回 0 </span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">ResultSet <span class="title">executeQuery</span><span class="params">(String sql)</span></span>; --执行select语句.</span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">execute</span><span class="params">(String sql)</span></span>; --执行select返回<span class="keyword">true</span> 执行其他的语句返回<span class="keyword">false</span>.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">* A: 执行insert语句获取结果集</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> ClassNotFoundException,SQLException</span>&#123;</span><br><span class="line"><span class="comment">//1.注册驱动 反射技术,将驱动类加入到内容</span></span><br><span class="line"><span class="comment">// 使用java.sql.DriverManager类静态方法 registerDriver(Driver driver)</span></span><br><span class="line"><span class="comment">// Diver是一个接口,参数传递,MySQL驱动程序中的实现类</span></span><br><span class="line"><span class="comment">//DriverManager.registerDriver(new Driver());</span></span><br><span class="line"><span class="comment">//驱动类源代码,注册2次驱动程序</span></span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.获得数据库连接  DriverManager类中静态方法</span></span><br><span class="line"><span class="comment">//static Connection getConnection(String url, String user, String password)  </span></span><br><span class="line"><span class="comment">//返回值是Connection接口的实现类,在mysql驱动程序</span></span><br><span class="line"><span class="comment">//url: 数据库地址  jdbc:mysql://连接主机IP:端口号//数据库名字</span></span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3296/mybase"</span>;</span><br><span class="line">String username=<span class="string">"root"</span>;</span><br><span class="line">String password=<span class="string">"123"</span>;</span><br><span class="line">Connection con = DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.获得语句执行平台, 通过数据库连接对象,获取到SQL语句的执行者对象</span></span><br><span class="line"><span class="comment">// con对象调用方法   Statement createStatement() 获取Statement对象,将SQL语句发送到数据库</span></span><br><span class="line"><span class="comment">// 返回值是 Statement接口的实现类对象,,在mysql驱动程序</span></span><br><span class="line">Statement stat = con.createStatement();</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.执行sql语句</span></span><br><span class="line"><span class="comment">// 通过执行者对象调用方法执行SQL语句,获取结果</span></span><br><span class="line">&gt;&gt; <span class="function"><span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">(String sql)</span>  执行数据库中的SQL语句, insert delete update &lt;&lt;</span></span><br><span class="line"><span class="function">"<span class="comment">// 返回值int,操作成功的数据表多少行"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> row </span>= stat.executeUpdate</span><br><span class="line">(<span class="string">"INSERT INTO sort(sname,sprice,sdesc) VALUES('汽车用品',50000,'疯狂涨价')"</span>);</span><br><span class="line">System.out.println(row);</span><br><span class="line"></span><br><span class="line"><span class="comment">//6.释放资源  一堆close()</span></span><br><span class="line">stat.close();</span><br><span class="line">con.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10执行select语句获取结果集"><a href="#10执行select语句获取结果集" class="headerlink" title="10执行select语句获取结果集"></a>10执行select语句获取结果集</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ResultSet <span class="title">executeQuery</span><span class="params">(String sql)</span></span>; --执行select语句.</span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">execute</span><span class="params">(String sql)</span></span>; --执行select返回<span class="keyword">true</span> 执行其他的语句返回<span class="keyword">false</span>.</span><br><span class="line"></span><br><span class="line">ResultSet实际上就是一张二维的表格，我们可以调用其<span class="function"><span class="keyword">boolean</span> <span class="title">next</span><span class="params">()</span>方法指向某行记录，</span></span><br><span class="line"><span class="function">当第一次调用<span class="title">next</span><span class="params">()</span>方法时，便指向第一行记录的位置，</span></span><br><span class="line"><span class="function">这时就可以使用ResultSet提供的<span class="title">getXXX</span><span class="params">(<span class="keyword">int</span> col)</span>方法<span class="params">(与索引从<span class="number">0</span>开始不同，列从<span class="number">1</span>开始)</span>来获取指定列的数据：</span></span><br><span class="line"><span class="function">rs.<span class="title">next</span><span class="params">()</span></span>;<span class="comment">//指向第一行</span></span><br><span class="line">rs.getInt(<span class="number">1</span>);<span class="comment">//获取第一行第一列的数据</span></span><br><span class="line">常用方法：</span><br><span class="line"><span class="function">Object <span class="title">getObject</span><span class="params">(<span class="keyword">int</span> index)</span> / Object <span class="title">getObject</span><span class="params">(String name)</span> 获得任意对象</span></span><br><span class="line"><span class="function">String <span class="title">getString</span><span class="params">(<span class="keyword">int</span> index)</span> / Object <span class="title">getObject</span><span class="params">(String name)</span> 获得字符串</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getInt</span><span class="params">(<span class="keyword">int</span> index)</span> / Object <span class="title">getObject</span><span class="params">(String name)</span> 获得整形</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getDouble</span><span class="params">(<span class="keyword">int</span> index)</span> / Object <span class="title">getObject</span><span class="params">(String name)</span> 获得双精度浮点型</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">* A: 执行select语句获取结果集</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo1</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">//1. 注册驱动</span></span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line"><span class="comment">//2. 获取连接对象</span></span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3296/mybase"</span>;</span><br><span class="line">String username=<span class="string">"root"</span>;</span><br><span class="line">String password=<span class="string">"123"</span>;</span><br><span class="line">Connection con = DriverManager.getConnection(url, username, password);</span><br><span class="line"><span class="comment">//3 .获取执行SQL 语句对象</span></span><br><span class="line">Statement stat = con.createStatement();</span><br><span class="line"><span class="comment">// 拼写查询的SQL</span></span><br><span class="line">String sql = <span class="string">"SELECT * FROM sort"</span>;</span><br><span class="line"><span class="comment">//4. 调用执行者对象方法,执行SQL语句获取结果集</span></span><br><span class="line"><span class="comment">// ResultSet executeQuery(String sql)  执行SQL语句中的select查询</span></span><br><span class="line"><span class="comment">// 返回值ResultSet接口的实现类对象,实现类在mysql驱动中</span></span><br><span class="line">ResultSet rs = stat.executeQuery(sql);</span><br><span class="line"><span class="comment">//5 .处理结果集</span></span><br><span class="line"><span class="comment">// ResultSet接口方法 boolean next() 返回true,有结果集,返回false没有结果集</span></span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line"><span class="comment">//获取每列数据,使用是ResultSet接口的方法 getXX方法参数中,建议写String列名</span></span><br><span class="line">System.out.println(rs.getInt(<span class="string">"sid"</span>)+<span class="string">"   "</span>+rs.getString(<span class="string">"sname"</span>)+</span><br><span class="line"><span class="string">"   "</span>+rs.getDouble(<span class="string">"sprice"</span>)+<span class="string">"   "</span>+rs.getString(<span class="string">"sdesc"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rs.close();</span><br><span class="line">stat.close();</span><br><span class="line">con.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11SQL注入攻击"><a href="#11SQL注入攻击" class="headerlink" title="11SQL注入攻击"></a>11SQL注入攻击</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">* A: SQL注入攻击</span><br><span class="line">* a: 注入问题</span><br><span class="line">* 假设有登录案例SQL语句如下:</span><br><span class="line">* SELECT * FROM 用户表 WHERE NAME = 用户输入的用户名 AND PASSWORD = 用户输的密码;</span><br><span class="line">* 此时，当用户输入正确的账号与密码后，查询到了信息则让用户登录。</span><br><span class="line">但是当用户输入的账号为XXX 密码为：XXX’  OR ‘a’=’a时，则真正执行的代码变为：</span><br><span class="line">* SELECT * FROM 用户表 WHERE NAME = ‘XXX’ AND PASSWORD =’ XXX’  OR ’a’=’a’;</span><br><span class="line">* 此时，上述查询语句时永远可以查询出结果的。那么用户就直接登录成功了，显然我们不希望看到这样的结果，这便是SQL注入问题。</span><br><span class="line">* b: 案例演示</span><br><span class="line"><span class="function">CREATE TABLE <span class="title">users</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params"> id INT PRIMARY KEY AUTO_INCREMENT,</span></span></span><br><span class="line"><span class="function"><span class="params"> username VARCHAR(<span class="number">100</span>)</span>,</span></span><br><span class="line"><span class="function"> PASSWORD <span class="title">VARCHAR</span><span class="params">(<span class="number">100</span>)</span></span></span><br><span class="line"><span class="function">)</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">INSERT INTO <span class="title">users</span> <span class="params">(username,PASSWORD)</span> <span class="title">VALUES</span> <span class="params">(<span class="string">'a'</span>,<span class="string">'1'</span>)</span>,<span class="params">(<span class="string">'b'</span>,<span class="string">'2'</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">SELECT * FROM users;</span><br><span class="line"></span><br><span class="line">-- 登录查询</span><br><span class="line">SELECT * FROM users WHERE username=<span class="string">'dsfsdfd'</span> AND PASSWORD=<span class="string">'wrethiyu'</span>  OR <span class="number">1</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">SELECT * FROM users WHERE username=<span class="string">'a'</span> AND PASSWORD=<span class="string">'1'</span>OR<span class="string">'1=1'</span></span><br><span class="line">键盘录入：</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="string">'OR'</span> <span class="number">1</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="12SQL注入攻击用户登录案例"><a href="#12SQL注入攻击用户登录案例" class="headerlink" title="12SQL注入攻击用户登录案例"></a>12SQL注入攻击用户登录案例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">* A: SQL注入攻击用户登录案例</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3296/mybase"</span>;</span><br><span class="line">String username = <span class="string">"root"</span>;</span><br><span class="line">String password = <span class="string">"123"</span>;</span><br><span class="line">Connection con = DriverManager.getConnection(url, username, password);</span><br><span class="line">Statement stat = con.createStatement();</span><br><span class="line"></span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">String user = sc.nextLine();</span><br><span class="line">String pass = sc.nextLine();</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行SQL语句,数据表,查询用户名和密码,如果存在,登录成功,不存在登录失败</span></span><br><span class="line"><span class="comment">//String sql = "SELECT * FROM users WHERE username='dsfsdfd' AND PASSWORD='wrethiyu' OR 1=1";</span></span><br><span class="line">String sql = <span class="string">"SELECT * FROM users WHERE username='"</span>+user+<span class="string">"' AND PASSWORD='"</span>+pass+<span class="string">"'"</span>;</span><br><span class="line">System.out.println(sql);</span><br><span class="line">ResultSet rs = stat.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">System.out.println(rs.getString(<span class="string">"username"</span>)+<span class="string">"   "</span>+rs.getString(<span class="string">"password"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rs.close();</span><br><span class="line">stat.close();</span><br><span class="line">con.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13PrepareStatement接口预编译SQL语句"><a href="#13PrepareStatement接口预编译SQL语句" class="headerlink" title="13PrepareStatement接口预编译SQL语句"></a>13PrepareStatement接口预编译SQL语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">* A: PrepareStatement接口预编译SQL语句</span><br><span class="line">* a: 预处理对象</span><br><span class="line">* 使用PreparedStatement预处理对象时，建议每条sql语句所有的实际参数，都使用逗号分隔。</span><br><span class="line">* String sql = <span class="string">"insert into sort(sid,sname) values(?,?);"</span>;</span><br><span class="line">* String sql =<span class="string">"SELECT * FROM test0120 where username=? and PASSWORD1=?;"</span>;</span><br><span class="line">*<span class="string">"方法中参数,SQL语句中的参数全部采用问号？占位符"</span></span><br><span class="line">* PreparedStatement预处理对象代码：</span><br><span class="line">* <span class="string">"PreparedStatement psmt = conn.prepareStatement(sql)"</span></span><br><span class="line"></span><br><span class="line">* b: 执行SQL语句的方法介绍</span><br><span class="line">* <span class="function"><span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">()</span></span>; --执行insert update delete语句.</span><br><span class="line">* <span class="function">ResultSet <span class="title">executeQuery</span><span class="params">()</span></span>; --执行select语句.</span><br><span class="line">* <span class="function"><span class="keyword">boolean</span> <span class="title">execute</span><span class="params">()</span></span>; --执行select返回<span class="keyword">true</span> 执行其他的语句返回<span class="keyword">false</span>.</span><br><span class="line">* c: 设置实际参数</span><br><span class="line">* <span class="function"><span class="keyword">void</span> <span class="title">setXxx</span><span class="params">(<span class="keyword">int</span> index, Xxx xx)</span> &gt;&gt;&gt; <span class="keyword">void</span> <span class="title">setObject</span><span class="params">(<span class="keyword">int</span> index, Object object)</span></span></span><br><span class="line"><span class="function">* 将指定参数设置为给定Java的xx值。在将此值发送到数据库时，驱动程序将它转换成一个 SQL Xxx类型值。</span></span><br><span class="line"><span class="function">* 例如：</span></span><br><span class="line"><span class="function">* <span class="title">setString</span><span class="params">(<span class="number">2</span>, <span class="string">"家用电器"</span>)</span> 把SQL语句中第2个位置的占位符？ 替换成实际参数 "家用电器"</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">* d: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  Java程序实现用户登录,用户名和密码,数据库检查</span></span><br><span class="line"><span class="comment"> *  防止注入攻击</span></span><br><span class="line"><span class="comment"> *  Statement接口实现类,作用执行SQL语句,返回结果集</span></span><br><span class="line"><span class="comment"> *  有一个子接口PreparedStatement  (SQL预编译存储,多次高效的执行SQL) </span></span><br><span class="line"><span class="comment"> *  PreparedStatement的实现类数据库的驱动中,如何获取接口的实现类</span></span><br><span class="line"><span class="comment"> *  </span></span><br><span class="line"><span class="comment"> *  是Connection数据库连接对象的方法</span></span><br><span class="line"><span class="comment"> *  PreparedStatement prepareStatement(String sql) </span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo3</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3296/mybase"</span>;</span><br><span class="line">String username = <span class="string">"root"</span>;</span><br><span class="line">String password = <span class="string">"123"</span>;</span><br><span class="line">Connection con = DriverManager.getConnection(url, username, password);</span><br><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">String user = sc.nextLine();</span><br><span class="line">String pass = sc.nextLine();</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行SQL语句,数据表,查询用户名和密码,如果存在,登录成功,不存在登录失败</span></span><br><span class="line">String sql = <span class="string">"SELECT * FROM users WHERE username=? AND PASSWORD=?"</span>;</span><br><span class="line"><span class="comment">//调用Connection接口的方法prepareStatement,获取PrepareStatement接口的实现类</span></span><br><span class="line"><span class="comment">//方法中参数,SQL语句中的参数全部采用问号占位符</span></span><br><span class="line">PreparedStatement pst =  con.prepareStatement(sql);</span><br><span class="line">System.out.println(pst);</span><br><span class="line"><span class="comment">//调用pst对象set方法,设置问号占位符上的参数</span></span><br><span class="line">pst.setObject(<span class="number">1</span>, user);</span><br><span class="line">pst.setObject(<span class="number">2</span>, pass);</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用方法,执行SQL,获取结果集</span></span><br><span class="line">ResultSet rs = pst.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">System.out.println(rs.getString(<span class="string">"username"</span>)+<span class="string">"   "</span>+rs.getString(<span class="string">"password"</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rs.close();</span><br><span class="line">pst.close();</span><br><span class="line">con.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14PrepareStatement接口预编译SQL语句执行修改"><a href="#14PrepareStatement接口预编译SQL语句执行修改" class="headerlink" title="14PrepareStatement接口预编译SQL语句执行修改"></a>14PrepareStatement接口预编译SQL语句执行修改</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">* A: PrepareStatement接口预编译SQL语句执行修改</span><br><span class="line">* 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  使用PrepareStatement接口,实现数据表的更新操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3296/mybase"</span>;</span><br><span class="line">String username=<span class="string">"root"</span>;</span><br><span class="line">String password=<span class="string">"123"</span>;</span><br><span class="line">Connection con = DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line"><span class="comment">//拼写修改的SQL语句,参数采用?占位</span></span><br><span class="line">String sql = <span class="string">"UPDATE sort SET sname=?,sprice=? WHERE sid=?"</span>;</span><br><span class="line"><span class="comment">//调用数据库连接对象con的方法prepareStatement获取SQL语句的预编译对象</span></span><br><span class="line">PreparedStatement pst = con.prepareStatement(sql);</span><br><span class="line"><span class="comment">//调用pst的方法setXXX设置?占位</span></span><br><span class="line">pst.setObject(<span class="number">1</span>, <span class="string">"汽车美容"</span>);</span><br><span class="line">pst.setObject(<span class="number">2</span>, <span class="number">49988</span>);</span><br><span class="line">pst.setObject(<span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line"><span class="comment">//调用pst方法执行SQL语句</span></span><br><span class="line">pst.executeUpdate();</span><br><span class="line"></span><br><span class="line">pst.close();</span><br><span class="line">con.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15PrepareStatement接口预编译SQL语句执行查询"><a href="#15PrepareStatement接口预编译SQL语句执行查询" class="headerlink" title="15PrepareStatement接口预编译SQL语句执行查询"></a>15PrepareStatement接口预编译SQL语句执行查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">* A: PrepareStatement接口预编译SQL语句执行查询</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  PrepareStatement接口实现数据表的查询操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo1</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3296/mybase"</span>;</span><br><span class="line">String username=<span class="string">"root"</span>;</span><br><span class="line">String password=<span class="string">"123"</span>;</span><br><span class="line">Connection con = DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">String sql = <span class="string">"SELECT * FROM sort"</span>;</span><br><span class="line"></span><br><span class="line">PreparedStatement pst = con.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用pst对象的方法,执行查询语句,Select</span></span><br><span class="line">ResultSet rs=pst.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">System.out.println(rs.getString(<span class="string">"sid"</span>)+<span class="string">"  "</span>+rs.getString(<span class="string">"sname"</span>)+<span class="string">"  "</span>+rs.getString(<span class="string">"sprice"</span>)+<span class="string">"  "</span>+rs.getString(<span class="string">"sdesc"</span>));</span><br><span class="line">&#125;</span><br><span class="line">rs.close();</span><br><span class="line">pst.close();</span><br><span class="line">con.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="16JDBC的工具类和测试"><a href="#16JDBC的工具类和测试" class="headerlink" title="16JDBC的工具类和测试"></a>16JDBC的工具类和测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">* A: JDBC的工具类和测试</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="comment">//JDBCUtils工具类代码</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">JDBCUtils</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3296/mybase"</span>;</span><br><span class="line">String username=<span class="string">"root"</span>;</span><br><span class="line">String password=<span class="string">"123"</span>;</span><br><span class="line">con = DriverManager.getConnection(url, username, password);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex+<span class="string">"数据库连接失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义静态方法,返回数据库的连接对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> con;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection con,Statement stat)</span></span>&#123;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">if</span>(stat!=<span class="keyword">null</span>)&#123;</span><br><span class="line"> <span class="keyword">try</span>&#123;</span><br><span class="line"> stat.close();</span><br><span class="line"> &#125;<span class="keyword">catch</span>(SQLException ex)&#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">if</span>(con!=<span class="keyword">null</span>)&#123;</span><br><span class="line"> <span class="keyword">try</span>&#123;</span><br><span class="line"> con.close();</span><br><span class="line"> &#125;<span class="keyword">catch</span>(SQLException ex)&#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection con,Statement stat , ResultSet rs)</span></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(rs!=<span class="keyword">null</span>)&#123;</span><br><span class="line"> <span class="keyword">try</span>&#123;</span><br><span class="line"> rs.close();</span><br><span class="line"> &#125;<span class="keyword">catch</span>(SQLException ex)&#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">if</span>(stat!=<span class="keyword">null</span>)&#123;</span><br><span class="line"> <span class="keyword">try</span>&#123;</span><br><span class="line"> stat.close();</span><br><span class="line"> &#125;<span class="keyword">catch</span>(SQLException ex)&#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">if</span>(con!=<span class="keyword">null</span>)&#123;</span><br><span class="line"> <span class="keyword">try</span>&#123;</span><br><span class="line"> con.close();</span><br><span class="line"> &#125;<span class="keyword">catch</span>(SQLException ex)&#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试JDBCUtils工具类的代码</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJDBCUtils</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">Connection con = JDBCUtils.getConnection();</span><br><span class="line">PreparedStatement pst = con.prepareStatement(<span class="string">"SELECT sname FROM sort"</span>);</span><br><span class="line">ResultSet rs = pst.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">System.out.println(rs.getString(<span class="string">"sname"</span>));</span><br><span class="line">&#125;</span><br><span class="line">JDBCUtils.close(con, pst, rs);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="17数据表数据存储对象"><a href="#17数据表数据存储对象" class="headerlink" title="17数据表数据存储对象"></a>17数据表数据存储对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">* A: 数据表数据存储对象</span><br><span class="line">* a: 准备工作</span><br><span class="line">* 导入jar包</span><br><span class="line">* 拷贝day32定义的工具类JDBCUtils</span><br><span class="line"></span><br><span class="line">* b: 案例代码</span><br><span class="line"><span class="comment">//定义实体类Sort</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sort</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> sid;</span><br><span class="line"><span class="keyword">private</span> String sname;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">double</span> sprice;</span><br><span class="line"><span class="keyword">private</span> String sdesc;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Sort</span><span class="params">(<span class="keyword">int</span> sid, String sname, <span class="keyword">double</span> sprice, String sdesc)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sid = sid;</span><br><span class="line"><span class="keyword">this</span>.sname = sname;</span><br><span class="line"><span class="keyword">this</span>.sprice = sprice;</span><br><span class="line"><span class="keyword">this</span>.sdesc = sdesc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Sort</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSid</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSid</span><span class="params">(<span class="keyword">int</span> sid)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sid = sid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSname</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSname</span><span class="params">(String sname)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sname = sname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSprice</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sprice;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSprice</span><span class="params">(<span class="keyword">double</span> sprice)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sprice = sprice;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSdesc</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sdesc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSdesc</span><span class="params">(String sdesc)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sdesc = sdesc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Sort [sid="</span> + sid + <span class="string">", sname="</span> + sname + <span class="string">", sprice="</span> + sprice + <span class="string">", sdesc="</span> + sdesc + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  JDBC读取数据表sort,每行数据封装到Sort类的对象中</span></span><br><span class="line"><span class="comment"> *  很多个Sort类对象,存储到List集合中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">//使用JDBC工具类,直接获取数据库连接对象</span></span><br><span class="line">Connection con = JDBCUtils.getConnection();</span><br><span class="line"><span class="comment">//连接获取数据库SQL语句执行者对象</span></span><br><span class="line">PreparedStatement pst = con.prepareStatement(<span class="string">"SELECT * FROM sort"</span>);</span><br><span class="line"><span class="comment">//调用查询方法,获取结果集</span></span><br><span class="line">ResultSet rs = pst.executeQuery();</span><br><span class="line"><span class="comment">//创建集合对象</span></span><br><span class="line">List&lt;Sort&gt; list = <span class="keyword">new</span> ArrayList&lt;Sort&gt;();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line"><span class="comment">//获取到每个列数据,封装到Sort对象中</span></span><br><span class="line">Sort s = <span class="keyword">new</span> Sort(rs.getInt(<span class="string">"sid"</span>),rs.getString(<span class="string">"sname"</span>),rs.getDouble(<span class="string">"sprice"</span>),rs.getString(<span class="string">"sdesc"</span>));</span><br><span class="line"><span class="comment">//封装的Sort对象,存储到集合中</span></span><br><span class="line">list.add(s);</span><br><span class="line">&#125;</span><br><span class="line">JDBCUtils.close(con, pst, rs);</span><br><span class="line"><span class="comment">//遍历List集合</span></span><br><span class="line"><span class="keyword">for</span>(Sort s : list)&#123;</span><br><span class="line">System.out.println(s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="18properties配置文件"><a href="#18properties配置文件" class="headerlink" title="18properties配置文件"></a>18properties配置文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">* A: properties配置文件</span><br><span class="line">* a: 相关介绍</span><br><span class="line">* 开发中获得连接的<span class="number">4</span>个参数（驱动、URL、用户名、密码）通常都存在配置文件中，<span class="string">"方便后期维护"</span>，程序如果需要更换数据库，</span><br><span class="line">只需要修改配置文件即可。</span><br><span class="line">* 通常情况下，我们习惯使用<span class="string">"properties文件"</span>，此文件我们将做如下要求：</span><br><span class="line"><span class="number">1</span>.文件位置：任意，<span class="string">"建议src下"</span></span><br><span class="line"><span class="number">2</span>.文件名称：任意，<span class="string">"扩展名为properties"</span></span><br><span class="line"><span class="number">3</span>.文件内容：一行一组数据，<span class="string">"格式是“key=value”"</span>.</span><br><span class="line">a)key命名自定义，<span class="string">"如果是多个单词，习惯使用点分隔。例如：jdbc.driver"</span></span><br><span class="line">b)value值不支持中文，如果<span class="string">"需要使用非英文字符"</span>，<span class="string">"将进行unicode转换。"</span></span><br></pre></td></tr></table></figure><h3 id="19properties文件的创建和编写"><a href="#19properties文件的创建和编写" class="headerlink" title="19properties文件的创建和编写"></a>19properties文件的创建和编写</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* A: properties文件的创建和编写</span><br><span class="line">* a: properties文件的创建</span><br><span class="line">* src路径下建立database.properties(其实就是一个文本文件)</span><br><span class="line">* b: properties文件的编写(内容如下)</span><br><span class="line">driverClass=com.mysql.jdbc.Driver</span><br><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3296/mybase</span></span><br><span class="line">username=root</span><br><span class="line">password=<span class="number">123</span></span><br></pre></td></tr></table></figure><h3 id="20加载配置文件-使用类的加载器"><a href="#20加载配置文件-使用类的加载器" class="headerlink" title="20加载配置文件(使用类的加载器)"></a>20加载配置文件(使用类的加载器)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">* A: 加载配置文件</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  加载properties配置文件</span></span><br><span class="line"><span class="comment"> *  IO读取文件,键值对存储到集合</span></span><br><span class="line"><span class="comment"> *  从集合中以键值对方式获取数据库的连接信息,完成数据库的连接</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="string">"//使用类的加载器</span></span><br><span class="line"><span class="string">InputStream in = PropertiesDemo.class.getClassLoader().getResourceAsStream("</span>database.properties<span class="string">");"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"从用来加载类的搜索路径中打开具有指定名称的资源，以读取该资源。"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PropertiesDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"database.properties"</span>);</span><br><span class="line">System.out.println(fis);</span><br><span class="line"><span class="string">"//使用类的加载器"</span></span><br><span class="line">InputStream in = PropertiesDemo.class.getClassLoader().getResourceAsStream(<span class="string">"database.properties"</span>);</span><br><span class="line">System.out.println(in);</span><br><span class="line">Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">pro.load(in);</span><br><span class="line">System.out.println(in);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="21通过配置文件连接数据库"><a href="#21通过配置文件连接数据库" class="headerlink" title="21通过配置文件连接数据库"></a>21通过配置文件连接数据库</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">* A: 通过配置文件连接数据库</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  加载properties配置文件</span></span><br><span class="line"><span class="comment"> *  IO读取文件,键值对存储到集合</span></span><br><span class="line"><span class="comment"> *  从集合中以键值对方式获取数据库的连接信息,完成数据库的连接</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PropertiesDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"database.properties"</span>);</span><br><span class="line">System.out.println(fis);</span><br><span class="line"><span class="comment">//使用类的加载器</span></span><br><span class="line">InputStream in = PropertiesDemo.class.getClassLoader().getResourceAsStream(<span class="string">"database.properties"</span>);</span><br><span class="line">System.out.println(in);</span><br><span class="line">Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">pro.load(in);</span><br><span class="line"><span class="comment">//获取集合中的键值对</span></span><br><span class="line">String driverClass=pro.getProperty(<span class="string">"driverClass"</span>);</span><br><span class="line">String url = pro.getProperty(<span class="string">"url"</span>);</span><br><span class="line">String username = pro.getProperty(<span class="string">"username"</span>);</span><br><span class="line">String password = pro.getProperty(<span class="string">"password"</span>);</span><br><span class="line">Class.forName(driverClass);</span><br><span class="line">Connection con = DriverManager.getConnection(url, username, password);</span><br><span class="line">System.out.println(con);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="22读取配置文件的工具类"><a href="#22读取配置文件的工具类" class="headerlink" title="22读取配置文件的工具类"></a>22读取配置文件的工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">* A: 读取配置文件的工具类</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  编写数据库连接的工具类,JDBC工具类</span></span><br><span class="line"><span class="comment"> *  获取连接对象采用读取配置文件方式</span></span><br><span class="line"><span class="comment"> *  读取文件获取连接,执行一次,static&#123;&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtilsConfig</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection con ;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String driverClass;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String username;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">readConfig();</span><br><span class="line">Class.forName(driverClass);</span><br><span class="line">con = DriverManager.getConnection(url, username, password);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"数据库连接失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">readConfig</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">InputStream in = JDBCUtilsConfig.class.getClassLoader().getResourceAsStream(<span class="string">"database.properties"</span>);</span><br><span class="line"> Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line"> pro.load(in);</span><br><span class="line"> driverClass=pro.getProperty(<span class="string">"driverClass"</span>);</span><br><span class="line"> url = pro.getProperty(<span class="string">"url"</span>);</span><br><span class="line"> username = pro.getProperty(<span class="string">"username"</span>);</span><br><span class="line"> password = pro.getProperty(<span class="string">"password"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> con;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="23测试工具类"><a href="#23测试工具类" class="headerlink" title="23测试工具类"></a>23测试工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">* A: 测试工具类</span><br><span class="line">* a: 案例代码</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJDBCUtils</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Connection con = JDBCUtilsConfig.getConnection();</span><br><span class="line">System.out.println(con);</span><br><span class="line">String sql = <span class="string">"select * from supermaket;"</span>;</span><br><span class="line">        PreparedStatement pstat = con.prepareStatement(sql);</span><br><span class="line">        ResultSet rs = pstat.executeQuery();</span><br><span class="line">        <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">            System.out.println(rs.getObject(<span class="string">"id"</span>)+<span class="string">"     "</span>+</span><br><span class="line">                    rs.getObject(<span class="string">"sname"</span>)+<span class="string">"     "</span>+</span><br><span class="line">                    rs.getObject(<span class="string">"sprice"</span>)+<span class="string">"     "</span>+</span><br><span class="line">                    rs.getObject(<span class="string">"smessage"</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        con.close();</span><br><span class="line">        pstat.close();</span><br><span class="line">        rs.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="24总结"><a href="#24总结" class="headerlink" title="24总结"></a>24总结</h3><ul><li>把今天的知识点总结一遍。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297625/samples/java%20files/photo-1546868871-08b8ebc35c09.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;1、JDBC&lt;br&gt;2、DBUtils&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://leesen998.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="java" scheme="https://leesen998.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java学习笔记——基础26(MySQL数据库,SQL语句)</title>
    <link href="https://leesen998.github.io/2016/11/27/day28%E7%AC%94%E8%AE%B0/"/>
    <id>https://leesen998.github.io/2016/11/27/day28笔记/</id>
    <published>2016-11-27T11:48:29.000Z</published>
    <updated>2019-01-19T14:23:47.002Z</updated>
    
    <content type="html"><![CDATA[<p class="description"></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297629/samples/java%20files/photo-1544729812-46958d74295c.jpg" alt="" style="width:100%"></p><p>1.MySQL数据库<br>2.SQL语句</p><a id="more"></a>    <h3 id="01数据库概念"><a href="#01数据库概念" class="headerlink" title="01数据库概念"></a>01数据库概念</h3><ul><li>A: 什么是数据库<br><strong>数据库</strong>就是存储数据的仓库，其<strong>本质是一个文件系统</strong>，数据按照特定的格式将数据存储起来，用户可以对数据库中的数据进行<strong>增加，修改，删除及查询操作</strong>。</li><li>B: 什么是数据库管理系统<br><strong>数据库管理系统</strong>（DataBase Management System，DBMS）：指一种操作和管理数据库的大型软件，用于建立、使用和维护数据库，<br>对数据库进行统一管理和控制，以保证数据库的安全性和完整性。用户通过数据库管理系统访问数据库中表内的数据。</li></ul><h3 id="02常见的数据库"><a href="#02常见的数据库" class="headerlink" title="02常见的数据库"></a>02常见的数据库</h3><ul><li>A: 常见的数据库<br>MYSQL    ：开源免费的数据库，小型的数据库.已经被Oracle收购了.MySQL6.x版本也开始收费。<br>Oracle    ：收费的大型数据库，Oracle公司的产品。Oracle收购SUN公司，收购MYSQL。<br>DB2        ：IBM公司的数据库产品,收费的。常应用在银行系统中.<br>SQLServer：MicroSoft 公司收费的中型的数据库。C#、.net等语言常使用。<br>SyBase    ：已经淡出历史舞台。提供了一个非常专业数据建模的工具PowerDesigner。<br>SQLite    : 嵌入式的小型数据库，应用在手机端。<br>Java相关的数据库：MYSQL，Oracle．<br>这里使用MySQL数据库。MySQL中可以有多个数据库，数据库是真正存储数据的地方</li></ul><h3 id="03数据库和管理系统"><a href="#03数据库和管理系统" class="headerlink" title="03数据库和管理系统"></a>03数据库和管理系统</h3><pre><code>* A: 数据库管理系统</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">----数据库<span class="number">1</span></span><br><span class="line">----数据表<span class="number">1</span>a</span><br><span class="line">----数据表<span class="number">1</span>b</span><br><span class="line">----数据库<span class="number">2</span></span><br><span class="line">-----数据表<span class="number">2</span>a</span><br><span class="line">-----数据表<span class="number">2</span>b</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547815964/samples/java%20files/001km.png" alt=""></p><h3 id="04数据表和Java中类的对应关系"><a href="#04数据表和Java中类的对应关系" class="headerlink" title="04数据表和Java中类的对应关系"></a>04数据表和Java中类的对应关系</h3><pre><code>* A:数据库中以表为组织单位存储数据。</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">表类似我们的Java类，每个字段都有对应的数据类型。</span><br><span class="line">那么用我们熟悉的java程序来与关系型数据对比，就会发现以下对应关系。</span><br><span class="line"><span class="string">"类"</span>----------<span class="string">"表"</span></span><br><span class="line"><span class="string">"类中属性"</span>----------<span class="string">"表中字段"</span></span><br><span class="line"><span class="string">"对象"</span>----------<span class="string">"表中每条记录"</span></span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547816160/samples/java%20files/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E6%95%B0%E6%8D%AE%E8%A1%A8.jpg" alt=""></p><h3 id="05数据表和Java中类的对应关系用户表举例"><a href="#05数据表和Java中类的对应关系用户表举例" class="headerlink" title="05数据表和Java中类的对应关系用户表举例"></a>05数据表和Java中类的对应关系用户表举例</h3><pre><code>* A:举例:账务表id        name        age    1        lisi        232        wang        24每一条记录对应一个User的对象[user1  id = 1 name = lisi  age = 23][user2    id = 2 name = wang    age = 24]</code></pre><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547816429/samples/java%20files/fgfg.png" alt=""></p><h3 id="06MySQL数据库安装"><a href="#06MySQL数据库安装" class="headerlink" title="06MySQL数据库安装"></a>06MySQL数据库安装</h3><p>A: 安装步骤参见 day28_source《MySQL安装图解.doc》<br>B: 安装后，MySQL会以windows服务的方式为我们提供数据存储功能。开启和关闭服务的操作：<strong>右键点击我的电脑→管理→服务→可以找到MySQL服务开启或停止。</strong></p><h3 id="07数据库在系统服务"><a href="#07数据库在系统服务" class="headerlink" title="07数据库在系统服务"></a>07数据库在系统服务</h3><ul><li>A：开启服务和关闭服务<br>方式1: 我的电脑—–&gt; (右键)管理—-&gt;服务和应用程序—-&gt;服务—-找到MySQL服务右键启动或关闭<br>方式2: <strong>进入dos窗口 使用命令: net start mysql 开启MySQL服务;  命令:net stop mysql 关闭MySql服务</strong></li></ul><h3 id="08MySQL的登录"><a href="#08MySQL的登录" class="headerlink" title="08MySQL的登录"></a>08MySQL的登录</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* A: MySQL是一个需要账户名密码登录的数据库，登陆后使用，它提供了一个默认的root账号，使用安装时设置的密码即可登录。</span><br><span class="line">格式<span class="number">1</span>：cmd&gt;  mysql –u用户名 –p密码</span><br><span class="line">例如：mysql -uroot –proot</span><br><span class="line"></span><br><span class="line">格式<span class="number">2</span>：cmd&gt;  mysql --host=ip地址 --user=用户名 --password=密码</span><br><span class="line">例如：mysql --host=<span class="number">127.0</span>.0.1  --user=root --password=root</span><br></pre></td></tr></table></figure><h3 id="09SQLYog软件介绍"><a href="#09SQLYog软件介绍" class="headerlink" title="09SQLYog软件介绍"></a>09SQLYog软件介绍</h3><pre><code>* A: 具体参见 《SQLYog配置.doc》</code></pre><h3 id="10SQL语句介绍和分类"><a href="#10SQL语句介绍和分类" class="headerlink" title="10SQL语句介绍和分类"></a>10SQL语句介绍和分类</h3><ul><li>A:SQL介绍</li><li>前面学习了接口的代码体现，现在来学习接口的思想，接下里从生活中的例子进行说明。</li><li>举例：我们都知道电脑上留有很多个插口，而这些插口可以插入相应的设备，这些设备为什么能插在上面呢？</li><li>主要原因是这些设备在生产的时候符合了这个插口的使用规则，否则将无法插入接口中，更无法使用。发现这个插口的出现让我们使用更多的设备。</li></ul><p><strong>结构化查询语言(Structured Query Language)简称SQL，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。<br>创建数据库、创建数据表、向数据表中添加一条条数据信息均需要使用SQL语句</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* B: SQL分类</span><br><span class="line">* 数据定义语言：简称DDL(Data Definition Language)，用来定义数据库对象：数据库，表，列等。关键字：create，alter，drop等 </span><br><span class="line">* <span class="string">"数据操作语言：简称DML(Data Manipulation Language)，用来对数据库中表的记录进行更新。关键字：insert，delete，update等"</span></span><br><span class="line">* 数据控制语言：简称DCL(Data Control Language)，用来定义数据库的访问权限和安全级别，及创建用户。</span><br><span class="line">* <span class="string">"数据查询语言：简称DQL(Data Query Language)，用来查询数据库中表的记录。关键字：select，from，where等"</span></span><br><span class="line"></span><br><span class="line">* C: SQL通用语法</span><br><span class="line"><span class="string">"SQL语句可以单行或多行书写，以分号结尾"</span></span><br><span class="line">可使用空格和缩进来增强语句的可读性</span><br><span class="line">MySQL数据库的SQL语句<span class="string">"不区分大小写"</span>，<span class="string">"建议关键字使用大写"</span>，例如：SELECT * FROM user。</span><br><span class="line">同样可以<span class="string">"使用/**/的方式完成注释"</span></span><br></pre></td></tr></table></figure><h3 id="11数据表中的数据类型"><a href="#11数据表中的数据类型" class="headerlink" title="11数据表中的数据类型"></a>11数据表中的数据类型</h3><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547820640/samples/java%20files/hdfgg.png" alt=""><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">* A:MySQL中的我们常使用的数据类型如下 </span><br><span class="line">详细的数据类型如下(不建议详细阅读！)</span><br><span class="line">分类类型名称 说明 </span><br><span class="line">整数类型tinyInt很小的整数</span><br><span class="line">smallint小的整数</span><br><span class="line">mediumint中等大小的整数</span><br><span class="line"><span class="keyword">int</span>(integer)普通大小的整数</span><br><span class="line">小数类型<span class="keyword">float</span>单精度浮点数</span><br><span class="line"><span class="keyword">double</span>双精度浮点数</span><br><span class="line">decimal（m,d）压缩严格的定点数</span><br><span class="line">日期类型yearYYYY  <span class="number">1901</span>~<span class="number">2155</span></span><br><span class="line">timeHH:MM:SS  -<span class="number">838</span>:<span class="number">59</span>:<span class="number">59</span>~<span class="number">838</span>:<span class="number">59</span>:<span class="number">59</span></span><br><span class="line">dateYYYY-MM-DD <span class="number">1000</span>-<span class="number">01</span>-<span class="number">01</span>~<span class="number">9999</span>-<span class="number">12</span>-<span class="number">3</span></span><br><span class="line">datetime YYYY-MM-DD HH:MM:SS <span class="number">1000</span>-<span class="number">01</span>-<span class="number">01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>~ <span class="number">9999</span>-<span class="number">12</span>-<span class="number">31</span> <span class="number">23</span>:<span class="number">59</span>:<span class="number">59</span></span><br><span class="line">timestampYYYY-MM-DD HH:MM:SS  <span class="number">1970</span>~<span class="number">01</span>~<span class="number">01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> UTC~<span class="number">2038</span>-<span class="number">01</span>-<span class="number">19</span> <span class="number">03</span>:<span class="number">14</span>:<span class="number">07</span>UTC</span><br><span class="line">文本、二进制类型CHAR(M)M为<span class="number">0</span>~<span class="number">255</span>之间的整数</span><br><span class="line">VARCHAR(M)M为<span class="number">0</span>~<span class="number">65535</span>之间的整数</span><br><span class="line">TINYBLOB允许长度<span class="number">0</span>~<span class="number">255</span>字节</span><br><span class="line">BLOB允许长度<span class="number">0</span>~<span class="number">65535</span>字节</span><br><span class="line">MEDIUMBLOB允许长度<span class="number">0</span>~<span class="number">167772150</span>字节</span><br><span class="line">LONGBLOB允许长度<span class="number">0</span>~<span class="number">4294967295</span>字节</span><br><span class="line">TINYTEXT允许长度<span class="number">0</span>~<span class="number">255</span>字节</span><br><span class="line">TEXT允许长度<span class="number">0</span>~<span class="number">65535</span>字节</span><br><span class="line">MEDIUMTEXT允许长度<span class="number">0</span>~<span class="number">167772150</span>字节</span><br><span class="line">LONGTEXT允许长度<span class="number">0</span>~<span class="number">4294967295</span>字节</span><br><span class="line">VARBINARY(M)允许长度<span class="number">0</span>~M个字节的变长字节字符串</span><br><span class="line">BINARY(M)允许长度<span class="number">0</span>~M个字节的定长字节字符串</span><br></pre></td></tr></table></figure></p><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547820640/samples/java%20files/hgdfgfg.png" alt=""></p><h3 id="12创建数据库操作"><a href="#12创建数据库操作" class="headerlink" title="12创建数据库操作"></a>12创建数据库操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">* A: 创建数据库                                                                                                                                                                                                                                                                                    </span><br><span class="line">格式:</span><br><span class="line">* create database 数据库名;</span><br><span class="line">* create database 数据库名 character set 字符集;</span><br><span class="line">例如：</span><br><span class="line">#创建数据库 数据库中数据的编码采用的是安装数据库时指定的默认编码 utf8</span><br><span class="line">CREATE DATABASE day21_1; </span><br><span class="line">#创建数据库 并指定数据库中数据的编码</span><br><span class="line">CREATE DATABASE day21_2 CHARACTER SET utf8;</span><br><span class="line"></span><br><span class="line">* B: 查看数据库</span><br><span class="line">查看数据库MySQL服务器中的所有的数据库:</span><br><span class="line">show databases;</span><br><span class="line">查看某个数据库的定义的信息:</span><br><span class="line">show create database 数据库名;</span><br><span class="line">例如：</span><br><span class="line">show create database day21_1;</span><br><span class="line"></span><br><span class="line">* C: 删除数据库</span><br><span class="line">drop database 数据库名称;</span><br><span class="line">例如：</span><br><span class="line">drop database day21_2;</span><br><span class="line"></span><br><span class="line">* D: 其他的数据库操作命令</span><br><span class="line">切换数据库：</span><br><span class="line">use 数据库名;</span><br><span class="line">例如：</span><br><span class="line">use day21_1;</span><br><span class="line"></span><br><span class="line">* E: 查看正在使用的数据库:</span><br><span class="line"><span class="function">select <span class="title">database</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="13创建数据表格式"><a href="#13创建数据表格式" class="headerlink" title="13创建数据表格式"></a>13创建数据表格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* A:格式：</span><br><span class="line">create table 表名(</span><br><span class="line">   字段名 类型(长度) 约束,</span><br><span class="line">   字段名 类型(长度) 约束</span><br><span class="line">);</span><br><span class="line">例如：</span><br><span class="line">###创建分类表</span><br><span class="line"><span class="function">CREATE TABLE <span class="title">sort</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  sid INT, #分类ID </span></span></span><br><span class="line"><span class="function"><span class="params">  sname VARCHAR(<span class="number">100</span>)</span> #分类名称</span></span><br><span class="line"><span class="function">)</span>;</span><br></pre></td></tr></table></figure><h3 id="14约束"><a href="#14约束" class="headerlink" title="14约束"></a>14约束</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">* A: 约束的作用:                                                                                            <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">create table 表名<span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">   列名 类型(长度)</span> 约束,</span></span><br><span class="line"><span class="function">   列名 类型<span class="params">(长度)</span> 约束</span></span><br><span class="line"><span class="function">)</span>;</span><br><span class="line">限制每一列能写什么数据,不能写什么数据。</span><br><span class="line"></span><br><span class="line">* B: 哪些约束:</span><br><span class="line">主键约束</span><br><span class="line">非空约束</span><br><span class="line">唯一约束</span><br><span class="line">外键约束</span><br><span class="line">格式：</span><br><span class="line"><span class="number">1</span>.在创建表时创建主键，在字段后面加上  primary key.</span><br><span class="line"><span class="function">create table <span class="title">tablename</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">id <span class="keyword">int</span> primary key,</span></span></span><br><span class="line"><span class="function"><span class="params">.......</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">2. 在创建表时创建主键，在表创建的最后来指定主键</span></span><br><span class="line"><span class="function">create table <span class="title">tablename</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">id <span class="keyword">int</span>，</span></span></span><br><span class="line"><span class="function"><span class="params">.......，</span></span></span><br><span class="line"><span class="function"><span class="params">primary key(id)</span></span></span><br><span class="line"><span class="function">)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">3.删除主键：alter table 表名 drop primary key</span>;</span><br><span class="line">  alter table sort drop primary key;</span><br><span class="line"><span class="number">4</span>.主键自动增长：一般主键是自增长的字段，不需要指定。</span><br><span class="line">实现添加自增长语句,主键字段后加auto_increment(只适用MySQL)</span><br><span class="line">例如：</span><br><span class="line">###创建分类表</span><br><span class="line"><span class="function">CREATE TABLE <span class="title">sort</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  sid INT PRIMARY KEY auto_increment, #分类ID </span></span></span><br><span class="line"><span class="function"><span class="params">  sname VARCHAR(<span class="number">100</span>)</span> #分类名称</span></span><br><span class="line"><span class="function">)</span>;</span><br></pre></td></tr></table></figure><h3 id="15SQL代码的保存"><a href="#15SQL代码的保存" class="headerlink" title="15SQL代码的保存"></a>15SQL代码的保存</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* A: 当sql语句执行了，就已经对数据库进行操作了，一般不用保存操作</span><br><span class="line">在SQLyog 中Ctrl + S 保存的是写sql语句。</span><br></pre></td></tr></table></figure><h3 id="16创建用户表"><a href="#16创建用户表" class="headerlink" title="16创建用户表"></a>16创建用户表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* A: 创建用户表:</span><br><span class="line">需求:创建用户表,用户编号,姓名,用户的地址</span><br><span class="line"></span><br><span class="line">* B: SQL语句</span><br><span class="line"><span class="function">CREAT TABLE <span class="title">users</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">uid INT,</span></span></span><br><span class="line"><span class="function"><span class="params">uname VARCHAR(<span class="number">20</span>)</span>,</span></span><br><span class="line"><span class="function">uaddress <span class="title">VARCHAR</span><span class="params">(<span class="number">200</span>)</span></span></span><br><span class="line"><span class="function">)</span>;</span><br></pre></td></tr></table></figure><h3 id="17主键约束"><a href="#17主键约束" class="headerlink" title="17主键约束"></a>17主键约束</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">* A: 主键是用于标识当前记录的字段。它的特点是非空，唯一。</span><br><span class="line">在开发中一般情况下主键是不具备任何含义，只是用于标识当前记录。</span><br><span class="line">* B: 格式：</span><br><span class="line"><span class="number">1</span>.在创建表时创建主键，在字段后面加上  primary key.</span><br><span class="line"><span class="function">create table <span class="title">tablename</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">id <span class="keyword">int</span> primary key,</span></span></span><br><span class="line"><span class="function"><span class="params">.......</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">2. 在创建表时创建主键，在表创建的最后来指定主键</span></span><br><span class="line"><span class="function">create table <span class="title">tablename</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">id <span class="keyword">int</span>，</span></span></span><br><span class="line"><span class="function"><span class="params">.......，</span></span></span><br><span class="line"><span class="function"><span class="params">primary key(id)</span></span></span><br><span class="line"><span class="function">)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">3.删除主键：alter table 表名 drop primary key</span>;</span><br><span class="line">alter table sort drop primary key;</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>.<span class="string">"主键自动增长"</span>：一般主键是<span class="string">"自增长的字段"</span>，不需要指定。</span><br><span class="line"><span class="string">"实现添加自增长语句,主键字段后加auto_increment(只适用MySQL)"</span></span><br></pre></td></tr></table></figure><h3 id="18常见表的操作"><a href="#18常见表的操作" class="headerlink" title="18常见表的操作"></a>18常见表的操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">* A:<span class="string">"查看表"</span>:<span class="string">"查看数据库中的所有表"</span>：</span><br><span class="line"><span class="string">"格式：show tables;"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"查看表结构"</span>：</span><br><span class="line">格式：desc 表名;</span><br><span class="line">例如：desc sort;</span><br><span class="line"></span><br><span class="line">* B:<span class="string">"删除表"</span> </span><br><span class="line">* <span class="string">"格式：drop table 表名;"</span></span><br><span class="line">例如：drop table sort;</span><br></pre></td></tr></table></figure><h3 id="19修改表结构"><a href="#19修改表结构" class="headerlink" title="19修改表结构"></a>19修改表结构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">* A: <span class="string">"修改表添加列"</span></span><br><span class="line"><span class="string">"alter table 表名 add 列名 类型(长度) 约束;"</span></span><br><span class="line">例如：</span><br><span class="line">#1，为分类表添加一个新的字段为 分类描述 varchar(20)</span><br><span class="line"><span class="function">ALTER TABLE sort ADD sdesc <span class="title">VARCHAR</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">* B: <span class="string">"修改表修改列的类型长度及约束"</span></span><br><span class="line"><span class="string">"alter table 表名 modify 列名 类型(长度) 约束; "</span></span><br><span class="line">例如：</span><br><span class="line">#2, 为分类表的分类名称字段进行修改，类型varchar(50) 添加约束 not null</span><br><span class="line"><span class="function">ALTER TABLE sort MODIFY sname <span class="title">VARCHAR</span><span class="params">(<span class="number">50</span>)</span> NOT NULL</span>;</span><br><span class="line"></span><br><span class="line">* C: <span class="string">"修改表修改列名"</span></span><br><span class="line"><span class="string">"alter table 表名 change 旧列名 新列名 类型(长度) 约束; "</span></span><br><span class="line">例如：</span><br><span class="line">#3, 为分类表的分类名称字段进行更换 更换为 snamesname varchar(30)</span><br><span class="line"><span class="function">ALTER TABLE sort CHANGE sname snamename <span class="title">VARCHAR</span><span class="params">(<span class="number">30</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">* D: <span class="string">"修改表删除列"</span></span><br><span class="line"><span class="string">"alter table 表名 drop 列名;"</span></span><br><span class="line">例如：</span><br><span class="line">#4, 删除分类表中snamename这列</span><br><span class="line">ALTER TABLE sort DROP snamename;</span><br><span class="line"></span><br><span class="line">* E: <span class="string">"修改表名"</span></span><br><span class="line"><span class="string">"rename table 表名 to 新表名; "</span></span><br><span class="line">例如：</span><br><span class="line">#5, 为分类表sort 改名成 category</span><br><span class="line">RENAME TABLE sort TO category;</span><br><span class="line"></span><br><span class="line">* F: <span class="string">"修改表的字符集"</span></span><br><span class="line"><span class="string">"salter table 表名 character set 字符集;"</span></span><br><span class="line">例如：</span><br><span class="line">#6, 为分类表 category 的编码表进行修改，修改成 gbk</span><br><span class="line">ALTER TABLE category CHARACTER SET gbk;</span><br></pre></td></tr></table></figure><h3 id="20数据表添加数据-1"><a href="#20数据表添加数据-1" class="headerlink" title="20数据表添加数据_1"></a>20数据表添加数据_1</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">* A:  -- <span class="string">"向表中插入某些列"</span></span><br><span class="line">* 语法：</span><br><span class="line">insert into 表 (列名<span class="number">1</span>,列名<span class="number">2</span>,列名<span class="number">3</span>..) values  (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>..);</span><br><span class="line"></span><br><span class="line">* 举例:</span><br><span class="line"><span class="function">INSERT INTO <span class="title">product</span> <span class="params">(id,pname,price)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">1</span>,<span class="string">'笔记本'</span>,<span class="number">5555.99</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT INTO <span class="title">product</span> <span class="params">(id,pname,price)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">2</span>,<span class="string">'智能手机'</span>,<span class="number">9999</span>)</span></span>;</span><br><span class="line">* 注意:</span><br><span class="line">列表,表名问题</span><br><span class="line">对应问题,个数,数据类型</span><br></pre></td></tr></table></figure><h3 id="21数据表添加数据-2"><a href="#21数据表添加数据-2" class="headerlink" title="21数据表添加数据_2"></a>21数据表添加数据_2</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">* A: <span class="string">"添加数据格式,不考虑主键"</span></span><br><span class="line">insert into 表名 (列名) values (值)</span><br><span class="line">* 举例:</span><br><span class="line"><span class="function">INSERT INTO <span class="title">product</span> <span class="params">(pname,price)</span> <span class="title">VALUE</span><span class="params">(<span class="string">'洗衣机'</span>,<span class="number">800</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* B: <span class="string">"添加数据格式,所有值全给出"</span></span><br><span class="line">格式</span><br><span class="line">insert into 表名 values (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>..); --向表中插入所有列</span><br><span class="line"><span class="function">INSERT INOT product <span class="title">VALUES</span> <span class="params">(<span class="number">4</span>,<span class="string">'微波炉'</span>,<span class="number">300.25</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">* C: <span class="string">"添加数据格式,批量写入"</span></span><br><span class="line">格式:</span><br><span class="line">insert into 表名 (列名<span class="number">1</span>,列名<span class="number">2</span>,列名<span class="number">3</span>) values (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>),(值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>)</span><br><span class="line">举例:</span><br><span class="line"><span class="function">INSERT INTO <span class="title">product</span> <span class="params">(pname,price)</span> VALUES</span></span><br><span class="line"><span class="function"><span class="params">(<span class="string">'智能机器人'</span>,<span class="number">25999.22</span>)</span>,</span></span><br><span class="line"><span class="function"><span class="params">(<span class="string">'彩色电视'</span>,<span class="number">1250.36</span>)</span>,</span></span><br><span class="line"><span class="function"><span class="params">(<span class="string">'沙发'</span>,<span class="number">58899.02</span>)</span></span></span><br></pre></td></tr></table></figure><h3 id="22更新数据"><a href="#22更新数据" class="headerlink" title="22更新数据"></a>22更新数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">* A: <span class="string">"用来修改指定条件的数据，将满足条件的记录指定列修改为指定值"</span></span><br><span class="line">语法：</span><br><span class="line"><span class="string">"update 表名 set 字段名=值,字段名=值;"</span></span><br><span class="line"><span class="string">"update 表名 set 字段名=值,字段名=值 where 条件;"</span></span><br><span class="line">* B: 注意：</span><br><span class="line">* <span class="string">"</span></span><br><span class="line"><span class="string">列名的类型与修改的值要一致.</span></span><br><span class="line"><span class="string">修改值得时候不能超过最大长度.</span></span><br><span class="line"><span class="string">值如果是字符串或者日期需要加’’.</span></span><br><span class="line"><span class="string">  "</span></span><br><span class="line"></span><br><span class="line">* C: 例如：</span><br><span class="line">#1，将指定的sname字段中的值 修改成 日用品</span><br><span class="line">UPDATE sort SET sname=<span class="string">'日用品'</span>;</span><br><span class="line">#2, 将sid为s002的记录中的sname改成 日用品</span><br><span class="line">UPDATE sort SET sname=<span class="string">'日用品'</span> WHERE sid=<span class="string">'s002'</span>;</span><br><span class="line">UPDATE sort SET sname=<span class="string">'日用品'</span> WHERE sid=<span class="string">'s003'</span>;</span><br><span class="line"></span><br><span class="line">update users set username=<span class="string">'欧珀手机 R19'</span>,userprice=<span class="number">5612</span> where userid =<span class="number">3</span>;</span><br><span class="line"><span class="string">"修改2行"</span>：</span><br><span class="line">update users set username=<span class="string">'欧珀手机 R19'</span>,userprice=<span class="number">5612</span> where userid =<span class="number">3</span> or userid=<span class="number">6</span>;</span><br><span class="line"><span class="string">"修改多行"</span>：</span><br><span class="line">update users set username=<span class="string">'欧珀手机 R19'</span>,userprice=<span class="number">8888</span> <span class="function">where userid <span class="title">in</span> <span class="params">(<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">与 AND</span><br><span class="line">或 OR</span><br><span class="line">非 NOT</span><br><span class="line">等于 =</span><br><span class="line">不等于 &lt;&gt;</span><br><span class="line">小于等于 &lt;= </span><br><span class="line"><span class="function">where userid <span class="title">in</span> <span class="params">(<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>)</span> 表示<span class="params">()</span>里的数据都采用</span></span><br></pre></td></tr></table></figure><h3 id="23删除数据"><a href="#23删除数据" class="headerlink" title="23删除数据"></a>23删除数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">* A: 语法：</span><br><span class="line"><span class="number">1</span>、<span class="string">"delete from 表名 where 条件;"</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、<span class="string">"truncate table 表名;"</span></span><br><span class="line"></span><br><span class="line"> * B: 面试题：</span><br><span class="line">删除表中所有记录使用delete from 表名; 还是用truncate table 表名;</span><br><span class="line"><span class="string">"删除方式：delete 一条一条删除，不清空auto_increment记录数。"</span></span><br><span class="line"></span><br><span class="line"><span class="string">" truncate 直接将表删除，重新建表，auto_increment将置为零，从新开始。"</span></span><br><span class="line"></span><br><span class="line"> * C: 例如：</span><br><span class="line">DELETE FROM sort WHERE sname=<span class="string">'日用品'</span>;</span><br><span class="line"></span><br><span class="line"><span class="string">"#表数据清空"</span></span><br><span class="line">DELETE FROM sort;</span><br></pre></td></tr></table></figure><h3 id="24命令行乱码问题"><a href="#24命令行乱码问题" class="headerlink" title="24命令行乱码问题"></a>24命令行乱码问题</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">A: 问题</span><br><span class="line">我们在dos命令行操作中文时，会报错</span><br><span class="line"><span class="function">insert into <span class="title">user</span><span class="params">(username,password)</span> <span class="title">values</span><span class="params">(‘张三’,’<span class="number">123</span>’)</span></span>;</span><br><span class="line">ERROR <span class="number">1366</span> (HY000): Incorrect string value: <span class="string">'\xD5\xC5\xC8\xFD'</span> <span class="keyword">for</span> column <span class="string">'username'</span> at row <span class="number">1</span></span><br><span class="line">B: 原因:因为mysql的客户端编码的问题我们的是utf8,而系统的cmd窗口编码是gbk</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、解决方案（临时解决方案）:修改mysql客户端编码。</span><br><span class="line">show variables like <span class="string">'character%'</span>; 查看所有mysql的编码</span><br><span class="line">client connetion result 和客户端相关</span><br><span class="line">database server system 和服务器端相关 </span><br><span class="line"><span class="string">"将客户端编码修改为gbk"</span>.</span><br><span class="line"><span class="string">"set character_set_results=gbk; / set names gbk;"</span></span><br><span class="line">以上操作，<span class="string">"只针对当前窗口有效果"</span>，如果关闭了服务器便失效。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、如果想要永久修改，通过以下方式:</span><br><span class="line"><span class="string">"在mysql安装目录下有my.ini文件"</span></span><br><span class="line"><span class="string">"default-character-set=gbk 客户端编码设置"</span></span><br><span class="line"><span class="string">"character-set-server=utf8 服务器端编码设置"</span></span><br><span class="line">注意:修改完成配置文件，重启服务</span><br></pre></td></tr></table></figure><h3 id="25数据表和测试数据准备"><a href="#25数据表和测试数据准备" class="headerlink" title="25数据表和测试数据准备"></a>25数据表和测试数据准备</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">* A: 查询语句，在开发中使用的次数最多，此处使用“zhangwu” 账务表。</span><br><span class="line">创建账务表：</span><br><span class="line"><span class="function">CREATE TABLE <span class="title">zhangwu</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  id INT PRIMARY KEY AUTO_INCREMENT, -- 账务ID</span></span></span><br><span class="line"><span class="function"><span class="params">  zname VARCHAR(<span class="number">200</span>)</span>, -- 账务名称</span></span><br><span class="line"><span class="function">  zmoney DOUBLE -- 金额</span></span><br><span class="line"><span class="function">)</span>;</span><br><span class="line">* B: 插入表记录：</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">zhangwu</span><span class="params">(id,name,money)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">1</span>,<span class="string">'吃饭支出'</span>,<span class="number">247</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">zhangwu</span><span class="params">(id,name,money)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">2</span>,<span class="string">'工资收入'</span>,<span class="number">12345</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">zhangwu</span><span class="params">(id,name,money)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">3</span>,<span class="string">'服装支出'</span>,<span class="number">1000</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">zhangwu</span><span class="params">(id,name,money)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">4</span>,<span class="string">'吃饭支出'</span>,<span class="number">325</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">zhangwu</span><span class="params">(id,name,money)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">5</span>,<span class="string">'股票收入'</span>,<span class="number">8000</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">zhangwu</span><span class="params">(id,name,money)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">6</span>,<span class="string">'打麻将支出'</span>,<span class="number">8000</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT  INTO <span class="title">zhangwu</span><span class="params">(id,name,money)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">7</span>,<span class="keyword">null</span>,<span class="number">5000</span>)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="26数据的基本查询"><a href="#26数据的基本查询" class="headerlink" title="26数据的基本查询"></a>26数据的基本查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">* A: <span class="string">"查询指定字段信息"</span></span><br><span class="line"><span class="string">"select 字段1,字段2,...from 表名;"</span></span><br><span class="line">例如：</span><br><span class="line">select id,name from zhangwu;</span><br><span class="line"></span><br><span class="line">* B: <span class="string">"查询表中所有字段"</span></span><br><span class="line"><span class="string">"select * from 表名; "</span></span><br><span class="line">例如：</span><br><span class="line">select * from zhangwu; </span><br><span class="line">注意:使用<span class="string">"*"</span>在练习、学习过程中可以使用，<span class="string">"在实际开发中，不推荐使用"</span>。</span><br><span class="line">原因，要查询的字段信息不明确，若字段数量很多，会导致查询速度很慢。</span><br><span class="line"></span><br><span class="line">* C: <span class="string">"distinct用于去除重复记录"</span></span><br><span class="line"><span class="string">"select distinct 字段 from 表名;"</span></span><br><span class="line">例如：</span><br><span class="line">select distinct money from zhangwu;</span><br><span class="line"></span><br><span class="line">* D: <span class="string">"别名查询，使用的as关键字，as可以省略的."</span></span><br><span class="line">别名可以给表中的字段，表设置别名。 当查询语句复杂时，使用别名可以极大的简便操作。</span><br><span class="line"></span><br><span class="line"><span class="string">"表别名格式"</span>: </span><br><span class="line"><span class="string">"select * from 表名 as 别名;"</span></span><br><span class="line">或</span><br><span class="line"><span class="string">"select * from 表名 别名;"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"列别名格式"</span>：</span><br><span class="line"><span class="string">"select 字段名 as 别名 from 表名;"</span></span><br><span class="line">或</span><br><span class="line"><span class="string">"select 字段名 别名 from 表名;"</span></span><br><span class="line">例如</span><br><span class="line">表别名：</span><br><span class="line">select * from zhangwu as zw;</span><br><span class="line">列别名：</span><br><span class="line">select money as m from zhangwu;</span><br><span class="line">select zname as <span class="string">'重新命名列'</span> from zhangwu;</span><br><span class="line">或</span><br><span class="line">select money m from zhangwu;</span><br><span class="line"></span><br><span class="line">我们在sql语句的操作中，可以直接对列进行运算。</span><br><span class="line">例如：将所有账务的金额+<span class="number">10000</span>元进行显示.</span><br><span class="line">SELECT DISTINCT zmoney+<span class="number">1000</span> as <span class="string">'资金求和'</span> FROM zhangwu;</span><br></pre></td></tr></table></figure><h3 id="27数据的条件查询-1"><a href="#27数据的条件查询-1" class="headerlink" title="27数据的条件查询_1"></a>27数据的条件查询_1</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"> * A:条件查询</span><br><span class="line"><span class="string">"where语句表条件过滤"</span>。满足条件操作，不满足不操作，多用于数据的查询与修改。</span><br><span class="line"></span><br><span class="line"> * B : 格式 :</span><br><span class="line"><span class="string">"select 字段  from 表名  where 条件;"</span></span><br><span class="line"> </span><br><span class="line"> * C: <span class="keyword">while</span>条件的种类如下：</span><br><span class="line">比较运算符</span><br><span class="line">&gt;  &lt;  &lt;=   &gt;=   =  &lt;&gt;---------- 大于、小于、大于(小于)等于、<span class="string">"不等于"</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————</span><br><span class="line">BETWEEN  ...AND...      -----------显示在某一区间的值(<span class="string">"含头含尾"</span>)</span><br><span class="line">————————————————————————————————————————————————————————————————————————</span><br><span class="line">IN(set)         -----------<span class="string">"显示在in列表中的值"</span>，例：in(<span class="number">100</span>,<span class="number">200</span>)</span><br><span class="line">————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="string">"LIKE 通配符"</span>   -----------<span class="string">"模糊查询"</span>，Like语句中有两个通配符：</span><br><span class="line"><span class="string">"% 用来匹配多个字符"</span>；例first_name like ‘a%’;</span><br><span class="line"><span class="string">"_ 用来匹配一个字符"</span>。例first_name like ‘a_’;</span><br><span class="line">————————————————————————————————————————————————————————————————————————</span><br><span class="line">IS NULL ------------判断是否为空</span><br><span class="line">is <span class="keyword">null</span>; 判断为空</span><br><span class="line">is not <span class="keyword">null</span>; 判断不为空</span><br><span class="line">————————————————————————————————————————————————————————————————————————</span><br><span class="line"></span><br><span class="line">* D 逻辑运算符</span><br><span class="line">and                  ------------ 多个条件同时成立</span><br><span class="line">or------------ 多个条件任一成立</span><br><span class="line">not------------ 不成立，例：<span class="function">where <span class="title">not</span><span class="params">(salary&gt;<span class="number">100</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">* E: 例如：</span><br><span class="line">查询所有吃饭支出记录</span><br><span class="line">SELECT * FROM zhangwu WHERE name = <span class="string">'吃饭支出'</span>;</span><br><span class="line"></span><br><span class="line">查询出金额大于<span class="number">1000</span>的信息</span><br><span class="line">SELECT * FROM zhangwu WHERE money &gt;<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">查询出金额在<span class="number">2000</span>-<span class="number">5000</span>之间的账务信息</span><br><span class="line">SELECT * FROM zhangwu WHERE money &gt;=<span class="number">2000</span> AND money &lt;=<span class="number">5000</span>;</span><br><span class="line">或</span><br><span class="line">SELECT * FROM zhangwu WHERE money BETWEEN <span class="number">2000</span> AND <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line">查询出金额是<span class="number">1000</span>或<span class="number">5000</span>或<span class="number">3500</span>的商品信息</span><br><span class="line">SELECT * FROM zhangwu WHERE money =<span class="number">1000</span> OR money =<span class="number">5000</span> OR money =<span class="number">3500</span>;</span><br><span class="line">或</span><br><span class="line">SELECT * <span class="function">FROM zhangwu WHERE money <span class="title">IN</span><span class="params">(<span class="number">1000</span>,<span class="number">5000</span>,<span class="number">3500</span>)</span></span>;</span><br></pre></td></tr></table></figure><p><img src="https://res.cloudinary.com/dpvywdzxv/image/upload/v1547903336/samples/java%20files/02.120.10.jpg" alt=""></p><h3 id="28数据的条件查询-2"><a href="#28数据的条件查询-2" class="headerlink" title="28数据的条件查询_2"></a>28数据的条件查询_2</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> * A <span class="string">"模糊查询"</span></span><br><span class="line"><span class="string">"查询出账务名称包含”支出”的账务信息。"</span></span><br><span class="line">SELECT * FROM zhangwu WHERE name LIKE <span class="string">"%支出%"</span>;</span><br><span class="line"></span><br><span class="line"> * B <span class="string">"查询出账务名称中是五个字的账务信息"</span></span><br><span class="line">SELECT * FROM gjp_ledger WHERE ldesc LIKE <span class="string">"_____"</span>; -- 五个下划线_</span><br><span class="line"></span><br><span class="line">* C <span class="string">"查询出账务名称不为null账务信息"</span></span><br><span class="line">SELECT * FROM zhangwu WHERE name IS NOT NULL;</span><br><span class="line">SELECT * <span class="function">FROM zhangwu WHERE <span class="title">NOT</span> <span class="params">(name IS NULL)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="29排序查询"><a href="#29排序查询" class="headerlink" title="29排序查询"></a>29排序查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">* A: 排序查询</span><br><span class="line"> 使用格式</span><br><span class="line">* <span class="string">"通过order by语句，可以将查询出的结果进行排序"</span>。<span class="string">"放置在select语句的"</span><span class="string">"最后"</span>。</span><br><span class="line">* <span class="string">"SELECT * FROM 表名 ORDER BY 字段ASC;"</span></span><br><span class="line">* ASC 升序 (默认)</span><br><span class="line">* DESC 降序</span><br><span class="line"></span><br><span class="line">* B: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  查询,对结果集进行排序</span></span><br><span class="line"><span class="comment">  升序,降序,对指定列排序</span></span><br><span class="line"><span class="comment">  order by 列名 [desc][asc]</span></span><br><span class="line"><span class="comment">  desc 降序</span></span><br><span class="line"><span class="comment">  asc  升序排列,可以不写</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">-- 查询账务表,价格进行升序</span><br><span class="line"><span class="string">"SELECT * FROM zhangwu ORDER BY zmoney ASC"</span></span><br><span class="line"></span><br><span class="line">-- 查询账务表,价格进行降序</span><br><span class="line">SELECT * FROM zhangwu ORDER BY zmoney DESC</span><br><span class="line"></span><br><span class="line">-- 查询账务表,查询所有的支出,对金额降序排列</span><br><span class="line">-- <span class="string">"先过滤条件 where 查询的结果再排序"</span></span><br><span class="line">SELECT * FROM zhangwu WHERE zname LIKE<span class="string">'%支出%'</span> ORDER BY zmoney DESC</span><br></pre></td></tr></table></figure><h3 id="30聚合函数"><a href="#30聚合函数" class="headerlink" title="30聚合函数"></a>30聚合函数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">* A: 聚合函数</span><br><span class="line">* B: 函数介绍</span><br><span class="line">* 之前我们做的查询都是横向查询，它们都是根据条件一行一行的进行判断，而使用聚合函数查询是纵向查询，</span><br><span class="line">它是对一列的值进行计算，然后返回一个单一的值；另外聚合函数会忽略空值。</span><br><span class="line">* count：统计指定列不为NULL的记录行数；</span><br><span class="line">* sum：计算指定列的数值和，如果指定列；</span><br><span class="line">* max：计算指定列的最大值，如果指定列是字符串类型，那么使用字符串类型不是数值类型，那么计算结果为<span class="number">0</span>排<span class="number">0</span>序运算；</span><br><span class="line">* min：计算指定列的最小值，如果指定列是字符串类型，那么使用字符串排序运算；</span><br><span class="line">* avg：计算指定列的平均值，如果指定列类型不是数值类型，那么计算结果为<span class="number">0</span>；</span><br><span class="line"></span><br><span class="line">* C: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   使用聚合函数查询计算</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">-- count 求和,对表中的数据的个数求和  count(列名)</span><br><span class="line">-- 查询统计账务表中,一共有多少条数据</span><br><span class="line"><span class="function">SELECT <span class="title">COUNT</span><span class="params">(*)</span>AS'count' FROM zhangwu</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">-- sum求和,对一列中数据进行求和计算 <span class="title">sum</span><span class="params">(列名)</span></span></span><br><span class="line"><span class="function">-- 对账务表查询,对所有的金额求和计算</span></span><br><span class="line"><span class="function">SELECT <span class="title">SUM</span><span class="params">(zmoney)</span> FROM zhangwu</span></span><br><span class="line"><span class="function">-- 求和,统计所有支出的总金额</span></span><br><span class="line"><span class="function">SELECT <span class="title">SUM</span><span class="params">(zname)</span> FROM zhangwu WHERE zname LIKE'%收入%'</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">INSERT INTO <span class="title">zhangwu</span> <span class="params">(zname)</span> <span class="title">VALUES</span> <span class="params">(<span class="string">'彩票收入'</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">-- max 函数,对某列数据,获取最大值</span></span><br><span class="line"><span class="function">SELECT <span class="title">MAX</span><span class="params">(zmoney)</span> FROM zhangwu</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">-- avg 函数,计算一个列所有数据的平均数</span></span><br><span class="line"><span class="function">SELECT <span class="title">AVG</span><span class="params">(zmoney)</span>FROM zhangwu</span></span><br></pre></td></tr></table></figure><h3 id="31分组查询"><a href="#31分组查询" class="headerlink" title="31分组查询"></a>31分组查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">* A: 分组查询</span><br><span class="line">* a: 使用格式</span><br><span class="line">* <span class="string">"分组查询是指使用group by字句对查询信息进行分组"</span>,例如：我们要统计出zhanguw表中所有分类账务的总数量,这时就需要使用group by 来对zhangwu表中的账务信息根据parent进行分组操作。</span><br><span class="line">* </span><br><span class="line"><span class="string">"* SELECT 字段1,字段2… FROM 表名 GROUP BY 字段 HAVING 条件;"</span></span><br><span class="line"></span><br><span class="line">* <span class="string">"分组操作中的having子语句"</span>，<span class="string">"是用于在分组后对数据进行过滤的，作用类似于where条件"</span>。</span><br><span class="line">* b: having与where的区别</span><br><span class="line">*<span class="string">" having是在"</span>【分组后】<span class="string">"对数据进行过滤"</span>.</span><br><span class="line">* <span class="string">"where是在"</span>【分组前】<span class="string">"对数据进行过滤"</span></span><br><span class="line">* having后面可以使用分组函数(统计函数)</span><br><span class="line">* where后面不可以使用分组函数。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> * B: 案例代码</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">查询所有的数据</span></span><br><span class="line"><span class="comment">吃饭支出 共计多少</span></span><br><span class="line"><span class="comment">工资收入 共计多少</span></span><br><span class="line"><span class="comment">服装支出 共计多少</span></span><br><span class="line"><span class="comment">股票收入 共计多少</span></span><br><span class="line"><span class="comment">打麻将支出 共计多少钱</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">分组查询:  group by 被分组的列名</span></span><br><span class="line"><span class="comment">必须跟随聚合函数</span></span><br><span class="line"><span class="comment">select 查询的时候,被分组的列,要出现在select 选择列的后面</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">  <span class="function">SELECT <span class="title">SUM</span><span class="params">(zmoney)</span>,zname FROM zhangwu GROUP BY zname</span></span><br><span class="line"><span class="function">  </span></span><br><span class="line"><span class="function">-- 对zname内容进行分组查询求和,但是只要支出</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">SELECT <span class="title">SUM</span><span class="params">(zmoney)</span>AS 'getsum',zname FROM zhangwu WHERE zname LIKE'%支出%'</span></span><br><span class="line"><span class="function">GROUP BY zname</span></span><br><span class="line"><span class="function">ORDER BY getsum DESC</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">-- 对zname内容进行分组查询求和,但是只要支出, 显示金额大于5000</span></span><br><span class="line"><span class="function">-- 结果集是分组查询后,再次进行筛选,不能使用where, 分组后再次过滤,关键字 having</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">SELECT <span class="title">SUM</span><span class="params">(zmoney)</span>AS 'getsum',zname FROM zhangwu WHERE zname LIKE'%支出%'</span></span><br><span class="line"><span class="function">GROUP BY zname HAVING getsum&gt;5000</span></span><br></pre></td></tr></table></figure><h3 id="32总结"><a href="#32总结" class="headerlink" title="32总结"></a>32总结</h3>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dpvywdzxv/image/upload/v1547297629/samples/java%20files/photo-1544729812-46958d74295c.jpg&quot; alt=&quot;&quot; style=&quot;width:100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;1.MySQL数据库&lt;br&gt;2.SQL语句&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://leesen998.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="java" scheme="https://leesen998.github.io/tags/java/"/>
    
  </entry>
  
</feed>
